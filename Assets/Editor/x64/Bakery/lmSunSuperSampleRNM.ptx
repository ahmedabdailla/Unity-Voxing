//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<180>;
	.reg .b16 	%rs<182>;
	.reg .f32 	%f<1493>;
	.reg .b32 	%r<500>;
	.reg .b64 	%rd<315>;


	mov.u64 	%rd314, __local_depot0;
	cvta.local.u64 	%SP, %rd314;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd29, %r107;
	cvt.u64.u32	%rd30, %r108;
	mov.u64 	%rd33, uvnormal;
	cvta.global.u64 	%rd28, %rd33;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r105, %r106, %rd29, %rd30, %rd32, %rd32);
	// inline asm
	ld.u32 	%r1, [%rd27];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs14, %rs1, 255;
	cvt.u16.u32	%rs15, %r1;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p6, %rs16, 0;
	mov.f32 	%f1427, 0f00000000;
	mov.f32 	%f1428, %f1427;
	mov.f32 	%f1429, %f1427;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs17, [%rd27+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f322, %rs19;
	div.rn.f32 	%f323, %f322, 0f437F0000;
	fma.rn.f32 	%f324, %f323, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f325, %rs17;
	div.rn.f32 	%f326, %f325, 0f437F0000;
	fma.rn.f32 	%f327, %f326, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f328, %rs14;
	div.rn.f32 	%f329, %f328, 0f437F0000;
	fma.rn.f32 	%f330, %f329, 0f40000000, 0fBF800000;
	mul.f32 	%f331, %f327, %f327;
	fma.rn.f32 	%f332, %f324, %f324, %f331;
	fma.rn.f32 	%f333, %f330, %f330, %f332;
	sqrt.rn.f32 	%f334, %f333;
	rcp.rn.f32 	%f335, %f334;
	mul.f32 	%f1427, %f324, %f335;
	mul.f32 	%f1428, %f327, %f335;
	mul.f32 	%f1429, %f330, %f335;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p7, %f1428, 0f00000000;
	setp.eq.f32	%p8, %f1427, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f1429, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_154;
	bra.uni 	BB0_3;

BB0_154:
	ld.global.u32 	%r499, [imageEnabled];
	and.b32  	%r421, %r499, 1;
	setp.eq.b32	%p172, %r421, 1;
	@!%p172 bra 	BB0_156;
	bra.uni 	BB0_155;

BB0_155:
	cvt.u64.u32	%rd215, %r2;
	cvt.u64.u32	%rd216, %r3;
	mov.u64 	%rd219, image;
	cvta.global.u64 	%rd214, %rd219;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r105, %r106, %rd215, %rd216, %rd218, %rd218);
	// inline asm
	mov.u16 	%rs119, 0;
	st.v4.u8 	[%rd213], {%rs119, %rs119, %rs119, %rs119};
	ld.global.u32 	%r499, [imageEnabled];

BB0_156:
	and.b32  	%r424, %r499, 8;
	setp.eq.s32	%p173, %r424, 0;
	@%p173 bra 	BB0_158;

	cvt.u64.u32	%rd223, %r3;
	cvt.u64.u32	%rd222, %r2;
	mov.u64 	%rd226, image_Mask;
	cvta.global.u64 	%rd221, %rd226;
	mov.u64 	%rd225, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r105, %r105, %rd222, %rd223, %rd225, %rd225);
	// inline asm
	mov.f32 	%f1392, 0f00000000;
	cvt.rzi.u32.f32	%r427, %f1392;
	cvt.u16.u32	%rs120, %r427;
	mov.u16 	%rs121, 0;
	st.v2.u8 	[%rd220], {%rs120, %rs121};
	ld.global.u32 	%r499, [imageEnabled];

BB0_158:
	cvt.u64.u32	%rd25, %r2;
	cvt.u64.u32	%rd26, %r3;
	and.b32  	%r428, %r499, 4;
	setp.eq.s32	%p174, %r428, 0;
	@%p174 bra 	BB0_162;

	ld.global.u32 	%r429, [additive];
	setp.eq.s32	%p175, %r429, 0;
	@%p175 bra 	BB0_161;

	mov.u64 	%rd239, image_HDR;
	cvta.global.u64 	%rd228, %rd239;
	mov.u32 	%r433, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd228, %r105, %r433, %rd25, %rd26, %rd238, %rd238);
	// inline asm
	ld.v4.u16 	{%rs128, %rs129, %rs130, %rs131}, [%rd227];
	// inline asm
	{  cvt.f32.f16 %f1393, %rs128;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1394, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1395, %rs130;}

	// inline asm
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd228, %r105, %r433, %rd25, %rd26, %rd238, %rd238);
	// inline asm
	add.f32 	%f1396, %f1393, 0f00000000;
	add.f32 	%f1397, %f1394, 0f00000000;
	add.f32 	%f1398, %f1395, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f1398;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f1397;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f1396;}

	// inline asm
	mov.u16 	%rs132, 0;
	st.v4.u16 	[%rd233], {%rs125, %rs126, %rs127, %rs132};
	bra.uni 	BB0_162;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f338, %f1427, %f7;
	mul.f32 	%f339, %f1428, %f8;
	neg.f32 	%f340, %f339;
	sub.f32 	%f341, %f340, %f338;
	mul.f32 	%f342, %f1429, %f9;
	sub.f32 	%f10, %f341, %f342;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd36, %r128;
	cvt.u64.u32	%rd37, %r129;
	mov.u64 	%rd58, uvpos;
	cvta.global.u64 	%rd35, %rd58;
	mov.u32 	%r125, 12;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd36, %rd37, %rd32, %rd32);
	// inline asm
	ld.f32 	%f343, [%rd34+8];
	ld.f32 	%f344, [%rd34+4];
	ld.f32 	%f345, [%rd34];
	mul.f32 	%f346, %f345, 0f3456BF95;
	mul.f32 	%f347, %f344, 0f3456BF95;
	mul.f32 	%f348, %f343, 0f3456BF95;
	abs.f32 	%f349, %f1427;
	div.rn.f32 	%f350, %f346, %f349;
	abs.f32 	%f351, %f1428;
	div.rn.f32 	%f352, %f347, %f351;
	abs.f32 	%f353, %f1429;
	div.rn.f32 	%f354, %f348, %f353;
	abs.f32 	%f355, %f350;
	abs.f32 	%f356, %f352;
	abs.f32 	%f357, %f354;
	mov.f32 	%f358, 0f38D1B717;
	max.f32 	%f359, %f355, %f358;
	max.f32 	%f360, %f356, %f358;
	max.f32 	%f361, %f357, %f358;
	fma.rn.f32 	%f11, %f1427, %f359, %f345;
	fma.rn.f32 	%f12, %f1428, %f360, %f344;
	fma.rn.f32 	%f13, %f1429, %f361, %f343;
	setp.gt.f32	%p12, %f349, %f353;
	neg.f32 	%f362, %f1428;
	selp.f32	%f363, %f362, 0f00000000, %p12;
	neg.f32 	%f364, %f1429;
	selp.f32	%f365, %f1427, %f364, %p12;
	selp.f32	%f366, 0f00000000, %f1428, %p12;
	mul.f32 	%f367, %f365, %f365;
	fma.rn.f32 	%f368, %f363, %f363, %f367;
	fma.rn.f32 	%f369, %f366, %f366, %f368;
	sqrt.rn.f32 	%f370, %f369;
	rcp.rn.f32 	%f371, %f370;
	mul.f32 	%f14, %f363, %f371;
	mul.f32 	%f15, %f365, %f371;
	mul.f32 	%f16, %f366, %f371;
	mul.f32 	%f372, %f1429, %f15;
	mul.f32 	%f373, %f1428, %f16;
	sub.f32 	%f17, %f372, %f373;
	mul.f32 	%f374, %f1427, %f16;
	mul.f32 	%f375, %f1429, %f14;
	sub.f32 	%f18, %f374, %f375;
	mul.f32 	%f376, %f1428, %f14;
	mul.f32 	%f377, %f1427, %f15;
	sub.f32 	%f19, %f376, %f377;
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd43, %r133;
	add.s32 	%r136, %r132, 1;
	ld.global.u32 	%r137, [resolution];
	add.s32 	%r138, %r137, -1;
	min.u32 	%r139, %r136, %r138;
	cvt.u64.u32	%rd42, %r139;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd42, %rd43, %rd32, %rd32);
	// inline asm
	ld.f32 	%f378, [%rd40+8];
	ld.f32 	%f379, [%rd40+4];
	ld.f32 	%f380, [%rd40];
	setp.eq.f32	%p13, %f380, 0f00000000;
	setp.eq.f32	%p14, %f379, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	setp.eq.f32	%p16, %f378, 0f00000000;
	and.pred  	%p17, %p15, %p16;
	selp.f32	%f381, %f345, %f380, %p17;
	selp.f32	%f382, %f344, %f379, %p17;
	selp.f32	%f383, %f343, %f378, %p17;
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	add.s32 	%r144, %r141, 1;
	ld.global.u32 	%r145, [resolution+4];
	add.s32 	%r146, %r145, -1;
	min.u32 	%r147, %r144, %r146;
	cvt.u64.u32	%rd48, %r140;
	cvt.u64.u32	%rd49, %r147;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd48, %rd49, %rd32, %rd32);
	// inline asm
	ld.f32 	%f384, [%rd46+8];
	ld.f32 	%f385, [%rd46+4];
	ld.f32 	%f386, [%rd46];
	setp.eq.f32	%p18, %f386, 0f00000000;
	setp.eq.f32	%p19, %f385, 0f00000000;
	and.pred  	%p20, %p18, %p19;
	setp.eq.f32	%p21, %f384, 0f00000000;
	and.pred  	%p22, %p20, %p21;
	selp.f32	%f387, %f345, %f386, %p22;
	selp.f32	%f388, %f344, %f385, %p22;
	selp.f32	%f389, %f343, %f384, %p22;
	sub.f32 	%f390, %f381, %f345;
	sub.f32 	%f391, %f382, %f344;
	sub.f32 	%f392, %f383, %f343;
	sub.f32 	%f393, %f387, %f345;
	sub.f32 	%f394, %f388, %f344;
	sub.f32 	%f395, %f389, %f343;
	abs.f32 	%f396, %f390;
	abs.f32 	%f397, %f393;
	max.f32 	%f398, %f396, %f397;
	abs.f32 	%f399, %f391;
	abs.f32 	%f400, %f394;
	max.f32 	%f401, %f399, %f400;
	abs.f32 	%f402, %f392;
	abs.f32 	%f403, %f395;
	max.f32 	%f404, %f402, %f403;
	max.f32 	%f405, %f398, %f401;
	max.f32 	%f406, %f405, %f404;
	setp.neu.f32	%p23, %f390, 0f00000000;
	setp.neu.f32	%p24, %f391, 0f00000000;
	or.pred  	%p25, %p23, %p24;
	setp.neu.f32	%p26, %f392, 0f00000000;
	setp.neu.f32	%p27, %f393, 0f00000000;
	setp.neu.f32	%p28, %f394, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f395, 0f00000000;
	or.pred  	%p31, %p29, %p30;
	or.pred  	%p32, %p25, %p26;
	and.pred  	%p33, %p32, %p31;
	selp.f32	%f20, %f406, 0f00000000, %p33;
	abs.f32 	%f407, %f7;
	abs.f32 	%f408, %f9;
	setp.gt.f32	%p34, %f407, %f408;
	neg.f32 	%f409, %f8;
	neg.f32 	%f410, %f9;
	selp.f32	%f411, %f409, 0f00000000, %p34;
	selp.f32	%f412, %f7, %f410, %p34;
	selp.f32	%f413, 0f00000000, %f8, %p34;
	mul.f32 	%f414, %f412, %f412;
	fma.rn.f32 	%f415, %f411, %f411, %f414;
	fma.rn.f32 	%f416, %f413, %f413, %f415;
	sqrt.rn.f32 	%f417, %f416;
	rcp.rn.f32 	%f418, %f417;
	mul.f32 	%f21, %f411, %f418;
	mul.f32 	%f22, %f412, %f418;
	mul.f32 	%f23, %f413, %f418;
	ld.global.v2.u32 	{%r148, %r149}, [pixelID];
	cvt.u64.u32	%rd54, %r148;
	cvt.u64.u32	%rd55, %r149;
	mov.u64 	%rd59, rnd_seeds;
	cvta.global.u64 	%rd53, %rd59;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd53, %r105, %r106, %rd54, %rd55, %rd32, %rd32);
	// inline asm
	ld.global.u32 	%r468, [samples];
	mov.f32 	%f1432, 0f00000000;
	setp.lt.s32	%p35, %r468, 1;
	@%p35 bra 	BB0_4;

	cvt.rn.f32.s32	%f421, %r468;
	rcp.rn.f32 	%f24, %f421;
	ld.u32 	%r494, [%rd52];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f422, %f17, 0f3E24A490;
	mul.f32 	%f423, %f18, 0f3E24A490;
	mul.f32 	%f424, %f19, 0f3E24A490;
	fma.rn.f32 	%f425, %f20, %f422, %f11;
	fma.rn.f32 	%f426, %f20, %f423, %f12;
	fma.rn.f32 	%f427, %f20, %f424, %f13;
	mul.f32 	%f428, %f14, 0fBECECEDE;
	mul.f32 	%f429, %f15, 0fBECECEDE;
	mul.f32 	%f430, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f428, %f425;
	fma.rn.f32 	%f29, %f20, %f429, %f426;
	fma.rn.f32 	%f30, %f20, %f430, %f427;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f431, %f32, %f32;
	fma.rn.f32 	%f432, %f31, %f31, %f431;
	fma.rn.f32 	%f34, %f33, %f33, %f432;
	mul.f32 	%f433, %f17, 0fBE24A490;
	mul.f32 	%f434, %f18, 0fBE24A490;
	mul.f32 	%f435, %f19, 0fBE24A490;
	fma.rn.f32 	%f436, %f20, %f433, %f11;
	fma.rn.f32 	%f437, %f20, %f434, %f12;
	fma.rn.f32 	%f438, %f20, %f435, %f13;
	mul.f32 	%f439, %f14, 0f3ECACABC;
	mul.f32 	%f440, %f15, 0f3ECACABC;
	mul.f32 	%f441, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f439, %f436;
	fma.rn.f32 	%f36, %f20, %f440, %f437;
	fma.rn.f32 	%f37, %f20, %f441, %f438;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f442, %f39, %f39;
	fma.rn.f32 	%f443, %f38, %f38, %f442;
	fma.rn.f32 	%f41, %f40, %f40, %f443;
	mul.f32 	%f444, %f17, 0f3F23A3A8;
	mul.f32 	%f445, %f18, 0f3F23A3A8;
	mul.f32 	%f446, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f447, %f20, %f444, %f11;
	fma.rn.f32 	%f448, %f20, %f445, %f12;
	fma.rn.f32 	%f449, %f20, %f446, %f13;
	mul.f32 	%f450, %f14, 0f3E24A490;
	mul.f32 	%f451, %f15, 0f3E24A490;
	mul.f32 	%f452, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f450, %f447;
	fma.rn.f32 	%f43, %f20, %f451, %f448;
	fma.rn.f32 	%f44, %f20, %f452, %f449;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f453, %f46, %f46;
	fma.rn.f32 	%f454, %f45, %f45, %f453;
	fma.rn.f32 	%f48, %f47, %f47, %f454;
	mul.f32 	%f455, %f17, 0fBECECEDE;
	mul.f32 	%f456, %f18, 0fBECECEDE;
	mul.f32 	%f457, %f19, 0fBECECEDE;
	fma.rn.f32 	%f458, %f20, %f455, %f11;
	fma.rn.f32 	%f459, %f20, %f456, %f12;
	fma.rn.f32 	%f460, %f20, %f457, %f13;
	mul.f32 	%f461, %f14, 0fBF23A3A9;
	mul.f32 	%f462, %f15, 0fBF23A3A9;
	mul.f32 	%f463, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f461, %f458;
	fma.rn.f32 	%f50, %f20, %f462, %f459;
	fma.rn.f32 	%f51, %f20, %f463, %f460;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f464, %f53, %f53;
	fma.rn.f32 	%f465, %f52, %f52, %f464;
	fma.rn.f32 	%f55, %f54, %f54, %f465;
	mul.f32 	%f466, %f17, 0fBF23A3A9;
	mul.f32 	%f467, %f18, 0fBF23A3A9;
	mul.f32 	%f468, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f469, %f20, %f466, %f11;
	fma.rn.f32 	%f470, %f20, %f467, %f12;
	fma.rn.f32 	%f471, %f20, %f468, %f13;
	mul.f32 	%f472, %f14, 0f3F23A3A8;
	mul.f32 	%f473, %f15, 0f3F23A3A8;
	mul.f32 	%f474, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f472, %f469;
	fma.rn.f32 	%f57, %f20, %f473, %f470;
	fma.rn.f32 	%f58, %f20, %f474, %f471;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f475, %f60, %f60;
	fma.rn.f32 	%f476, %f59, %f59, %f475;
	fma.rn.f32 	%f62, %f61, %f61, %f476;
	mul.f32 	%f477, %f17, 0fBF61E1E3;
	mul.f32 	%f478, %f18, 0fBF61E1E3;
	mul.f32 	%f479, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f480, %f20, %f477, %f11;
	fma.rn.f32 	%f481, %f20, %f478, %f12;
	fma.rn.f32 	%f482, %f20, %f479, %f13;
	mul.f32 	%f483, %f14, 0fBE24A490;
	mul.f32 	%f484, %f15, 0fBE24A490;
	mul.f32 	%f485, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f483, %f480;
	fma.rn.f32 	%f64, %f20, %f484, %f481;
	fma.rn.f32 	%f65, %f20, %f485, %f482;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f486, %f67, %f67;
	fma.rn.f32 	%f487, %f66, %f66, %f486;
	fma.rn.f32 	%f69, %f68, %f68, %f487;
	mul.f32 	%f488, %f17, 0f3ECACABC;
	mul.f32 	%f489, %f18, 0f3ECACABC;
	mul.f32 	%f490, %f19, 0f3ECACABC;
	fma.rn.f32 	%f491, %f20, %f488, %f11;
	fma.rn.f32 	%f492, %f20, %f489, %f12;
	fma.rn.f32 	%f493, %f20, %f490, %f13;
	mul.f32 	%f494, %f14, 0f3F61E1D2;
	mul.f32 	%f495, %f15, 0f3F61E1D2;
	mul.f32 	%f496, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f494, %f491;
	fma.rn.f32 	%f71, %f20, %f495, %f492;
	fma.rn.f32 	%f72, %f20, %f496, %f493;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f497, %f74, %f74;
	fma.rn.f32 	%f498, %f73, %f73, %f497;
	fma.rn.f32 	%f76, %f75, %f75, %f498;
	mul.f32 	%f499, %f17, 0f3F61E1D2;
	mul.f32 	%f500, %f18, 0f3F61E1D2;
	mul.f32 	%f501, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f502, %f20, %f499, %f11;
	fma.rn.f32 	%f503, %f20, %f500, %f12;
	fma.rn.f32 	%f504, %f20, %f501, %f13;
	mul.f32 	%f505, %f14, 0fBF61E1E3;
	mul.f32 	%f506, %f15, 0fBF61E1E3;
	mul.f32 	%f507, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f505, %f502;
	fma.rn.f32 	%f78, %f20, %f506, %f503;
	fma.rn.f32 	%f79, %f20, %f507, %f504;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f508, %f81, %f81;
	fma.rn.f32 	%f509, %f80, %f80, %f508;
	fma.rn.f32 	%f83, %f82, %f82, %f509;
	mul.f32 	%f510, %f7, %f22;
	mul.f32 	%f511, %f8, %f21;
	sub.f32 	%f84, %f511, %f510;
	mul.f32 	%f512, %f9, %f21;
	mul.f32 	%f513, %f7, %f23;
	sub.f32 	%f85, %f513, %f512;
	mul.f32 	%f514, %f8, %f23;
	mul.f32 	%f515, %f9, %f22;
	sub.f32 	%f86, %f515, %f514;
	mov.f32 	%f1432, 0f00000000;
	mov.u32 	%r469, 0;
	abs.f32 	%f516, %f26;
	abs.f32 	%f517, %f25;
	max.f32 	%f518, %f517, %f516;
	abs.f32 	%f519, %f27;
	max.f32 	%f520, %f518, %f519;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1433, %f1432;

BB0_6:
	setp.lt.s32	%p36, %r468, 1;
	@%p36 bra 	BB0_73;

	rcp.rn.f32 	%f522, %f91;
	mul.f32 	%f92, %f522, %f31;
	mul.f32 	%f93, %f522, %f32;
	mul.f32 	%f94, %f522, %f33;
	rcp.rn.f32 	%f523, %f95;
	mul.f32 	%f96, %f523, %f38;
	mul.f32 	%f97, %f523, %f39;
	mul.f32 	%f98, %f523, %f40;
	rcp.rn.f32 	%f524, %f99;
	mul.f32 	%f100, %f524, %f45;
	mul.f32 	%f101, %f524, %f46;
	mul.f32 	%f102, %f524, %f47;
	rcp.rn.f32 	%f525, %f103;
	mul.f32 	%f104, %f525, %f52;
	mul.f32 	%f105, %f525, %f53;
	mul.f32 	%f106, %f525, %f54;
	rcp.rn.f32 	%f526, %f107;
	mul.f32 	%f108, %f526, %f59;
	mul.f32 	%f109, %f526, %f60;
	mul.f32 	%f110, %f526, %f61;
	rcp.rn.f32 	%f527, %f111;
	mul.f32 	%f112, %f527, %f66;
	mul.f32 	%f113, %f527, %f67;
	mul.f32 	%f114, %f527, %f68;
	rcp.rn.f32 	%f528, %f115;
	mul.f32 	%f116, %f528, %f73;
	mul.f32 	%f117, %f528, %f74;
	mul.f32 	%f118, %f528, %f75;
	rcp.rn.f32 	%f529, %f119;
	mul.f32 	%f120, %f529, %f80;
	mul.f32 	%f121, %f529, %f81;
	mul.f32 	%f122, %f529, %f82;
	mov.u32 	%r471, 0;

BB0_8:
	cvt.rn.f32.s32	%f1421, %r469;
	mad.lo.s32 	%r154, %r494, 1664525, 1013904223;
	and.b32  	%r155, %r154, 16777215;
	cvt.rn.f32.u32	%f530, %r155;
	fma.rn.f32 	%f531, %f530, 0f33800000, %f1421;
	mul.f32 	%f532, %f24, %f531;
	mad.lo.s32 	%r11, %r154, 1664525, 1013904223;
	and.b32  	%r156, %r11, 16777215;
	cvt.rn.f32.u32	%f533, %r156;
	cvt.rn.f32.s32	%f534, %r471;
	fma.rn.f32 	%f535, %f533, 0f33800000, %f534;
	mul.f32 	%f536, %f24, %f535;
	sqrt.rn.f32 	%f125, %f532;
	mul.f32 	%f1440, %f536, 0f40C90FDB;
	abs.f32 	%f127, %f1440;
	setp.neu.f32	%p37, %f127, 0f7F800000;
	mov.f32 	%f1434, %f1440;
	@%p37 bra 	BB0_10;

	mov.f32 	%f537, 0f00000000;
	mul.rn.f32 	%f1434, %f1440, %f537;

BB0_10:
	mul.f32 	%f538, %f1434, 0f3F22F983;
	cvt.rni.s32.f32	%r482, %f538;
	cvt.rn.f32.s32	%f539, %r482;
	neg.f32 	%f540, %f539;
	mov.f32 	%f541, 0f3FC90FDA;
	fma.rn.f32 	%f542, %f540, %f541, %f1434;
	mov.f32 	%f543, 0f33A22168;
	fma.rn.f32 	%f544, %f540, %f543, %f542;
	mov.f32 	%f545, 0f27C234C5;
	fma.rn.f32 	%f1435, %f540, %f545, %f544;
	abs.f32 	%f546, %f1434;
	setp.leu.f32	%p38, %f546, 0f47CE4780;
	@%p38 bra 	BB0_21;

	add.u64 	%rd61, %SP, 8;
	cvta.to.local.u64 	%rd310, %rd61;
	mov.b32 	 %r13, %f1434;
	shl.b32 	%r159, %r13, 8;
	or.b32  	%r15, %r159, -2147483648;
	mov.u32 	%r473, 0;
	mov.u64 	%rd311, 0;
	mov.u32 	%r474, %r473;

BB0_12:
	.pragma "nounroll";
	add.u64 	%rd308, %SP, 8;
	cvta.to.local.u64 	%rd307, %rd308;
	shl.b64 	%rd62, %rd311, 2;
	mov.u64 	%rd63, __cudart_i2opi_f;
	add.s64 	%rd64, %rd63, %rd62;
	ld.const.u32 	%r162, [%rd64];
	// inline asm
	{
	mad.lo.cc.u32   %r160, %r162, %r15, %r474;
	madc.hi.u32     %r474, %r162, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd310], %r160;
	add.s32 	%r473, %r473, 1;
	cvt.s64.s32	%rd311, %r473;
	mul.wide.s32 	%rd67, %r473, 4;
	add.s64 	%rd310, %rd307, %rd67;
	setp.ne.s32	%p39, %r473, 6;
	@%p39 bra 	BB0_12;

	mov.b32 	 %r460, %f1434;
	shr.u32 	%r459, %r460, 23;
	add.u64 	%rd309, %SP, 8;
	and.b32  	%r165, %r459, 255;
	add.s32 	%r166, %r165, -128;
	shr.u32 	%r167, %r166, 5;
	cvta.to.local.u64 	%rd69, %rd309;
	st.local.u32 	[%rd69+24], %r474;
	mov.u32 	%r168, 6;
	sub.s32 	%r169, %r168, %r167;
	mul.wide.s32 	%rd70, %r169, 4;
	add.s64 	%rd8, %rd69, %rd70;
	ld.local.u32 	%r475, [%rd8];
	ld.local.u32 	%r476, [%rd8+-4];
	and.b32  	%r23, %r459, 31;
	setp.eq.s32	%p40, %r23, 0;
	@%p40 bra 	BB0_15;

	mov.u32 	%r170, 32;
	sub.s32 	%r171, %r170, %r23;
	shr.u32 	%r172, %r476, %r171;
	shl.b32 	%r173, %r475, %r23;
	add.s32 	%r475, %r172, %r173;
	ld.local.u32 	%r174, [%rd8+-8];
	shr.u32 	%r175, %r174, %r171;
	shl.b32 	%r176, %r476, %r23;
	add.s32 	%r476, %r175, %r176;

BB0_15:
	mov.b32 	 %r463, %f1434;
	and.b32  	%r478, %r463, -2147483648;
	shr.u32 	%r177, %r476, 30;
	shl.b32 	%r178, %r475, 2;
	add.s32 	%r477, %r177, %r178;
	shl.b32 	%r29, %r476, 2;
	shr.u32 	%r179, %r477, 31;
	shr.u32 	%r180, %r475, 30;
	add.s32 	%r30, %r179, %r180;
	setp.eq.s32	%p41, %r179, 0;
	@%p41 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r479, %r29;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r465, %f1434;
	and.b32  	%r464, %r465, -2147483648;
	not.b32 	%r181, %r477;
	neg.s32 	%r479, %r29;
	setp.eq.s32	%p42, %r29, 0;
	selp.u32	%r182, 1, 0, %p42;
	add.s32 	%r477, %r182, %r181;
	xor.b32  	%r478, %r464, -2147483648;

BB0_18:
	mov.b32 	 %r467, %f1434;
	and.b32  	%r466, %r467, -2147483648;
	clz.b32 	%r481, %r477;
	setp.eq.s32	%p43, %r481, 0;
	shl.b32 	%r183, %r477, %r481;
	mov.u32 	%r184, 32;
	sub.s32 	%r185, %r184, %r481;
	shr.u32 	%r186, %r479, %r185;
	add.s32 	%r187, %r186, %r183;
	selp.b32	%r38, %r477, %r187, %p43;
	mov.u32 	%r188, -921707870;
	mul.hi.u32 	%r480, %r38, %r188;
	setp.eq.s32	%p44, %r466, 0;
	neg.s32 	%r189, %r30;
	selp.b32	%r482, %r30, %r189, %p44;
	setp.lt.s32	%p45, %r480, 1;
	@%p45 bra 	BB0_20;

	mul.lo.s32 	%r190, %r38, -921707870;
	shr.u32 	%r191, %r190, 31;
	shl.b32 	%r192, %r480, 1;
	add.s32 	%r480, %r191, %r192;
	add.s32 	%r481, %r481, 1;

BB0_20:
	mov.u32 	%r193, 126;
	sub.s32 	%r194, %r193, %r481;
	shl.b32 	%r195, %r194, 23;
	add.s32 	%r196, %r480, 1;
	shr.u32 	%r197, %r196, 7;
	add.s32 	%r198, %r197, 1;
	shr.u32 	%r199, %r198, 1;
	add.s32 	%r200, %r199, %r195;
	or.b32  	%r201, %r200, %r478;
	mov.b32 	 %f1435, %r201;

BB0_21:
	mul.rn.f32 	%f133, %f1435, %f1435;
	add.s32 	%r46, %r482, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p46, %r47, 0;
	@%p46 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f549, 0f3C08839E;
	mov.f32 	%f550, 0fB94CA1F9;
	fma.rn.f32 	%f1436, %f550, %f133, %f549;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f547, 0fBAB6061A;
	mov.f32 	%f548, 0f37CCF5CE;
	fma.rn.f32 	%f1436, %f548, %f133, %f547;

BB0_24:
	@%p46 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f554, 0fBE2AAAA3;
	fma.rn.f32 	%f555, %f1436, %f133, %f554;
	mov.f32 	%f556, 0f00000000;
	fma.rn.f32 	%f1437, %f555, %f133, %f556;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f551, 0f3D2AAAA5;
	fma.rn.f32 	%f552, %f1436, %f133, %f551;
	mov.f32 	%f553, 0fBF000000;
	fma.rn.f32 	%f1437, %f552, %f133, %f553;

BB0_27:
	fma.rn.f32 	%f1438, %f1437, %f1435, %f1435;
	@%p46 bra 	BB0_29;

	mov.f32 	%f557, 0f3F800000;
	fma.rn.f32 	%f1438, %f1437, %f133, %f557;

BB0_29:
	and.b32  	%r202, %r46, 2;
	setp.eq.s32	%p49, %r202, 0;
	@%p49 bra 	BB0_31;

	mov.f32 	%f558, 0f00000000;
	mov.f32 	%f559, 0fBF800000;
	fma.rn.f32 	%f1438, %f1438, %f559, %f558;

BB0_31:
	abs.f32 	%f1423, %f1440;
	setp.neu.f32	%p179, %f1423, 0f7F800000;
	@%p179 bra 	BB0_33;

	mov.f32 	%f560, 0f00000000;
	mul.rn.f32 	%f1440, %f1440, %f560;

BB0_33:
	mov.f32 	%f1426, 0f27C234C5;
	mov.f32 	%f1425, 0f33A22168;
	mov.f32 	%f1424, 0f3FC90FDA;
	mul.f32 	%f561, %f1440, 0f3F22F983;
	cvt.rni.s32.f32	%r492, %f561;
	cvt.rn.f32.s32	%f562, %r492;
	neg.f32 	%f563, %f562;
	fma.rn.f32 	%f565, %f563, %f1424, %f1440;
	fma.rn.f32 	%f567, %f563, %f1425, %f565;
	fma.rn.f32 	%f1441, %f563, %f1426, %f567;
	abs.f32 	%f569, %f1440;
	setp.leu.f32	%p51, %f569, 0f47CE4780;
	@%p51 bra 	BB0_44;

	add.u64 	%rd72, %SP, 8;
	cvta.to.local.u64 	%rd9, %rd72;
	mov.b32 	 %r49, %f1440;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r205, %r49, 8;
	or.b32  	%r51, %r205, -2147483648;
	mov.u32 	%r483, 0;
	mov.u64 	%rd312, %rd9;
	mov.u64 	%rd313, %rd32;
	mov.u32 	%r484, %r483;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd73, %rd313, 2;
	mov.u64 	%rd74, __cudart_i2opi_f;
	add.s64 	%rd75, %rd74, %rd73;
	ld.const.u32 	%r208, [%rd75];
	// inline asm
	{
	mad.lo.cc.u32   %r206, %r208, %r51, %r484;
	madc.hi.u32     %r484, %r208, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd312], %r206;
	add.s32 	%r483, %r483, 1;
	cvt.s64.s32	%rd313, %r483;
	mul.wide.s32 	%rd76, %r483, 4;
	add.s64 	%rd312, %rd9, %rd76;
	setp.ne.s32	%p52, %r483, 6;
	@%p52 bra 	BB0_35;

	and.b32  	%r211, %r50, 255;
	add.s32 	%r212, %r211, -128;
	shr.u32 	%r213, %r212, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd78, %rd72;
	st.local.u32 	[%rd78+24], %r484;
	mov.u32 	%r214, 6;
	sub.s32 	%r215, %r214, %r213;
	mul.wide.s32 	%rd79, %r215, 4;
	add.s64 	%rd15, %rd78, %rd79;
	ld.local.u32 	%r485, [%rd15];
	ld.local.u32 	%r486, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p53, %r59, 0;
	@%p53 bra 	BB0_38;

	mov.u32 	%r216, 32;
	sub.s32 	%r217, %r216, %r59;
	shr.u32 	%r218, %r486, %r217;
	shl.b32 	%r219, %r485, %r59;
	add.s32 	%r485, %r218, %r219;
	ld.local.u32 	%r220, [%rd15+-8];
	shr.u32 	%r221, %r220, %r217;
	shl.b32 	%r222, %r486, %r59;
	add.s32 	%r486, %r221, %r222;

BB0_38:
	shr.u32 	%r223, %r486, 30;
	shl.b32 	%r224, %r485, 2;
	add.s32 	%r487, %r223, %r224;
	shl.b32 	%r65, %r486, 2;
	shr.u32 	%r225, %r487, 31;
	shr.u32 	%r226, %r485, 30;
	add.s32 	%r66, %r225, %r226;
	setp.eq.s32	%p54, %r225, 0;
	@%p54 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r488, %r56;
	mov.u32 	%r489, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r227, %r487;
	neg.s32 	%r489, %r65;
	setp.eq.s32	%p55, %r65, 0;
	selp.u32	%r228, 1, 0, %p55;
	add.s32 	%r487, %r228, %r227;
	xor.b32  	%r488, %r56, -2147483648;

BB0_41:
	clz.b32 	%r491, %r487;
	setp.eq.s32	%p56, %r491, 0;
	shl.b32 	%r229, %r487, %r491;
	mov.u32 	%r230, 32;
	sub.s32 	%r231, %r230, %r491;
	shr.u32 	%r232, %r489, %r231;
	add.s32 	%r233, %r232, %r229;
	selp.b32	%r74, %r487, %r233, %p56;
	mov.u32 	%r234, -921707870;
	mul.hi.u32 	%r490, %r74, %r234;
	setp.eq.s32	%p57, %r56, 0;
	neg.s32 	%r235, %r66;
	selp.b32	%r492, %r66, %r235, %p57;
	setp.lt.s32	%p58, %r490, 1;
	@%p58 bra 	BB0_43;

	mul.lo.s32 	%r236, %r74, -921707870;
	shr.u32 	%r237, %r236, 31;
	shl.b32 	%r238, %r490, 1;
	add.s32 	%r490, %r237, %r238;
	add.s32 	%r491, %r491, 1;

BB0_43:
	mov.u32 	%r239, 126;
	sub.s32 	%r240, %r239, %r491;
	shl.b32 	%r241, %r240, 23;
	add.s32 	%r242, %r490, 1;
	shr.u32 	%r243, %r242, 7;
	add.s32 	%r244, %r243, 1;
	shr.u32 	%r245, %r244, 1;
	add.s32 	%r246, %r245, %r241;
	or.b32  	%r247, %r246, %r488;
	mov.b32 	 %f1441, %r247;

BB0_44:
	mul.rn.f32 	%f150, %f1441, %f1441;
	and.b32  	%r82, %r492, 1;
	setp.eq.s32	%p59, %r82, 0;
	@%p59 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f572, 0f3C08839E;
	mov.f32 	%f573, 0fB94CA1F9;
	fma.rn.f32 	%f1442, %f573, %f150, %f572;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f570, 0fBAB6061A;
	mov.f32 	%f571, 0f37CCF5CE;
	fma.rn.f32 	%f1442, %f571, %f150, %f570;

BB0_47:
	@%p59 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f577, 0fBE2AAAA3;
	fma.rn.f32 	%f578, %f1442, %f150, %f577;
	mov.f32 	%f579, 0f00000000;
	fma.rn.f32 	%f1443, %f578, %f150, %f579;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f574, 0f3D2AAAA5;
	fma.rn.f32 	%f575, %f1442, %f150, %f574;
	mov.f32 	%f576, 0fBF000000;
	fma.rn.f32 	%f1443, %f575, %f150, %f576;

BB0_50:
	fma.rn.f32 	%f1444, %f1443, %f1441, %f1441;
	@%p59 bra 	BB0_52;

	mov.f32 	%f580, 0f3F800000;
	fma.rn.f32 	%f1444, %f1443, %f150, %f580;

BB0_52:
	and.b32  	%r248, %r492, 2;
	setp.eq.s32	%p62, %r248, 0;
	@%p62 bra 	BB0_54;

	mov.f32 	%f581, 0f00000000;
	mov.f32 	%f582, 0fBF800000;
	fma.rn.f32 	%f1444, %f1444, %f582, %f581;

BB0_54:
	max.f32 	%f1422, %f520, %f358;
	mul.f32 	%f591, %f125, %f1438;
	add.u64 	%rd80, %SP, 4;
	cvta.to.local.u64 	%rd16, %rd80;
	mul.f32 	%f592, %f591, %f591;
	mov.f32 	%f593, 0f3F800000;
	sub.f32 	%f594, %f593, %f592;
	mul.f32 	%f595, %f125, %f1444;
	mul.f32 	%f596, %f595, %f595;
	sub.f32 	%f597, %f594, %f596;
	mov.f32 	%f598, 0f00000000;
	max.f32 	%f599, %f598, %f597;
	sqrt.rn.f32 	%f600, %f599;
	mul.f32 	%f601, %f21, %f595;
	mul.f32 	%f602, %f22, %f595;
	mul.f32 	%f603, %f23, %f595;
	fma.rn.f32 	%f604, %f86, %f591, %f601;
	fma.rn.f32 	%f605, %f85, %f591, %f602;
	fma.rn.f32 	%f606, %f84, %f591, %f603;
	fma.rn.f32 	%f607, %f7, %f600, %f604;
	fma.rn.f32 	%f608, %f8, %f600, %f605;
	fma.rn.f32 	%f609, %f9, %f600, %f606;
	add.f32 	%f610, %f7, %f607;
	add.f32 	%f611, %f8, %f608;
	add.f32 	%f612, %f9, %f609;
	ld.global.f32 	%f613, [shadowSpread];
	mul.f32 	%f614, %f613, %f610;
	mul.f32 	%f615, %f613, %f611;
	mul.f32 	%f616, %f613, %f612;
	sub.f32 	%f617, %f614, %f7;
	sub.f32 	%f618, %f615, %f8;
	sub.f32 	%f619, %f616, %f9;
	mul.f32 	%f620, %f618, %f618;
	fma.rn.f32 	%f621, %f617, %f617, %f620;
	fma.rn.f32 	%f622, %f619, %f619, %f621;
	sqrt.rn.f32 	%f623, %f622;
	rcp.rn.f32 	%f624, %f623;
	mul.f32 	%f162, %f624, %f617;
	mul.f32 	%f163, %f624, %f618;
	mul.f32 	%f164, %f624, %f619;
	ld.global.u32 	%r252, [imageEnabled];
	and.b32  	%r253, %r252, 32;
	setp.eq.s32	%p63, %r253, 0;
	selp.f32	%f625, 0f3F800000, 0f41200000, %p63;
	mul.f32 	%f589, %f625, %f1422;
	mov.u32 	%r254, 1065353216;
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r249, [root];
	mov.u32 	%r250, 1;
	// inline asm
	call _rt_trace_64, (%r249, %f11, %f12, %f13, %f92, %f93, %f94, %r250, %f589, %f91, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f626, [%rd16];
	mov.u16 	%rs175, 0;
	setp.neu.f32	%p64, %f626, 0f3F800000;
	@%p64 bra 	BB0_56;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r255, [root];
	mov.f32 	%f634, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r255, %f28, %f29, %f30, %f162, %f163, %f164, %r250, %f589, %f634, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f635, [%rd16];
	add.f32 	%f1433, %f1433, %f635;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_56:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r259, [root];
	// inline asm
	call _rt_trace_64, (%r259, %f11, %f12, %f13, %f96, %f97, %f98, %r250, %f589, %f95, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f644, [%rd16];
	setp.neu.f32	%p65, %f644, 0f3F800000;
	@%p65 bra 	BB0_58;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r263, [root];
	mov.f32 	%f652, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r263, %f35, %f36, %f37, %f162, %f163, %f164, %r250, %f589, %f652, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f653, [%rd16];
	add.f32 	%f1433, %f1433, %f653;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_58:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r267, [root];
	// inline asm
	call _rt_trace_64, (%r267, %f11, %f12, %f13, %f100, %f101, %f102, %r250, %f589, %f99, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f662, [%rd16];
	setp.neu.f32	%p66, %f662, 0f3F800000;
	@%p66 bra 	BB0_60;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r271, [root];
	mov.f32 	%f670, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r271, %f42, %f43, %f44, %f162, %f163, %f164, %r250, %f589, %f670, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f671, [%rd16];
	add.f32 	%f1433, %f1433, %f671;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_60:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r275, [root];
	// inline asm
	call _rt_trace_64, (%r275, %f11, %f12, %f13, %f104, %f105, %f106, %r250, %f589, %f103, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f680, [%rd16];
	setp.neu.f32	%p67, %f680, 0f3F800000;
	@%p67 bra 	BB0_62;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r279, [root];
	mov.f32 	%f688, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r279, %f49, %f50, %f51, %f162, %f163, %f164, %r250, %f589, %f688, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f689, [%rd16];
	add.f32 	%f1433, %f1433, %f689;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_62:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r283, [root];
	// inline asm
	call _rt_trace_64, (%r283, %f11, %f12, %f13, %f108, %f109, %f110, %r250, %f589, %f107, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f698, [%rd16];
	setp.neu.f32	%p68, %f698, 0f3F800000;
	@%p68 bra 	BB0_64;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r287, [root];
	mov.f32 	%f706, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r287, %f56, %f57, %f58, %f162, %f163, %f164, %r250, %f589, %f706, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f707, [%rd16];
	add.f32 	%f1433, %f1433, %f707;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_64:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r291, [root];
	// inline asm
	call _rt_trace_64, (%r291, %f11, %f12, %f13, %f112, %f113, %f114, %r250, %f589, %f111, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f716, [%rd16];
	setp.neu.f32	%p69, %f716, 0f3F800000;
	@%p69 bra 	BB0_66;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r295, [root];
	mov.f32 	%f724, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r295, %f63, %f64, %f65, %f162, %f163, %f164, %r250, %f589, %f724, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f725, [%rd16];
	add.f32 	%f1433, %f1433, %f725;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_66:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r299, [root];
	// inline asm
	call _rt_trace_64, (%r299, %f11, %f12, %f13, %f116, %f117, %f118, %r250, %f589, %f115, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f734, [%rd16];
	setp.neu.f32	%p70, %f734, 0f3F800000;
	@%p70 bra 	BB0_68;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r303, [root];
	mov.f32 	%f742, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r303, %f70, %f71, %f72, %f162, %f163, %f164, %r250, %f589, %f742, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f743, [%rd16];
	add.f32 	%f1433, %f1433, %f743;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_68:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r307, [root];
	// inline asm
	call _rt_trace_64, (%r307, %f11, %f12, %f13, %f120, %f121, %f122, %r250, %f589, %f119, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f752, [%rd16];
	setp.neu.f32	%p71, %f752, 0f3F800000;
	@%p71 bra 	BB0_70;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r311, [root];
	mov.f32 	%f760, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r311, %f77, %f78, %f79, %f162, %f163, %f164, %r250, %f589, %f760, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f761, [%rd16];
	add.f32 	%f1433, %f1433, %f761;
	add.f32 	%f1432, %f1432, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_70:
	setp.ne.s16	%p72, %rs175, 0;
	@%p72 bra 	BB0_72;

	add.u64 	%rd96, %SP, 0;
	cvta.to.local.u64 	%rd97, %rd96;
	st.local.u32 	[%rd97], %r254;
	ld.global.u32 	%r315, [root];
	mov.f32 	%f769, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r315, %f11, %f12, %f13, %f162, %f163, %f164, %r250, %f589, %f769, %rd96, %r106);
	// inline asm
	ld.local.f32 	%f770, [%rd97];
	add.f32 	%f1433, %f1433, %f770;
	add.f32 	%f1432, %f1432, 0f3F800000;

BB0_72:
	mad.lo.s32 	%r458, %r494, 1664525, 1013904223;
	mad.lo.s32 	%r494, %r458, 1664525, 1013904223;
	ld.global.u32 	%r468, [samples];
	add.s32 	%r471, %r471, 1;
	setp.lt.s32	%p73, %r471, %r468;
	@%p73 bra 	BB0_8;

BB0_73:
	add.s32 	%r469, %r469, 1;
	setp.lt.s32	%p74, %r469, %r468;
	@%p74 bra 	BB0_6;
	bra.uni 	BB0_74;

BB0_4:
	mov.f32 	%f1433, %f1432;

BB0_74:
	setp.eq.s32	%p75, %r468, 0;
	mov.f32 	%f1468, 0f3F800000;
	@%p75 bra 	BB0_76;

	mov.f32 	%f772, 0f3F800000;
	max.f32 	%f773, %f1432, %f772;
	div.rn.f32 	%f1468, %f1433, %f773;

BB0_76:
	ld.global.f32 	%f776, [directColor];
	mul.f32 	%f208, %f1468, %f776;
	ld.global.f32 	%f777, [directColor+4];
	mul.f32 	%f209, %f1468, %f777;
	ld.global.f32 	%f778, [directColor+8];
	mul.f32 	%f210, %f1468, %f778;
	cvt.sat.f32.f32	%f779, %f10;
	mul.f32 	%f211, %f208, %f779;
	mul.f32 	%f212, %f209, %f779;
	mul.f32 	%f213, %f210, %f779;
	fma.rn.f32 	%f780, %f10, 0f3F000000, 0f3F000000;
	cvt.sat.f32.f32	%f781, %f780;
	add.f32 	%f214, %f781, %f781;
	mov.f32 	%f782, 0f41200000;
	cvt.rzi.f32.f32	%f783, %f782;
	add.f32 	%f784, %f783, %f783;
	mov.f32 	%f785, 0f41A00000;
	sub.f32 	%f786, %f785, %f784;
	abs.f32 	%f215, %f786;
	abs.f32 	%f216, %f214;
	setp.lt.f32	%p76, %f216, 0f00800000;
	mul.f32 	%f787, %f216, 0f4B800000;
	selp.f32	%f788, 0fC3170000, 0fC2FE0000, %p76;
	selp.f32	%f789, %f787, %f216, %p76;
	mov.b32 	 %r319, %f789;
	and.b32  	%r320, %r319, 8388607;
	or.b32  	%r321, %r320, 1065353216;
	mov.b32 	 %f790, %r321;
	shr.u32 	%r322, %r319, 23;
	cvt.rn.f32.u32	%f791, %r322;
	add.f32 	%f792, %f788, %f791;
	setp.gt.f32	%p77, %f790, 0f3FB504F3;
	mul.f32 	%f793, %f790, 0f3F000000;
	add.f32 	%f794, %f792, 0f3F800000;
	selp.f32	%f795, %f793, %f790, %p77;
	selp.f32	%f796, %f794, %f792, %p77;
	add.f32 	%f797, %f795, 0fBF800000;
	add.f32 	%f775, %f795, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f774,%f775;
	// inline asm
	add.f32 	%f798, %f797, %f797;
	mul.f32 	%f799, %f774, %f798;
	mul.f32 	%f800, %f799, %f799;
	mov.f32 	%f801, 0f3C4CAF63;
	mov.f32 	%f802, 0f3B18F0FE;
	fma.rn.f32 	%f803, %f802, %f800, %f801;
	mov.f32 	%f804, 0f3DAAAABD;
	fma.rn.f32 	%f805, %f803, %f800, %f804;
	mul.rn.f32 	%f806, %f805, %f800;
	mul.rn.f32 	%f807, %f806, %f799;
	sub.f32 	%f808, %f797, %f799;
	neg.f32 	%f809, %f799;
	add.f32 	%f810, %f808, %f808;
	fma.rn.f32 	%f811, %f809, %f797, %f810;
	mul.rn.f32 	%f812, %f774, %f811;
	add.f32 	%f813, %f807, %f799;
	sub.f32 	%f814, %f799, %f813;
	add.f32 	%f815, %f807, %f814;
	add.f32 	%f816, %f812, %f815;
	add.f32 	%f817, %f813, %f816;
	sub.f32 	%f818, %f813, %f817;
	add.f32 	%f819, %f816, %f818;
	mov.f32 	%f820, 0f3F317200;
	mul.rn.f32 	%f821, %f796, %f820;
	mov.f32 	%f822, 0f35BFBE8E;
	mul.rn.f32 	%f823, %f796, %f822;
	add.f32 	%f824, %f821, %f817;
	sub.f32 	%f825, %f821, %f824;
	add.f32 	%f826, %f817, %f825;
	add.f32 	%f827, %f819, %f826;
	add.f32 	%f828, %f823, %f827;
	add.f32 	%f829, %f824, %f828;
	sub.f32 	%f830, %f824, %f829;
	add.f32 	%f831, %f828, %f830;
	mul.rn.f32 	%f832, %f785, %f829;
	neg.f32 	%f833, %f832;
	fma.rn.f32 	%f834, %f785, %f829, %f833;
	fma.rn.f32 	%f835, %f785, %f831, %f834;
	mov.f32 	%f1490, 0f00000000;
	fma.rn.f32 	%f837, %f1490, %f829, %f835;
	add.rn.f32 	%f838, %f832, %f837;
	neg.f32 	%f839, %f838;
	add.rn.f32 	%f840, %f832, %f839;
	add.rn.f32 	%f841, %f840, %f837;
	mov.b32 	 %r323, %f838;
	setp.eq.s32	%p78, %r323, 1118925336;
	add.s32 	%r324, %r323, -1;
	mov.b32 	 %f842, %r324;
	add.f32 	%f843, %f841, 0f37000000;
	selp.f32	%f844, %f842, %f838, %p78;
	selp.f32	%f217, %f843, %f841, %p78;
	mul.f32 	%f845, %f844, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f846, %f845;
	mov.f32 	%f847, 0fBF317200;
	fma.rn.f32 	%f848, %f846, %f847, %f844;
	mov.f32 	%f849, 0fB5BFBE8E;
	fma.rn.f32 	%f850, %f846, %f849, %f848;
	mul.f32 	%f851, %f850, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f852, %f851;
	add.f32 	%f853, %f846, 0f00000000;
	ex2.approx.f32 	%f854, %f853;
	mul.f32 	%f855, %f852, %f854;
	setp.lt.f32	%p79, %f844, 0fC2D20000;
	selp.f32	%f856, 0f00000000, %f855, %p79;
	setp.gt.f32	%p80, %f844, 0f42D20000;
	selp.f32	%f1469, 0f7F800000, %f856, %p80;
	setp.eq.f32	%p81, %f1469, 0f7F800000;
	@%p81 bra 	BB0_78;

	fma.rn.f32 	%f1469, %f1469, %f217, %f1469;

BB0_78:
	setp.lt.f32	%p82, %f214, 0f00000000;
	setp.eq.f32	%p83, %f215, 0f3F800000;
	and.pred  	%p1, %p82, %p83;
	mov.b32 	 %r325, %f1469;
	xor.b32  	%r326, %r325, -2147483648;
	mov.b32 	 %f857, %r326;
	selp.f32	%f1471, %f857, %f1469, %p1;
	setp.eq.f32	%p84, %f214, 0f00000000;
	@%p84 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f860, %f214, %f214;
	selp.f32	%f1471, %f860, 0f00000000, %p83;
	bra.uni 	BB0_82;

BB0_79:
	setp.geu.f32	%p85, %f214, 0f00000000;
	@%p85 bra 	BB0_82;

	cvt.rzi.f32.f32	%f859, %f785;
	setp.neu.f32	%p86, %f859, 0f41A00000;
	selp.f32	%f1471, 0f7FFFFFFF, %f1471, %p86;

BB0_82:
	add.f32 	%f861, %f216, 0f41A00000;
	mov.b32 	 %r327, %f861;
	setp.lt.s32	%p88, %r327, 2139095040;
	@%p88 bra 	BB0_87;

	setp.gtu.f32	%p89, %f216, 0f7F800000;
	@%p89 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f1471, %f214, 0f41A00000;
	bra.uni 	BB0_87;

BB0_84:
	setp.neu.f32	%p90, %f216, 0f7F800000;
	@%p90 bra 	BB0_87;

	selp.f32	%f1471, 0fFF800000, 0f7F800000, %p1;

BB0_87:
	setp.eq.f32	%p91, %f214, 0f3F800000;
	selp.f32	%f862, 0f3F800000, %f1471, %p91;
	cvt.sat.f32.f32	%f863, %f862;
	mul.f32 	%f228, %f208, %f863;
	mul.f32 	%f229, %f209, %f863;
	mul.f32 	%f230, %f210, %f863;
	ld.global.u32 	%r497, [imageEnabled];
	and.b32  	%r328, %r497, 8;
	setp.eq.s32	%p92, %r328, 0;
	@%p92 bra 	BB0_100;

	cvt.u64.u32	%rd100, %r2;
	cvt.u64.u32	%rd101, %r3;
	mov.u64 	%rd104, image_Mask;
	cvta.global.u64 	%rd99, %rd104;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r105, %r105, %rd100, %rd101, %rd32, %rd32);
	// inline asm
	mov.f32 	%f866, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f867, %f866;
	fma.rn.f32 	%f868, %f867, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f231, %f868;
	abs.f32 	%f232, %f1468;
	setp.lt.f32	%p93, %f232, 0f00800000;
	mul.f32 	%f869, %f232, 0f4B800000;
	selp.f32	%f870, 0fC3170000, 0fC2FE0000, %p93;
	selp.f32	%f871, %f869, %f232, %p93;
	mov.b32 	 %r331, %f871;
	and.b32  	%r332, %r331, 8388607;
	or.b32  	%r333, %r332, 1065353216;
	mov.b32 	 %f872, %r333;
	shr.u32 	%r334, %r331, 23;
	cvt.rn.f32.u32	%f873, %r334;
	add.f32 	%f874, %f870, %f873;
	setp.gt.f32	%p94, %f872, 0f3FB504F3;
	mul.f32 	%f875, %f872, 0f3F000000;
	add.f32 	%f876, %f874, 0f3F800000;
	selp.f32	%f877, %f875, %f872, %p94;
	selp.f32	%f878, %f876, %f874, %p94;
	add.f32 	%f879, %f877, 0fBF800000;
	add.f32 	%f865, %f877, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f864,%f865;
	// inline asm
	add.f32 	%f880, %f879, %f879;
	mul.f32 	%f881, %f864, %f880;
	mul.f32 	%f882, %f881, %f881;
	fma.rn.f32 	%f885, %f802, %f882, %f801;
	fma.rn.f32 	%f887, %f885, %f882, %f804;
	mul.rn.f32 	%f888, %f887, %f882;
	mul.rn.f32 	%f889, %f888, %f881;
	sub.f32 	%f890, %f879, %f881;
	neg.f32 	%f891, %f881;
	add.f32 	%f892, %f890, %f890;
	fma.rn.f32 	%f893, %f891, %f879, %f892;
	mul.rn.f32 	%f894, %f864, %f893;
	add.f32 	%f895, %f889, %f881;
	sub.f32 	%f896, %f881, %f895;
	add.f32 	%f897, %f889, %f896;
	add.f32 	%f898, %f894, %f897;
	add.f32 	%f899, %f895, %f898;
	sub.f32 	%f900, %f895, %f899;
	add.f32 	%f901, %f898, %f900;
	mul.rn.f32 	%f903, %f878, %f820;
	mul.rn.f32 	%f905, %f878, %f822;
	add.f32 	%f906, %f903, %f899;
	sub.f32 	%f907, %f903, %f906;
	add.f32 	%f908, %f899, %f907;
	add.f32 	%f909, %f901, %f908;
	add.f32 	%f910, %f905, %f909;
	add.f32 	%f911, %f906, %f910;
	sub.f32 	%f912, %f906, %f911;
	add.f32 	%f913, %f910, %f912;
	mov.f32 	%f914, 0f3EE8BA2E;
	mul.rn.f32 	%f915, %f914, %f911;
	neg.f32 	%f916, %f915;
	fma.rn.f32 	%f917, %f914, %f911, %f916;
	fma.rn.f32 	%f918, %f914, %f913, %f917;
	fma.rn.f32 	%f920, %f1490, %f911, %f918;
	add.rn.f32 	%f921, %f915, %f920;
	neg.f32 	%f922, %f921;
	add.rn.f32 	%f923, %f915, %f922;
	add.rn.f32 	%f924, %f923, %f920;
	mov.b32 	 %r335, %f921;
	setp.eq.s32	%p95, %r335, 1118925336;
	add.s32 	%r336, %r335, -1;
	mov.b32 	 %f925, %r336;
	add.f32 	%f926, %f924, 0f37000000;
	selp.f32	%f927, %f925, %f921, %p95;
	selp.f32	%f233, %f926, %f924, %p95;
	mul.f32 	%f928, %f927, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f929, %f928;
	fma.rn.f32 	%f931, %f929, %f847, %f927;
	fma.rn.f32 	%f933, %f929, %f849, %f931;
	mul.f32 	%f934, %f933, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f935, %f934;
	add.f32 	%f936, %f929, 0f00000000;
	ex2.approx.f32 	%f937, %f936;
	mul.f32 	%f938, %f935, %f937;
	setp.lt.f32	%p96, %f927, 0fC2D20000;
	selp.f32	%f939, 0f00000000, %f938, %p96;
	setp.gt.f32	%p97, %f927, 0f42D20000;
	selp.f32	%f1472, 0f7F800000, %f939, %p97;
	setp.eq.f32	%p98, %f1472, 0f7F800000;
	@%p98 bra 	BB0_90;

	fma.rn.f32 	%f1472, %f1472, %f233, %f1472;

BB0_90:
	setp.lt.f32	%p99, %f1468, 0f00000000;
	setp.eq.f32	%p100, %f231, 0f3F800000;
	and.pred  	%p2, %p99, %p100;
	mov.b32 	 %r337, %f1472;
	xor.b32  	%r338, %r337, -2147483648;
	mov.b32 	 %f940, %r338;
	selp.f32	%f1474, %f940, %f1472, %p2;
	setp.eq.f32	%p101, %f1468, 0f00000000;
	@%p101 bra 	BB0_93;
	bra.uni 	BB0_91;

BB0_93:
	add.f32 	%f943, %f1468, %f1468;
	selp.f32	%f1474, %f943, 0f00000000, %p100;
	bra.uni 	BB0_94;

BB0_161:
	mov.u64 	%rd246, image_HDR;
	cvta.global.u64 	%rd241, %rd246;
	mov.u32 	%r435, 8;
	mov.u64 	%rd245, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r105, %r435, %rd25, %rd26, %rd245, %rd245);
	// inline asm
	mov.f32 	%f1399, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f1399;}

	// inline asm
	mov.u16 	%rs134, 0;
	st.v4.u16 	[%rd240], {%rs133, %rs133, %rs133, %rs134};

BB0_162:
	ld.global.u32 	%r436, [additive];
	setp.eq.s32	%p176, %r436, 0;
	@%p176 bra 	BB0_164;

	mov.u64 	%rd259, image_RNM0;
	cvta.global.u64 	%rd248, %rd259;
	mov.u32 	%r440, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd248, %r105, %r440, %rd25, %rd26, %rd258, %rd258);
	// inline asm
	ld.v4.u16 	{%rs141, %rs142, %rs143, %rs144}, [%rd247];
	// inline asm
	{  cvt.f32.f16 %f1400, %rs141;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1401, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1402, %rs143;}

	// inline asm
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd248, %r105, %r440, %rd25, %rd26, %rd258, %rd258);
	// inline asm
	add.f32 	%f1403, %f1400, 0f00000000;
	add.f32 	%f1404, %f1401, 0f00000000;
	add.f32 	%f1405, %f1402, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f1405;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f1404;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f1403;}

	// inline asm
	mov.u16 	%rs145, 0;
	st.v4.u16 	[%rd253], {%rs138, %rs139, %rs140, %rs145};
	bra.uni 	BB0_165;

BB0_164:
	mov.u64 	%rd266, image_RNM0;
	cvta.global.u64 	%rd261, %rd266;
	mov.u32 	%r442, 8;
	mov.u64 	%rd265, 0;
	// inline asm
	call (%rd260), _rt_buffer_get_64, (%rd261, %r105, %r442, %rd25, %rd26, %rd265, %rd265);
	// inline asm
	mov.f32 	%f1406, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f1406;}

	// inline asm
	mov.u16 	%rs147, 0;
	st.v4.u16 	[%rd260], {%rs146, %rs146, %rs146, %rs147};

BB0_165:
	ld.global.u32 	%r443, [additive];
	setp.eq.s32	%p177, %r443, 0;
	@%p177 bra 	BB0_167;

	mov.u64 	%rd279, image_RNM1;
	cvta.global.u64 	%rd268, %rd279;
	mov.u32 	%r447, 8;
	mov.u64 	%rd278, 0;
	// inline asm
	call (%rd267), _rt_buffer_get_64, (%rd268, %r105, %r447, %rd25, %rd26, %rd278, %rd278);
	// inline asm
	ld.v4.u16 	{%rs154, %rs155, %rs156, %rs157}, [%rd267];
	// inline asm
	{  cvt.f32.f16 %f1407, %rs154;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1408, %rs155;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1409, %rs156;}

	// inline asm
	// inline asm
	call (%rd273), _rt_buffer_get_64, (%rd268, %r105, %r447, %rd25, %rd26, %rd278, %rd278);
	// inline asm
	add.f32 	%f1410, %f1407, 0f00000000;
	add.f32 	%f1411, %f1408, 0f00000000;
	add.f32 	%f1412, %f1409, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs153, %f1412;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs152, %f1411;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f1410;}

	// inline asm
	mov.u16 	%rs158, 0;
	st.v4.u16 	[%rd273], {%rs151, %rs152, %rs153, %rs158};
	bra.uni 	BB0_168;

BB0_167:
	mov.u64 	%rd286, image_RNM1;
	cvta.global.u64 	%rd281, %rd286;
	mov.u32 	%r449, 8;
	mov.u64 	%rd285, 0;
	// inline asm
	call (%rd280), _rt_buffer_get_64, (%rd281, %r105, %r449, %rd25, %rd26, %rd285, %rd285);
	// inline asm
	mov.f32 	%f1413, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f1413;}

	// inline asm
	mov.u16 	%rs160, 0;
	st.v4.u16 	[%rd280], {%rs159, %rs159, %rs159, %rs160};

BB0_168:
	ld.global.u32 	%r450, [additive];
	setp.eq.s32	%p178, %r450, 0;
	@%p178 bra 	BB0_170;

	mov.u64 	%rd299, image_RNM2;
	cvta.global.u64 	%rd288, %rd299;
	mov.u32 	%r454, 8;
	mov.u64 	%rd298, 0;
	// inline asm
	call (%rd287), _rt_buffer_get_64, (%rd288, %r105, %r454, %rd25, %rd26, %rd298, %rd298);
	// inline asm
	ld.v4.u16 	{%rs167, %rs168, %rs169, %rs170}, [%rd287];
	// inline asm
	{  cvt.f32.f16 %f1414, %rs167;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1415, %rs168;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1416, %rs169;}

	// inline asm
	// inline asm
	call (%rd293), _rt_buffer_get_64, (%rd288, %r105, %r454, %rd25, %rd26, %rd298, %rd298);
	// inline asm
	add.f32 	%f1417, %f1414, 0f00000000;
	add.f32 	%f1418, %f1415, 0f00000000;
	add.f32 	%f1419, %f1416, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs166, %f1419;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs165, %f1418;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs164, %f1417;}

	// inline asm
	mov.u16 	%rs171, 0;
	st.v4.u16 	[%rd293], {%rs164, %rs165, %rs166, %rs171};
	bra.uni 	BB0_171;

BB0_170:
	mov.u64 	%rd306, image_RNM2;
	cvta.global.u64 	%rd301, %rd306;
	mov.u32 	%r456, 8;
	mov.u64 	%rd305, 0;
	// inline asm
	call (%rd300), _rt_buffer_get_64, (%rd301, %r105, %r456, %rd25, %rd26, %rd305, %rd305);
	// inline asm
	mov.f32 	%f1420, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs172, %f1420;}

	// inline asm
	mov.u16 	%rs173, 0;
	st.v4.u16 	[%rd300], {%rs172, %rs172, %rs172, %rs173};
	bra.uni 	BB0_171;

BB0_91:
	setp.geu.f32	%p102, %f1468, 0f00000000;
	@%p102 bra 	BB0_94;

	cvt.rzi.f32.f32	%f942, %f914;
	setp.neu.f32	%p103, %f942, 0f3EE8BA2E;
	selp.f32	%f1474, 0f7FFFFFFF, %f1474, %p103;

BB0_94:
	add.f32 	%f944, %f232, 0f3EE8BA2E;
	mov.b32 	 %r339, %f944;
	setp.lt.s32	%p105, %r339, 2139095040;
	@%p105 bra 	BB0_99;

	setp.gtu.f32	%p106, %f232, 0f7F800000;
	@%p106 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f1474, %f1468, 0f3EE8BA2E;
	bra.uni 	BB0_99;

BB0_96:
	setp.neu.f32	%p107, %f232, 0f7F800000;
	@%p107 bra 	BB0_99;

	selp.f32	%f1474, 0fFF800000, 0f7F800000, %p2;

BB0_99:
	mul.f32 	%f945, %f1474, 0f437F0000;
	setp.eq.f32	%p108, %f1468, 0f3F800000;
	selp.f32	%f946, 0f437F0000, %f945, %p108;
	cvt.rzi.u32.f32	%r340, %f946;
	cvt.u16.u32	%rs30, %r340;
	mov.u16 	%rs31, 255;
	st.v2.u8 	[%rd98], {%rs30, %rs31};
	ld.global.u32 	%r497, [imageEnabled];

BB0_100:
	and.b32  	%r341, %r497, 1;
	setp.eq.b32	%p109, %r341, 1;
	@!%p109 bra 	BB0_135;
	bra.uni 	BB0_101;

BB0_101:
	mov.f32 	%f949, 0f3E666666;
	cvt.rzi.f32.f32	%f950, %f949;
	fma.rn.f32 	%f951, %f950, 0fC0000000, 0f3EE66666;
	abs.f32 	%f244, %f951;
	abs.f32 	%f245, %f211;
	setp.lt.f32	%p110, %f245, 0f00800000;
	mul.f32 	%f952, %f245, 0f4B800000;
	selp.f32	%f953, 0fC3170000, 0fC2FE0000, %p110;
	selp.f32	%f954, %f952, %f245, %p110;
	mov.b32 	 %r342, %f954;
	and.b32  	%r343, %r342, 8388607;
	or.b32  	%r344, %r343, 1065353216;
	mov.b32 	 %f955, %r344;
	shr.u32 	%r345, %r342, 23;
	cvt.rn.f32.u32	%f956, %r345;
	add.f32 	%f957, %f953, %f956;
	setp.gt.f32	%p111, %f955, 0f3FB504F3;
	mul.f32 	%f958, %f955, 0f3F000000;
	add.f32 	%f959, %f957, 0f3F800000;
	selp.f32	%f960, %f958, %f955, %p111;
	selp.f32	%f961, %f959, %f957, %p111;
	add.f32 	%f962, %f960, 0fBF800000;
	add.f32 	%f948, %f960, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f947,%f948;
	// inline asm
	add.f32 	%f963, %f962, %f962;
	mul.f32 	%f964, %f947, %f963;
	mul.f32 	%f965, %f964, %f964;
	fma.rn.f32 	%f968, %f802, %f965, %f801;
	fma.rn.f32 	%f970, %f968, %f965, %f804;
	mul.rn.f32 	%f971, %f970, %f965;
	mul.rn.f32 	%f972, %f971, %f964;
	sub.f32 	%f973, %f962, %f964;
	neg.f32 	%f974, %f964;
	add.f32 	%f975, %f973, %f973;
	fma.rn.f32 	%f976, %f974, %f962, %f975;
	mul.rn.f32 	%f977, %f947, %f976;
	add.f32 	%f978, %f972, %f964;
	sub.f32 	%f979, %f964, %f978;
	add.f32 	%f980, %f972, %f979;
	add.f32 	%f981, %f977, %f980;
	add.f32 	%f982, %f978, %f981;
	sub.f32 	%f983, %f978, %f982;
	add.f32 	%f984, %f981, %f983;
	mul.rn.f32 	%f986, %f961, %f820;
	mul.rn.f32 	%f988, %f961, %f822;
	add.f32 	%f989, %f986, %f982;
	sub.f32 	%f990, %f986, %f989;
	add.f32 	%f991, %f982, %f990;
	add.f32 	%f992, %f984, %f991;
	add.f32 	%f993, %f988, %f992;
	add.f32 	%f994, %f989, %f993;
	sub.f32 	%f995, %f989, %f994;
	add.f32 	%f996, %f993, %f995;
	mov.f32 	%f997, 0f3EE66666;
	mul.rn.f32 	%f998, %f997, %f994;
	neg.f32 	%f999, %f998;
	fma.rn.f32 	%f1000, %f997, %f994, %f999;
	fma.rn.f32 	%f1001, %f997, %f996, %f1000;
	fma.rn.f32 	%f1003, %f1490, %f994, %f1001;
	add.rn.f32 	%f1004, %f998, %f1003;
	neg.f32 	%f1005, %f1004;
	add.rn.f32 	%f1006, %f998, %f1005;
	add.rn.f32 	%f1007, %f1006, %f1003;
	mov.b32 	 %r346, %f1004;
	setp.eq.s32	%p112, %r346, 1118925336;
	add.s32 	%r347, %r346, -1;
	mov.b32 	 %f1008, %r347;
	add.f32 	%f1009, %f1007, 0f37000000;
	selp.f32	%f1010, %f1008, %f1004, %p112;
	selp.f32	%f246, %f1009, %f1007, %p112;
	mul.f32 	%f1011, %f1010, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1012, %f1011;
	fma.rn.f32 	%f1014, %f1012, %f847, %f1010;
	fma.rn.f32 	%f1016, %f1012, %f849, %f1014;
	mul.f32 	%f1017, %f1016, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1018, %f1017;
	add.f32 	%f1019, %f1012, 0f00000000;
	ex2.approx.f32 	%f1020, %f1019;
	mul.f32 	%f1021, %f1018, %f1020;
	setp.lt.f32	%p113, %f1010, 0fC2D20000;
	selp.f32	%f1022, 0f00000000, %f1021, %p113;
	setp.gt.f32	%p114, %f1010, 0f42D20000;
	selp.f32	%f1475, 0f7F800000, %f1022, %p114;
	setp.eq.f32	%p115, %f1475, 0f7F800000;
	@%p115 bra 	BB0_103;

	fma.rn.f32 	%f1475, %f1475, %f246, %f1475;

BB0_103:
	setp.lt.f32	%p116, %f211, 0f00000000;
	setp.eq.f32	%p117, %f244, 0f3F800000;
	and.pred  	%p3, %p116, %p117;
	mov.b32 	 %r348, %f1475;
	xor.b32  	%r349, %r348, -2147483648;
	mov.b32 	 %f1023, %r349;
	selp.f32	%f1477, %f1023, %f1475, %p3;
	setp.eq.f32	%p118, %f211, 0f00000000;
	@%p118 bra 	BB0_106;
	bra.uni 	BB0_104;

BB0_106:
	add.f32 	%f1026, %f211, %f211;
	selp.f32	%f1477, %f1026, 0f00000000, %p117;
	bra.uni 	BB0_107;

BB0_104:
	setp.geu.f32	%p119, %f211, 0f00000000;
	@%p119 bra 	BB0_107;

	cvt.rzi.f32.f32	%f1025, %f997;
	setp.neu.f32	%p120, %f1025, 0f3EE66666;
	selp.f32	%f1477, 0f7FFFFFFF, %f1477, %p120;

BB0_107:
	add.f32 	%f1027, %f245, 0f3EE66666;
	mov.b32 	 %r350, %f1027;
	setp.lt.s32	%p122, %r350, 2139095040;
	@%p122 bra 	BB0_112;

	setp.gtu.f32	%p123, %f245, 0f7F800000;
	@%p123 bra 	BB0_111;
	bra.uni 	BB0_109;

BB0_111:
	add.f32 	%f1477, %f211, 0f3EE66666;
	bra.uni 	BB0_112;

BB0_109:
	setp.neu.f32	%p124, %f245, 0f7F800000;
	@%p124 bra 	BB0_112;

	selp.f32	%f1477, 0fFF800000, 0f7F800000, %p3;

BB0_112:
	setp.eq.f32	%p125, %f211, 0f3F800000;
	selp.f32	%f257, 0f3F800000, %f1477, %p125;
	abs.f32 	%f258, %f212;
	setp.lt.f32	%p126, %f258, 0f00800000;
	mul.f32 	%f1030, %f258, 0f4B800000;
	selp.f32	%f1031, 0fC3170000, 0fC2FE0000, %p126;
	selp.f32	%f1032, %f1030, %f258, %p126;
	mov.b32 	 %r351, %f1032;
	and.b32  	%r352, %r351, 8388607;
	or.b32  	%r353, %r352, 1065353216;
	mov.b32 	 %f1033, %r353;
	shr.u32 	%r354, %r351, 23;
	cvt.rn.f32.u32	%f1034, %r354;
	add.f32 	%f1035, %f1031, %f1034;
	setp.gt.f32	%p127, %f1033, 0f3FB504F3;
	mul.f32 	%f1036, %f1033, 0f3F000000;
	add.f32 	%f1037, %f1035, 0f3F800000;
	selp.f32	%f1038, %f1036, %f1033, %p127;
	selp.f32	%f1039, %f1037, %f1035, %p127;
	add.f32 	%f1040, %f1038, 0fBF800000;
	add.f32 	%f1029, %f1038, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1028,%f1029;
	// inline asm
	add.f32 	%f1041, %f1040, %f1040;
	mul.f32 	%f1042, %f1028, %f1041;
	mul.f32 	%f1043, %f1042, %f1042;
	fma.rn.f32 	%f1046, %f802, %f1043, %f801;
	fma.rn.f32 	%f1048, %f1046, %f1043, %f804;
	mul.rn.f32 	%f1049, %f1048, %f1043;
	mul.rn.f32 	%f1050, %f1049, %f1042;
	sub.f32 	%f1051, %f1040, %f1042;
	neg.f32 	%f1052, %f1042;
	add.f32 	%f1053, %f1051, %f1051;
	fma.rn.f32 	%f1054, %f1052, %f1040, %f1053;
	mul.rn.f32 	%f1055, %f1028, %f1054;
	add.f32 	%f1056, %f1050, %f1042;
	sub.f32 	%f1057, %f1042, %f1056;
	add.f32 	%f1058, %f1050, %f1057;
	add.f32 	%f1059, %f1055, %f1058;
	add.f32 	%f1060, %f1056, %f1059;
	sub.f32 	%f1061, %f1056, %f1060;
	add.f32 	%f1062, %f1059, %f1061;
	mul.rn.f32 	%f1064, %f1039, %f820;
	mul.rn.f32 	%f1066, %f1039, %f822;
	add.f32 	%f1067, %f1064, %f1060;
	sub.f32 	%f1068, %f1064, %f1067;
	add.f32 	%f1069, %f1060, %f1068;
	add.f32 	%f1070, %f1062, %f1069;
	add.f32 	%f1071, %f1066, %f1070;
	add.f32 	%f1072, %f1067, %f1071;
	sub.f32 	%f1073, %f1067, %f1072;
	add.f32 	%f1074, %f1071, %f1073;
	mul.rn.f32 	%f1076, %f997, %f1072;
	neg.f32 	%f1077, %f1076;
	fma.rn.f32 	%f1078, %f997, %f1072, %f1077;
	fma.rn.f32 	%f1079, %f997, %f1074, %f1078;
	fma.rn.f32 	%f1081, %f1490, %f1072, %f1079;
	add.rn.f32 	%f1082, %f1076, %f1081;
	neg.f32 	%f1083, %f1082;
	add.rn.f32 	%f1084, %f1076, %f1083;
	add.rn.f32 	%f1085, %f1084, %f1081;
	mov.b32 	 %r355, %f1082;
	setp.eq.s32	%p128, %r355, 1118925336;
	add.s32 	%r356, %r355, -1;
	mov.b32 	 %f1086, %r356;
	add.f32 	%f1087, %f1085, 0f37000000;
	selp.f32	%f1088, %f1086, %f1082, %p128;
	selp.f32	%f259, %f1087, %f1085, %p128;
	mul.f32 	%f1089, %f1088, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1090, %f1089;
	fma.rn.f32 	%f1092, %f1090, %f847, %f1088;
	fma.rn.f32 	%f1094, %f1090, %f849, %f1092;
	mul.f32 	%f1095, %f1094, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1096, %f1095;
	add.f32 	%f1097, %f1090, 0f00000000;
	ex2.approx.f32 	%f1098, %f1097;
	mul.f32 	%f1099, %f1096, %f1098;
	setp.lt.f32	%p129, %f1088, 0fC2D20000;
	selp.f32	%f1100, 0f00000000, %f1099, %p129;
	setp.gt.f32	%p130, %f1088, 0f42D20000;
	selp.f32	%f1478, 0f7F800000, %f1100, %p130;
	setp.eq.f32	%p131, %f1478, 0f7F800000;
	@%p131 bra 	BB0_114;

	fma.rn.f32 	%f1478, %f1478, %f259, %f1478;

BB0_114:
	setp.lt.f32	%p132, %f212, 0f00000000;
	and.pred  	%p4, %p132, %p117;
	mov.b32 	 %r357, %f1478;
	xor.b32  	%r358, %r357, -2147483648;
	mov.b32 	 %f1101, %r358;
	selp.f32	%f1480, %f1101, %f1478, %p4;
	setp.eq.f32	%p134, %f212, 0f00000000;
	@%p134 bra 	BB0_117;
	bra.uni 	BB0_115;

BB0_117:
	add.f32 	%f1104, %f212, %f212;
	selp.f32	%f1480, %f1104, 0f00000000, %p117;
	bra.uni 	BB0_118;

BB0_115:
	setp.geu.f32	%p135, %f212, 0f00000000;
	@%p135 bra 	BB0_118;

	cvt.rzi.f32.f32	%f1103, %f997;
	setp.neu.f32	%p136, %f1103, 0f3EE66666;
	selp.f32	%f1480, 0f7FFFFFFF, %f1480, %p136;

BB0_118:
	add.f32 	%f1105, %f258, 0f3EE66666;
	mov.b32 	 %r359, %f1105;
	setp.lt.s32	%p138, %r359, 2139095040;
	@%p138 bra 	BB0_123;

	setp.gtu.f32	%p139, %f258, 0f7F800000;
	@%p139 bra 	BB0_122;
	bra.uni 	BB0_120;

BB0_122:
	add.f32 	%f1480, %f212, 0f3EE66666;
	bra.uni 	BB0_123;

BB0_120:
	setp.neu.f32	%p140, %f258, 0f7F800000;
	@%p140 bra 	BB0_123;

	selp.f32	%f1480, 0fFF800000, 0f7F800000, %p4;

BB0_123:
	setp.eq.f32	%p141, %f212, 0f3F800000;
	selp.f32	%f270, 0f3F800000, %f1480, %p141;
	abs.f32 	%f271, %f213;
	setp.lt.f32	%p142, %f271, 0f00800000;
	mul.f32 	%f1108, %f271, 0f4B800000;
	selp.f32	%f1109, 0fC3170000, 0fC2FE0000, %p142;
	selp.f32	%f1110, %f1108, %f271, %p142;
	mov.b32 	 %r360, %f1110;
	and.b32  	%r361, %r360, 8388607;
	or.b32  	%r362, %r361, 1065353216;
	mov.b32 	 %f1111, %r362;
	shr.u32 	%r363, %r360, 23;
	cvt.rn.f32.u32	%f1112, %r363;
	add.f32 	%f1113, %f1109, %f1112;
	setp.gt.f32	%p143, %f1111, 0f3FB504F3;
	mul.f32 	%f1114, %f1111, 0f3F000000;
	add.f32 	%f1115, %f1113, 0f3F800000;
	selp.f32	%f1116, %f1114, %f1111, %p143;
	selp.f32	%f1117, %f1115, %f1113, %p143;
	add.f32 	%f1118, %f1116, 0fBF800000;
	add.f32 	%f1107, %f1116, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1106,%f1107;
	// inline asm
	add.f32 	%f1119, %f1118, %f1118;
	mul.f32 	%f1120, %f1106, %f1119;
	mul.f32 	%f1121, %f1120, %f1120;
	fma.rn.f32 	%f1124, %f802, %f1121, %f801;
	fma.rn.f32 	%f1126, %f1124, %f1121, %f804;
	mul.rn.f32 	%f1127, %f1126, %f1121;
	mul.rn.f32 	%f1128, %f1127, %f1120;
	sub.f32 	%f1129, %f1118, %f1120;
	neg.f32 	%f1130, %f1120;
	add.f32 	%f1131, %f1129, %f1129;
	fma.rn.f32 	%f1132, %f1130, %f1118, %f1131;
	mul.rn.f32 	%f1133, %f1106, %f1132;
	add.f32 	%f1134, %f1128, %f1120;
	sub.f32 	%f1135, %f1120, %f1134;
	add.f32 	%f1136, %f1128, %f1135;
	add.f32 	%f1137, %f1133, %f1136;
	add.f32 	%f1138, %f1134, %f1137;
	sub.f32 	%f1139, %f1134, %f1138;
	add.f32 	%f1140, %f1137, %f1139;
	mul.rn.f32 	%f1142, %f1117, %f820;
	mul.rn.f32 	%f1144, %f1117, %f822;
	add.f32 	%f1145, %f1142, %f1138;
	sub.f32 	%f1146, %f1142, %f1145;
	add.f32 	%f1147, %f1138, %f1146;
	add.f32 	%f1148, %f1140, %f1147;
	add.f32 	%f1149, %f1144, %f1148;
	add.f32 	%f1150, %f1145, %f1149;
	sub.f32 	%f1151, %f1145, %f1150;
	add.f32 	%f1152, %f1149, %f1151;
	mul.rn.f32 	%f1154, %f997, %f1150;
	neg.f32 	%f1155, %f1154;
	fma.rn.f32 	%f1156, %f997, %f1150, %f1155;
	fma.rn.f32 	%f1157, %f997, %f1152, %f1156;
	fma.rn.f32 	%f1159, %f1490, %f1150, %f1157;
	add.rn.f32 	%f1160, %f1154, %f1159;
	neg.f32 	%f1161, %f1160;
	add.rn.f32 	%f1162, %f1154, %f1161;
	add.rn.f32 	%f1163, %f1162, %f1159;
	mov.b32 	 %r364, %f1160;
	setp.eq.s32	%p144, %r364, 1118925336;
	add.s32 	%r365, %r364, -1;
	mov.b32 	 %f1164, %r365;
	add.f32 	%f1165, %f1163, 0f37000000;
	selp.f32	%f1166, %f1164, %f1160, %p144;
	selp.f32	%f272, %f1165, %f1163, %p144;
	mul.f32 	%f1167, %f1166, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1168, %f1167;
	fma.rn.f32 	%f1170, %f1168, %f847, %f1166;
	fma.rn.f32 	%f1172, %f1168, %f849, %f1170;
	mul.f32 	%f1173, %f1172, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1174, %f1173;
	add.f32 	%f1175, %f1168, 0f00000000;
	ex2.approx.f32 	%f1176, %f1175;
	mul.f32 	%f1177, %f1174, %f1176;
	setp.lt.f32	%p145, %f1166, 0fC2D20000;
	selp.f32	%f1178, 0f00000000, %f1177, %p145;
	setp.gt.f32	%p146, %f1166, 0f42D20000;
	selp.f32	%f1481, 0f7F800000, %f1178, %p146;
	setp.eq.f32	%p147, %f1481, 0f7F800000;
	@%p147 bra 	BB0_125;

	fma.rn.f32 	%f1481, %f1481, %f272, %f1481;

BB0_125:
	setp.lt.f32	%p148, %f213, 0f00000000;
	and.pred  	%p5, %p148, %p117;
	mov.b32 	 %r366, %f1481;
	xor.b32  	%r367, %r366, -2147483648;
	mov.b32 	 %f1179, %r367;
	selp.f32	%f1483, %f1179, %f1481, %p5;
	setp.eq.f32	%p150, %f213, 0f00000000;
	@%p150 bra 	BB0_128;
	bra.uni 	BB0_126;

BB0_128:
	add.f32 	%f1182, %f213, %f213;
	selp.f32	%f1483, %f1182, 0f00000000, %p117;
	bra.uni 	BB0_129;

BB0_126:
	setp.geu.f32	%p151, %f213, 0f00000000;
	@%p151 bra 	BB0_129;

	cvt.rzi.f32.f32	%f1181, %f997;
	setp.neu.f32	%p152, %f1181, 0f3EE66666;
	selp.f32	%f1483, 0f7FFFFFFF, %f1483, %p152;

BB0_129:
	add.f32 	%f1183, %f271, 0f3EE66666;
	mov.b32 	 %r368, %f1183;
	setp.lt.s32	%p154, %r368, 2139095040;
	@%p154 bra 	BB0_134;

	setp.gtu.f32	%p155, %f271, 0f7F800000;
	@%p155 bra 	BB0_133;
	bra.uni 	BB0_131;

BB0_133:
	add.f32 	%f1483, %f213, 0f3EE66666;
	bra.uni 	BB0_134;

BB0_131:
	setp.neu.f32	%p156, %f271, 0f7F800000;
	@%p156 bra 	BB0_134;

	selp.f32	%f1483, 0fFF800000, 0f7F800000, %p5;

BB0_134:
	setp.eq.f32	%p157, %f213, 0f3F800000;
	selp.f32	%f1184, 0f3F800000, %f1483, %p157;
	cvt.u64.u32	%rd108, %r3;
	cvt.u64.u32	%rd107, %r2;
	mov.u64 	%rd111, image;
	cvta.global.u64 	%rd106, %rd111;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r105, %r106, %rd107, %rd108, %rd32, %rd32);
	// inline asm
	cvt.sat.f32.f32	%f1185, %f1184;
	mul.f32 	%f1186, %f1185, 0f437FFD71;
	cvt.rzi.u32.f32	%r371, %f1186;
	cvt.sat.f32.f32	%f1187, %f270;
	mul.f32 	%f1188, %f1187, 0f437FFD71;
	cvt.rzi.u32.f32	%r372, %f1188;
	cvt.sat.f32.f32	%f1189, %f257;
	mul.f32 	%f1190, %f1189, 0f437FFD71;
	cvt.rzi.u32.f32	%r373, %f1190;
	cvt.u16.u32	%rs32, %r371;
	cvt.u16.u32	%rs33, %r373;
	cvt.u16.u32	%rs34, %r372;
	mov.u16 	%rs35, 255;
	st.v4.u8 	[%rd105], {%rs32, %rs34, %rs33, %rs35};
	ld.global.u32 	%r497, [imageEnabled];

BB0_135:
	and.b32  	%r374, %r497, 4;
	setp.eq.s32	%p158, %r374, 0;
	@%p158 bra 	BB0_139;

	ld.global.u32 	%r375, [additive];
	setp.eq.s32	%p159, %r375, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1191, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f1191;}

	// inline asm
	@%p159 bra 	BB0_138;

	mov.u64 	%rd124, image_HDR;
	cvta.global.u64 	%rd113, %rd124;
	mov.u32 	%r379, 8;
	// inline asm
	call (%rd112), _rt_buffer_get_64, (%rd113, %r105, %r379, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs43, %rs44, %rs45, %rs46}, [%rd112];
	// inline asm
	{  cvt.f32.f16 %f1192, %rs43;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1193, %rs44;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1194, %rs45;}

	// inline asm
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd113, %r105, %r379, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	add.f32 	%f1195, %f211, %f1192;
	add.f32 	%f1196, %f212, %f1193;
	add.f32 	%f1197, %f213, %f1194;
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f1197;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1196;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1195;}

	// inline asm
	st.v4.u16 	[%rd118], {%rs40, %rs41, %rs42, %rs36};
	bra.uni 	BB0_139;

BB0_138:
	mov.u64 	%rd131, image_HDR;
	cvta.global.u64 	%rd126, %rd131;
	mov.u32 	%r381, 8;
	// inline asm
	call (%rd125), _rt_buffer_get_64, (%rd126, %r105, %r381, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f213;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f212;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f211;}

	// inline asm
	st.v4.u16 	[%rd125], {%rs47, %rs48, %rs49, %rs36};

BB0_139:
	ld.global.v2.u32 	{%r384, %r385}, [pixelID];
	cvt.u64.u32	%rd134, %r384;
	cvt.u64.u32	%rd135, %r385;
	mov.u64 	%rd138, uvtangent;
	cvta.global.u64 	%rd133, %rd138;
	// inline asm
	call (%rd132), _rt_buffer_get_64, (%rd133, %r105, %r106, %rd134, %rd135, %rd32, %rd32);
	// inline asm
	ld.u32 	%r94, [%rd132];
	shr.u32 	%r95, %r94, 16;
	cvt.u16.u32	%rs50, %r95;
	and.b16  	%rs51, %rs50, 255;
	cvt.u16.u32	%rs52, %r94;
	or.b16  	%rs53, %rs52, %rs51;
	setp.eq.s16	%p160, %rs53, 0;
	mov.f32 	%f1484, %f1490;
	mov.f32 	%f1485, %f1490;
	mov.f32 	%f1486, %f1490;
	@%p160 bra 	BB0_141;

	ld.u8 	%rs54, [%rd132+1];
	and.b16  	%rs56, %rs52, 255;
	cvt.rn.f32.u16	%f1204, %rs56;
	div.rn.f32 	%f1205, %f1204, 0f437F0000;
	fma.rn.f32 	%f1206, %f1205, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1207, %rs54;
	div.rn.f32 	%f1208, %f1207, 0f437F0000;
	fma.rn.f32 	%f1209, %f1208, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1210, %rs51;
	div.rn.f32 	%f1211, %f1210, 0f437F0000;
	fma.rn.f32 	%f1212, %f1211, 0f40000000, 0fBF800000;
	mul.f32 	%f1213, %f1209, %f1209;
	fma.rn.f32 	%f1214, %f1206, %f1206, %f1213;
	fma.rn.f32 	%f1215, %f1212, %f1212, %f1214;
	sqrt.rn.f32 	%f1216, %f1215;
	rcp.rn.f32 	%f1217, %f1216;
	mul.f32 	%f1484, %f1206, %f1217;
	mul.f32 	%f1485, %f1209, %f1217;
	mul.f32 	%f1486, %f1212, %f1217;

BB0_141:
	mul.f32 	%f1221, %f1429, %f1485;
	mul.f32 	%f1222, %f1428, %f1486;
	sub.f32 	%f1223, %f1222, %f1221;
	mul.f32 	%f1224, %f1427, %f1486;
	mul.f32 	%f1225, %f1429, %f1484;
	sub.f32 	%f1226, %f1225, %f1224;
	mul.f32 	%f1227, %f1428, %f1484;
	mul.f32 	%f1228, %f1427, %f1485;
	sub.f32 	%f1229, %f1228, %f1227;
	setp.lt.u32	%p161, %r94, 16777216;
	selp.f32	%f1230, 0fBF800000, 0f3F800000, %p161;
	mul.f32 	%f1231, %f1223, %f1230;
	mul.f32 	%f1232, %f1226, %f1230;
	mul.f32 	%f1233, %f1229, %f1230;
	mul.f32 	%f1234, %f1231, 0f00000000;
	mul.f32 	%f1235, %f1232, 0f00000000;
	mul.f32 	%f1236, %f1233, 0f00000000;
	fma.rn.f32 	%f1237, %f1484, 0f3F5105EC, %f1234;
	fma.rn.f32 	%f1238, %f1485, 0f3F5105EC, %f1235;
	fma.rn.f32 	%f1239, %f1486, 0f3F5105EC, %f1236;
	mul.f32 	%f289, %f1427, 0f3F13CD3A;
	add.f32 	%f290, %f289, %f1237;
	mul.f32 	%f291, %f1428, 0f3F13CD3A;
	add.f32 	%f292, %f291, %f1238;
	mul.f32 	%f293, %f1429, 0f3F13CD3A;
	add.f32 	%f294, %f293, %f1239;
	ld.global.v2.u32 	{%r390, %r391}, [pixelID];
	cvt.u64.u32	%rd141, %r390;
	cvt.u64.u32	%rd142, %r391;
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd133, %r105, %r106, %rd141, %rd142, %rd32, %rd32);
	// inline asm
	ld.u32 	%r96, [%rd139];
	shr.u32 	%r97, %r96, 16;
	cvt.u16.u32	%rs59, %r97;
	and.b16  	%rs60, %rs59, 255;
	cvt.u16.u32	%rs61, %r96;
	or.b16  	%rs62, %rs61, %rs60;
	setp.eq.s16	%p162, %rs62, 0;
	mov.f32 	%f1487, %f1490;
	mov.f32 	%f1488, %f1490;
	mov.f32 	%f1489, %f1490;
	@%p162 bra 	BB0_143;

	ld.u8 	%rs63, [%rd139+1];
	and.b16  	%rs65, %rs61, 255;
	cvt.rn.f32.u16	%f1240, %rs65;
	div.rn.f32 	%f1241, %f1240, 0f437F0000;
	fma.rn.f32 	%f1242, %f1241, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1243, %rs63;
	div.rn.f32 	%f1244, %f1243, 0f437F0000;
	fma.rn.f32 	%f1245, %f1244, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1246, %rs60;
	div.rn.f32 	%f1247, %f1246, 0f437F0000;
	fma.rn.f32 	%f1248, %f1247, 0f40000000, 0fBF800000;
	mul.f32 	%f1249, %f1245, %f1245;
	fma.rn.f32 	%f1250, %f1242, %f1242, %f1249;
	fma.rn.f32 	%f1251, %f1248, %f1248, %f1250;
	sqrt.rn.f32 	%f1252, %f1251;
	rcp.rn.f32 	%f1253, %f1252;
	mul.f32 	%f1487, %f1242, %f1253;
	mul.f32 	%f1488, %f1245, %f1253;
	mul.f32 	%f1489, %f1248, %f1253;

BB0_143:
	mul.f32 	%f1257, %f1429, %f1488;
	mul.f32 	%f1258, %f1428, %f1489;
	sub.f32 	%f1259, %f1258, %f1257;
	mul.f32 	%f1260, %f1427, %f1489;
	mul.f32 	%f1261, %f1429, %f1487;
	sub.f32 	%f1262, %f1261, %f1260;
	mul.f32 	%f1263, %f1428, %f1487;
	mul.f32 	%f1264, %f1427, %f1488;
	sub.f32 	%f1265, %f1264, %f1263;
	setp.lt.u32	%p163, %r96, 16777216;
	selp.f32	%f1266, 0fBF800000, 0f3F800000, %p163;
	mul.f32 	%f1267, %f1259, %f1266;
	mul.f32 	%f1268, %f1262, %f1266;
	mul.f32 	%f1269, %f1265, %f1266;
	mul.f32 	%f1270, %f1267, 0f3F3504F3;
	mul.f32 	%f1271, %f1268, 0f3F3504F3;
	mul.f32 	%f1272, %f1269, 0f3F3504F3;
	fma.rn.f32 	%f1273, %f1487, 0fBED105EC, %f1270;
	fma.rn.f32 	%f1274, %f1488, 0fBED105EC, %f1271;
	fma.rn.f32 	%f1275, %f1489, 0fBED105EC, %f1272;
	add.f32 	%f301, %f289, %f1273;
	add.f32 	%f302, %f291, %f1274;
	add.f32 	%f303, %f293, %f1275;
	ld.global.v2.u32 	{%r396, %r397}, [pixelID];
	cvt.u64.u32	%rd148, %r396;
	cvt.u64.u32	%rd149, %r397;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd133, %r105, %r106, %rd148, %rd149, %rd32, %rd32);
	// inline asm
	ld.u32 	%r98, [%rd146];
	shr.u32 	%r99, %r98, 16;
	cvt.u16.u32	%rs68, %r99;
	and.b16  	%rs69, %rs68, 255;
	cvt.u16.u32	%rs70, %r98;
	or.b16  	%rs71, %rs70, %rs69;
	setp.eq.s16	%p164, %rs71, 0;
	mov.f32 	%f1491, %f1490;
	mov.f32 	%f1492, %f1490;
	@%p164 bra 	BB0_145;

	ld.u8 	%rs72, [%rd146+1];
	and.b16  	%rs74, %rs70, 255;
	cvt.rn.f32.u16	%f1276, %rs74;
	div.rn.f32 	%f1277, %f1276, 0f437F0000;
	fma.rn.f32 	%f1278, %f1277, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1279, %rs72;
	div.rn.f32 	%f1280, %f1279, 0f437F0000;
	fma.rn.f32 	%f1281, %f1280, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1282, %rs69;
	div.rn.f32 	%f1283, %f1282, 0f437F0000;
	fma.rn.f32 	%f1284, %f1283, 0f40000000, 0fBF800000;
	mul.f32 	%f1285, %f1281, %f1281;
	fma.rn.f32 	%f1286, %f1278, %f1278, %f1285;
	fma.rn.f32 	%f1287, %f1284, %f1284, %f1286;
	sqrt.rn.f32 	%f1288, %f1287;
	rcp.rn.f32 	%f1289, %f1288;
	mul.f32 	%f1490, %f1278, %f1289;
	mul.f32 	%f1491, %f1281, %f1289;
	mul.f32 	%f1492, %f1284, %f1289;

BB0_145:
	mul.f32 	%f1291, %f1429, %f1491;
	mul.f32 	%f1292, %f1428, %f1492;
	sub.f32 	%f1293, %f1292, %f1291;
	mul.f32 	%f1294, %f1427, %f1492;
	mul.f32 	%f1295, %f1429, %f1490;
	sub.f32 	%f1296, %f1295, %f1294;
	mul.f32 	%f1297, %f1428, %f1490;
	mul.f32 	%f1298, %f1427, %f1491;
	sub.f32 	%f1299, %f1298, %f1297;
	setp.lt.u32	%p165, %r98, 16777216;
	selp.f32	%f1300, 0fBF800000, 0f3F800000, %p165;
	mul.f32 	%f1301, %f1293, %f1300;
	mul.f32 	%f1302, %f1296, %f1300;
	mul.f32 	%f1303, %f1299, %f1300;
	mul.f32 	%f1304, %f1301, 0fBF3504F3;
	mul.f32 	%f1305, %f1302, 0fBF3504F3;
	mul.f32 	%f1306, %f1303, 0fBF3504F3;
	fma.rn.f32 	%f1307, %f1490, 0fBED105EC, %f1304;
	fma.rn.f32 	%f1308, %f1491, 0fBED105EC, %f1305;
	fma.rn.f32 	%f1309, %f1492, 0fBED105EC, %f1306;
	add.f32 	%f1310, %f289, %f1307;
	add.f32 	%f1311, %f291, %f1308;
	add.f32 	%f1312, %f293, %f1309;
	ld.global.f32 	%f1313, [directDir];
	mul.f32 	%f1314, %f290, %f1313;
	ld.global.f32 	%f1315, [directDir+4];
	mul.f32 	%f1316, %f292, %f1315;
	neg.f32 	%f1317, %f1316;
	sub.f32 	%f1318, %f1317, %f1314;
	ld.global.f32 	%f1319, [directDir+8];
	mul.f32 	%f1320, %f294, %f1319;
	sub.f32 	%f1321, %f1318, %f1320;
	cvt.sat.f32.f32	%f1322, %f1321;
	mul.f32 	%f1323, %f228, %f1322;
	mul.f32 	%f1324, %f229, %f1322;
	mul.f32 	%f1325, %f230, %f1322;
	mul.f32 	%f1326, %f301, %f1313;
	mul.f32 	%f1327, %f302, %f1315;
	neg.f32 	%f1328, %f1327;
	sub.f32 	%f1329, %f1328, %f1326;
	mul.f32 	%f1330, %f303, %f1319;
	sub.f32 	%f1331, %f1329, %f1330;
	cvt.sat.f32.f32	%f1332, %f1331;
	mul.f32 	%f1333, %f228, %f1332;
	mul.f32 	%f1334, %f229, %f1332;
	mul.f32 	%f1335, %f230, %f1332;
	mul.f32 	%f1336, %f1310, %f1313;
	mul.f32 	%f1337, %f1311, %f1315;
	neg.f32 	%f1338, %f1337;
	sub.f32 	%f1339, %f1338, %f1336;
	mul.f32 	%f1340, %f1312, %f1319;
	sub.f32 	%f1341, %f1339, %f1340;
	cvt.sat.f32.f32	%f1342, %f1341;
	mul.f32 	%f1343, %f228, %f1342;
	mul.f32 	%f1344, %f229, %f1342;
	mul.f32 	%f1345, %f230, %f1342;
	add.f32 	%f1346, %f1323, %f1333;
	add.f32 	%f1347, %f1324, %f1334;
	add.f32 	%f1348, %f1325, %f1335;
	add.f32 	%f1349, %f1346, %f1343;
	add.f32 	%f1350, %f1347, %f1344;
	add.f32 	%f1351, %f1348, %f1345;
	mul.f32 	%f1352, %f1349, 0f3F13CD3A;
	mul.f32 	%f1353, %f1350, 0f3F13CD3A;
	mul.f32 	%f1354, %f1351, 0f3F13CD3A;
	div.rn.f32 	%f1355, %f211, %f1352;
	div.rn.f32 	%f1356, %f212, %f1353;
	div.rn.f32 	%f1357, %f213, %f1354;
	setp.eq.f32	%p166, %f211, 0f00000000;
	selp.f32	%f1358, 0f00000000, %f1355, %p166;
	setp.eq.f32	%p167, %f212, 0f00000000;
	selp.f32	%f1359, 0f00000000, %f1356, %p167;
	setp.eq.f32	%p168, %f213, 0f00000000;
	selp.f32	%f1360, 0f00000000, %f1357, %p168;
	mul.f32 	%f310, %f1323, %f1358;
	mul.f32 	%f311, %f1324, %f1359;
	mul.f32 	%f312, %f1325, %f1360;
	mul.f32 	%f313, %f1333, %f1358;
	mul.f32 	%f314, %f1334, %f1359;
	mul.f32 	%f315, %f1335, %f1360;
	mul.f32 	%f316, %f1343, %f1358;
	mul.f32 	%f317, %f1344, %f1359;
	mul.f32 	%f318, %f1345, %f1360;
	ld.global.u32 	%r400, [additive];
	setp.eq.s32	%p169, %r400, 0;
	cvt.u64.u32	%rd23, %r2;
	cvt.u64.u32	%rd24, %r3;
	mov.f32 	%f1290, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f1290;}

	// inline asm
	@%p169 bra 	BB0_147;

	mov.u64 	%rd165, image_RNM0;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r404, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r105, %r404, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs84, %rs85, %rs86, %rs87}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f1361, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1362, %rs85;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1363, %rs86;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r105, %r404, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1364, %f310, %f1361;
	add.f32 	%f1365, %f311, %f1362;
	add.f32 	%f1366, %f312, %f1363;
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1366;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1365;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1364;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs81, %rs82, %rs83, %rs77};
	bra.uni 	BB0_148;

BB0_147:
	mov.u64 	%rd172, image_RNM0;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r406, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r105, %r406, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f312;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f311;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f310;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs88, %rs89, %rs90, %rs77};

BB0_148:
	ld.global.u32 	%r407, [additive];
	setp.eq.s32	%p170, %r407, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f1290;}

	// inline asm
	@%p170 bra 	BB0_150;

	mov.u64 	%rd185, image_RNM1;
	cvta.global.u64 	%rd174, %rd185;
	mov.u32 	%r411, 8;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r105, %r411, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs98, %rs99, %rs100, %rs101}, [%rd173];
	// inline asm
	{  cvt.f32.f16 %f1371, %rs98;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1372, %rs99;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1373, %rs100;}

	// inline asm
	// inline asm
	call (%rd179), _rt_buffer_get_64, (%rd174, %r105, %r411, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1374, %f313, %f1371;
	add.f32 	%f1375, %f314, %f1372;
	add.f32 	%f1376, %f315, %f1373;
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f1376;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f1375;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs95, %f1374;}

	// inline asm
	st.v4.u16 	[%rd179], {%rs95, %rs96, %rs97, %rs91};
	bra.uni 	BB0_151;

BB0_150:
	mov.u64 	%rd192, image_RNM1;
	cvta.global.u64 	%rd187, %rd192;
	mov.u32 	%r413, 8;
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd187, %r105, %r413, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f315;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f314;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs102, %f313;}

	// inline asm
	st.v4.u16 	[%rd186], {%rs102, %rs103, %rs104, %rs91};

BB0_151:
	ld.global.u32 	%r414, [additive];
	setp.eq.s32	%p171, %r414, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f1290;}

	// inline asm
	@%p171 bra 	BB0_153;

	mov.u64 	%rd205, image_RNM2;
	cvta.global.u64 	%rd194, %rd205;
	mov.u32 	%r418, 8;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r105, %r418, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs112, %rs113, %rs114, %rs115}, [%rd193];
	// inline asm
	{  cvt.f32.f16 %f1381, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1382, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1383, %rs114;}

	// inline asm
	// inline asm
	call (%rd199), _rt_buffer_get_64, (%rd194, %r105, %r418, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1384, %f316, %f1381;
	add.f32 	%f1385, %f317, %f1382;
	add.f32 	%f1386, %f318, %f1383;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1386;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1385;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1384;}

	// inline asm
	st.v4.u16 	[%rd199], {%rs109, %rs110, %rs111, %rs105};
	bra.uni 	BB0_171;

BB0_153:
	mov.u64 	%rd212, image_RNM2;
	cvta.global.u64 	%rd207, %rd212;
	mov.u32 	%r420, 8;
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd207, %r105, %r420, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f318;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f317;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f316;}

	// inline asm
	st.v4.u16 	[%rd206], {%rs116, %rs117, %rs118, %rs105};

BB0_171:
	ret;
}


