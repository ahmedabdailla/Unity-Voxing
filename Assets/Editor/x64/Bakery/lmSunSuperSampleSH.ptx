//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<156>;
	.reg .b16 	%rs<177>;
	.reg .f32 	%f<1208>;
	.reg .b32 	%r<481>;
	.reg .b64 	%rd<329>;


	mov.u64 	%rd328, __local_depot0;
	cvta.local.u64 	%SP, %rd328;
	ld.global.v2.u32 	{%r101, %r102}, [pixelID];
	cvt.u64.u32	%rd24, %r101;
	cvt.u64.u32	%rd25, %r102;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r99, 2;
	mov.u32 	%r100, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r99, %r100, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r105, %r1, 16;
	cvt.u16.u32	%rs1, %r105;
	and.b16  	%rs15, %rs1, 255;
	cvt.u16.u32	%rs16, %r1;
	or.b16  	%rs17, %rs16, %rs15;
	setp.eq.s16	%p5, %rs17, 0;
	mov.f32 	%f1154, 0f00000000;
	mov.f32 	%f1155, %f1154;
	mov.f32 	%f1156, %f1154;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs18, [%rd22+1];
	and.b16  	%rs20, %rs16, 255;
	cvt.rn.f32.u16	%f272, %rs20;
	div.rn.f32 	%f273, %f272, 0f437F0000;
	fma.rn.f32 	%f274, %f273, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f275, %rs18;
	div.rn.f32 	%f276, %f275, 0f437F0000;
	fma.rn.f32 	%f277, %f276, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f278, %rs15;
	div.rn.f32 	%f279, %f278, 0f437F0000;
	fma.rn.f32 	%f280, %f279, 0f40000000, 0fBF800000;
	mul.f32 	%f281, %f277, %f277;
	fma.rn.f32 	%f282, %f274, %f274, %f281;
	fma.rn.f32 	%f283, %f280, %f280, %f282;
	sqrt.rn.f32 	%f284, %f283;
	rcp.rn.f32 	%f285, %f284;
	mul.f32 	%f1154, %f274, %f285;
	mul.f32 	%f1155, %f277, %f285;
	mul.f32 	%f1156, %f280, %f285;

BB0_2:
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	ld.global.v2.u32 	{%r109, %r110}, [tileInfo];
	add.s32 	%r2, %r106, %r109;
	add.s32 	%r3, %r107, %r110;
	setp.eq.f32	%p6, %f1155, 0f00000000;
	setp.eq.f32	%p7, %f1154, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1156, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_140;
	bra.uni 	BB0_3;

BB0_140:
	ld.global.u32 	%r480, [imageEnabled];
	and.b32  	%r395, %r480, 1;
	setp.eq.b32	%p147, %r395, 1;
	@!%p147 bra 	BB0_142;
	bra.uni 	BB0_141;

BB0_141:
	cvt.u64.u32	%rd209, %r2;
	cvt.u64.u32	%rd210, %r3;
	mov.u64 	%rd213, image;
	cvta.global.u64 	%rd208, %rd213;
	mov.u64 	%rd212, 0;
	// inline asm
	call (%rd207), _rt_buffer_get_64, (%rd208, %r99, %r100, %rd209, %rd210, %rd212, %rd212);
	// inline asm
	mov.u16 	%rs101, 0;
	st.v4.u8 	[%rd207], {%rs101, %rs101, %rs101, %rs101};
	ld.global.u32 	%r480, [imageEnabled];

BB0_142:
	and.b32  	%r398, %r480, 8;
	setp.eq.s32	%p148, %r398, 0;
	@%p148 bra 	BB0_144;

	cvt.u64.u32	%rd217, %r3;
	cvt.u64.u32	%rd216, %r2;
	mov.u64 	%rd220, image_Mask;
	cvta.global.u64 	%rd215, %rd220;
	mov.u64 	%rd219, 0;
	// inline asm
	call (%rd214), _rt_buffer_get_64, (%rd215, %r99, %r99, %rd216, %rd217, %rd219, %rd219);
	// inline asm
	mov.f32 	%f1112, 0f00000000;
	cvt.rzi.u32.f32	%r401, %f1112;
	cvt.u16.u32	%rs102, %r401;
	mov.u16 	%rs103, 0;
	st.v2.u8 	[%rd214], {%rs102, %rs103};
	ld.global.u32 	%r480, [imageEnabled];

BB0_144:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r402, %r480, 4;
	setp.eq.s32	%p149, %r402, 0;
	@%p149 bra 	BB0_148;

	ld.global.u32 	%r403, [additive];
	setp.eq.s32	%p150, %r403, 0;
	@%p150 bra 	BB0_147;

	mov.u64 	%rd233, image_HDR;
	cvta.global.u64 	%rd222, %rd233;
	mov.u32 	%r407, 8;
	mov.u64 	%rd232, 0;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r99, %r407, %rd20, %rd21, %rd232, %rd232);
	// inline asm
	ld.v4.u16 	{%rs110, %rs111, %rs112, %rs113}, [%rd221];
	// inline asm
	{  cvt.f32.f16 %f1113, %rs110;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1114, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1115, %rs112;}

	// inline asm
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd222, %r99, %r407, %rd20, %rd21, %rd232, %rd232);
	// inline asm
	add.f32 	%f1116, %f1113, 0f00000000;
	add.f32 	%f1117, %f1114, 0f00000000;
	add.f32 	%f1118, %f1115, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1118;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1117;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs107, %f1116;}

	// inline asm
	mov.u16 	%rs114, 0;
	st.v4.u16 	[%rd227], {%rs107, %rs108, %rs109, %rs114};
	bra.uni 	BB0_148;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f288, %f1154, %f7;
	mul.f32 	%f289, %f1155, %f8;
	neg.f32 	%f290, %f289;
	sub.f32 	%f291, %f290, %f288;
	mul.f32 	%f292, %f1156, %f9;
	sub.f32 	%f10, %f291, %f292;
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd31, %r122;
	cvt.u64.u32	%rd32, %r123;
	mov.u64 	%rd53, uvpos;
	cvta.global.u64 	%rd30, %rd53;
	mov.u32 	%r119, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f293, [%rd29+8];
	ld.f32 	%f294, [%rd29+4];
	ld.f32 	%f295, [%rd29];
	mul.f32 	%f296, %f295, 0f3456BF95;
	mul.f32 	%f297, %f294, 0f3456BF95;
	mul.f32 	%f298, %f293, 0f3456BF95;
	abs.f32 	%f299, %f1154;
	div.rn.f32 	%f300, %f296, %f299;
	abs.f32 	%f301, %f1155;
	div.rn.f32 	%f302, %f297, %f301;
	abs.f32 	%f303, %f1156;
	div.rn.f32 	%f304, %f298, %f303;
	abs.f32 	%f305, %f300;
	abs.f32 	%f306, %f302;
	abs.f32 	%f307, %f304;
	mov.f32 	%f308, 0f38D1B717;
	max.f32 	%f309, %f305, %f308;
	max.f32 	%f310, %f306, %f308;
	max.f32 	%f311, %f307, %f308;
	fma.rn.f32 	%f11, %f1154, %f309, %f295;
	fma.rn.f32 	%f12, %f1155, %f310, %f294;
	fma.rn.f32 	%f13, %f1156, %f311, %f293;
	setp.gt.f32	%p11, %f299, %f303;
	neg.f32 	%f312, %f1155;
	selp.f32	%f313, %f312, 0f00000000, %p11;
	neg.f32 	%f314, %f1156;
	selp.f32	%f315, %f1154, %f314, %p11;
	selp.f32	%f316, 0f00000000, %f1155, %p11;
	mul.f32 	%f317, %f315, %f315;
	fma.rn.f32 	%f318, %f313, %f313, %f317;
	fma.rn.f32 	%f319, %f316, %f316, %f318;
	sqrt.rn.f32 	%f320, %f319;
	rcp.rn.f32 	%f321, %f320;
	mul.f32 	%f14, %f313, %f321;
	mul.f32 	%f15, %f315, %f321;
	mul.f32 	%f16, %f316, %f321;
	mul.f32 	%f322, %f1156, %f15;
	mul.f32 	%f323, %f1155, %f16;
	sub.f32 	%f17, %f322, %f323;
	mul.f32 	%f324, %f1154, %f16;
	mul.f32 	%f325, %f1156, %f14;
	sub.f32 	%f18, %f324, %f325;
	mul.f32 	%f326, %f1155, %f14;
	mul.f32 	%f327, %f1154, %f15;
	sub.f32 	%f19, %f326, %f327;
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd38, %r127;
	add.s32 	%r130, %r126, 1;
	ld.global.u32 	%r131, [resolution];
	add.s32 	%r132, %r131, -1;
	min.u32 	%r133, %r130, %r132;
	cvt.u64.u32	%rd37, %r133;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.f32 	%f328, [%rd35+8];
	ld.f32 	%f329, [%rd35+4];
	ld.f32 	%f330, [%rd35];
	setp.eq.f32	%p12, %f330, 0f00000000;
	setp.eq.f32	%p13, %f329, 0f00000000;
	and.pred  	%p14, %p12, %p13;
	setp.eq.f32	%p15, %f328, 0f00000000;
	and.pred  	%p16, %p14, %p15;
	selp.f32	%f331, %f295, %f330, %p16;
	selp.f32	%f332, %f294, %f329, %p16;
	selp.f32	%f333, %f293, %f328, %p16;
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	add.s32 	%r138, %r135, 1;
	ld.global.u32 	%r139, [resolution+4];
	add.s32 	%r140, %r139, -1;
	min.u32 	%r141, %r138, %r140;
	cvt.u64.u32	%rd43, %r134;
	cvt.u64.u32	%rd44, %r141;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.f32 	%f334, [%rd41+8];
	ld.f32 	%f335, [%rd41+4];
	ld.f32 	%f336, [%rd41];
	setp.eq.f32	%p17, %f336, 0f00000000;
	setp.eq.f32	%p18, %f335, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f334, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f337, %f295, %f336, %p21;
	selp.f32	%f338, %f294, %f335, %p21;
	selp.f32	%f339, %f293, %f334, %p21;
	sub.f32 	%f340, %f331, %f295;
	sub.f32 	%f341, %f332, %f294;
	sub.f32 	%f342, %f333, %f293;
	sub.f32 	%f343, %f337, %f295;
	sub.f32 	%f344, %f338, %f294;
	sub.f32 	%f345, %f339, %f293;
	abs.f32 	%f346, %f340;
	abs.f32 	%f347, %f343;
	max.f32 	%f348, %f346, %f347;
	abs.f32 	%f349, %f341;
	abs.f32 	%f350, %f344;
	max.f32 	%f351, %f349, %f350;
	abs.f32 	%f352, %f342;
	abs.f32 	%f353, %f345;
	max.f32 	%f354, %f352, %f353;
	max.f32 	%f355, %f348, %f351;
	max.f32 	%f356, %f355, %f354;
	setp.neu.f32	%p22, %f340, 0f00000000;
	setp.neu.f32	%p23, %f341, 0f00000000;
	or.pred  	%p24, %p22, %p23;
	setp.neu.f32	%p25, %f342, 0f00000000;
	setp.neu.f32	%p26, %f343, 0f00000000;
	setp.neu.f32	%p27, %f344, 0f00000000;
	or.pred  	%p28, %p26, %p27;
	setp.neu.f32	%p29, %f345, 0f00000000;
	or.pred  	%p30, %p28, %p29;
	or.pred  	%p31, %p24, %p25;
	and.pred  	%p32, %p31, %p30;
	selp.f32	%f20, %f356, 0f00000000, %p32;
	abs.f32 	%f357, %f7;
	abs.f32 	%f358, %f9;
	setp.gt.f32	%p33, %f357, %f358;
	neg.f32 	%f359, %f8;
	neg.f32 	%f360, %f9;
	selp.f32	%f361, %f359, 0f00000000, %p33;
	selp.f32	%f362, %f7, %f360, %p33;
	selp.f32	%f363, 0f00000000, %f8, %p33;
	mul.f32 	%f364, %f362, %f362;
	fma.rn.f32 	%f365, %f361, %f361, %f364;
	fma.rn.f32 	%f366, %f363, %f363, %f365;
	sqrt.rn.f32 	%f367, %f366;
	rcp.rn.f32 	%f368, %f367;
	mul.f32 	%f21, %f361, %f368;
	mul.f32 	%f22, %f362, %f368;
	mul.f32 	%f23, %f363, %f368;
	ld.global.v2.u32 	{%r142, %r143}, [pixelID];
	cvt.u64.u32	%rd49, %r142;
	cvt.u64.u32	%rd50, %r143;
	mov.u64 	%rd54, rnd_seeds;
	cvta.global.u64 	%rd48, %rd54;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r99, %r100, %rd49, %rd50, %rd27, %rd27);
	// inline asm
	ld.global.u32 	%r449, [samples];
	mov.f32 	%f1159, 0f00000000;
	setp.lt.s32	%p34, %r449, 1;
	@%p34 bra 	BB0_4;

	cvt.rn.f32.s32	%f371, %r449;
	rcp.rn.f32 	%f24, %f371;
	ld.u32 	%r475, [%rd47];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f372, %f17, 0f3E24A490;
	mul.f32 	%f373, %f18, 0f3E24A490;
	mul.f32 	%f374, %f19, 0f3E24A490;
	fma.rn.f32 	%f375, %f20, %f372, %f11;
	fma.rn.f32 	%f376, %f20, %f373, %f12;
	fma.rn.f32 	%f377, %f20, %f374, %f13;
	mul.f32 	%f378, %f14, 0fBECECEDE;
	mul.f32 	%f379, %f15, 0fBECECEDE;
	mul.f32 	%f380, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f378, %f375;
	fma.rn.f32 	%f29, %f20, %f379, %f376;
	fma.rn.f32 	%f30, %f20, %f380, %f377;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f381, %f32, %f32;
	fma.rn.f32 	%f382, %f31, %f31, %f381;
	fma.rn.f32 	%f34, %f33, %f33, %f382;
	mul.f32 	%f383, %f17, 0fBE24A490;
	mul.f32 	%f384, %f18, 0fBE24A490;
	mul.f32 	%f385, %f19, 0fBE24A490;
	fma.rn.f32 	%f386, %f20, %f383, %f11;
	fma.rn.f32 	%f387, %f20, %f384, %f12;
	fma.rn.f32 	%f388, %f20, %f385, %f13;
	mul.f32 	%f389, %f14, 0f3ECACABC;
	mul.f32 	%f390, %f15, 0f3ECACABC;
	mul.f32 	%f391, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f389, %f386;
	fma.rn.f32 	%f36, %f20, %f390, %f387;
	fma.rn.f32 	%f37, %f20, %f391, %f388;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f392, %f39, %f39;
	fma.rn.f32 	%f393, %f38, %f38, %f392;
	fma.rn.f32 	%f41, %f40, %f40, %f393;
	mul.f32 	%f394, %f17, 0f3F23A3A8;
	mul.f32 	%f395, %f18, 0f3F23A3A8;
	mul.f32 	%f396, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f397, %f20, %f394, %f11;
	fma.rn.f32 	%f398, %f20, %f395, %f12;
	fma.rn.f32 	%f399, %f20, %f396, %f13;
	mul.f32 	%f400, %f14, 0f3E24A490;
	mul.f32 	%f401, %f15, 0f3E24A490;
	mul.f32 	%f402, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f400, %f397;
	fma.rn.f32 	%f43, %f20, %f401, %f398;
	fma.rn.f32 	%f44, %f20, %f402, %f399;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f403, %f46, %f46;
	fma.rn.f32 	%f404, %f45, %f45, %f403;
	fma.rn.f32 	%f48, %f47, %f47, %f404;
	mul.f32 	%f405, %f17, 0fBECECEDE;
	mul.f32 	%f406, %f18, 0fBECECEDE;
	mul.f32 	%f407, %f19, 0fBECECEDE;
	fma.rn.f32 	%f408, %f20, %f405, %f11;
	fma.rn.f32 	%f409, %f20, %f406, %f12;
	fma.rn.f32 	%f410, %f20, %f407, %f13;
	mul.f32 	%f411, %f14, 0fBF23A3A9;
	mul.f32 	%f412, %f15, 0fBF23A3A9;
	mul.f32 	%f413, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f411, %f408;
	fma.rn.f32 	%f50, %f20, %f412, %f409;
	fma.rn.f32 	%f51, %f20, %f413, %f410;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f414, %f53, %f53;
	fma.rn.f32 	%f415, %f52, %f52, %f414;
	fma.rn.f32 	%f55, %f54, %f54, %f415;
	mul.f32 	%f416, %f17, 0fBF23A3A9;
	mul.f32 	%f417, %f18, 0fBF23A3A9;
	mul.f32 	%f418, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f419, %f20, %f416, %f11;
	fma.rn.f32 	%f420, %f20, %f417, %f12;
	fma.rn.f32 	%f421, %f20, %f418, %f13;
	mul.f32 	%f422, %f14, 0f3F23A3A8;
	mul.f32 	%f423, %f15, 0f3F23A3A8;
	mul.f32 	%f424, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f422, %f419;
	fma.rn.f32 	%f57, %f20, %f423, %f420;
	fma.rn.f32 	%f58, %f20, %f424, %f421;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f425, %f60, %f60;
	fma.rn.f32 	%f426, %f59, %f59, %f425;
	fma.rn.f32 	%f62, %f61, %f61, %f426;
	mul.f32 	%f427, %f17, 0fBF61E1E3;
	mul.f32 	%f428, %f18, 0fBF61E1E3;
	mul.f32 	%f429, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f430, %f20, %f427, %f11;
	fma.rn.f32 	%f431, %f20, %f428, %f12;
	fma.rn.f32 	%f432, %f20, %f429, %f13;
	mul.f32 	%f433, %f14, 0fBE24A490;
	mul.f32 	%f434, %f15, 0fBE24A490;
	mul.f32 	%f435, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f433, %f430;
	fma.rn.f32 	%f64, %f20, %f434, %f431;
	fma.rn.f32 	%f65, %f20, %f435, %f432;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f436, %f67, %f67;
	fma.rn.f32 	%f437, %f66, %f66, %f436;
	fma.rn.f32 	%f69, %f68, %f68, %f437;
	mul.f32 	%f438, %f17, 0f3ECACABC;
	mul.f32 	%f439, %f18, 0f3ECACABC;
	mul.f32 	%f440, %f19, 0f3ECACABC;
	fma.rn.f32 	%f441, %f20, %f438, %f11;
	fma.rn.f32 	%f442, %f20, %f439, %f12;
	fma.rn.f32 	%f443, %f20, %f440, %f13;
	mul.f32 	%f444, %f14, 0f3F61E1D2;
	mul.f32 	%f445, %f15, 0f3F61E1D2;
	mul.f32 	%f446, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f444, %f441;
	fma.rn.f32 	%f71, %f20, %f445, %f442;
	fma.rn.f32 	%f72, %f20, %f446, %f443;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f447, %f74, %f74;
	fma.rn.f32 	%f448, %f73, %f73, %f447;
	fma.rn.f32 	%f76, %f75, %f75, %f448;
	mul.f32 	%f449, %f17, 0f3F61E1D2;
	mul.f32 	%f450, %f18, 0f3F61E1D2;
	mul.f32 	%f451, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f452, %f20, %f449, %f11;
	fma.rn.f32 	%f453, %f20, %f450, %f12;
	fma.rn.f32 	%f454, %f20, %f451, %f13;
	mul.f32 	%f455, %f14, 0fBF61E1E3;
	mul.f32 	%f456, %f15, 0fBF61E1E3;
	mul.f32 	%f457, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f455, %f452;
	fma.rn.f32 	%f78, %f20, %f456, %f453;
	fma.rn.f32 	%f79, %f20, %f457, %f454;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f458, %f81, %f81;
	fma.rn.f32 	%f459, %f80, %f80, %f458;
	fma.rn.f32 	%f83, %f82, %f82, %f459;
	mul.f32 	%f460, %f7, %f22;
	mul.f32 	%f461, %f8, %f21;
	sub.f32 	%f84, %f461, %f460;
	mul.f32 	%f462, %f9, %f21;
	mul.f32 	%f463, %f7, %f23;
	sub.f32 	%f85, %f463, %f462;
	mul.f32 	%f464, %f8, %f23;
	mul.f32 	%f465, %f9, %f22;
	sub.f32 	%f86, %f465, %f464;
	mov.f32 	%f1159, 0f00000000;
	mov.u32 	%r450, 0;
	abs.f32 	%f466, %f26;
	abs.f32 	%f467, %f25;
	max.f32 	%f468, %f467, %f466;
	abs.f32 	%f469, %f27;
	max.f32 	%f470, %f468, %f469;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1160, %f1159;

BB0_6:
	setp.lt.s32	%p35, %r449, 1;
	@%p35 bra 	BB0_73;

	rcp.rn.f32 	%f472, %f91;
	mul.f32 	%f92, %f472, %f31;
	mul.f32 	%f93, %f472, %f32;
	mul.f32 	%f94, %f472, %f33;
	rcp.rn.f32 	%f473, %f95;
	mul.f32 	%f96, %f473, %f38;
	mul.f32 	%f97, %f473, %f39;
	mul.f32 	%f98, %f473, %f40;
	rcp.rn.f32 	%f474, %f99;
	mul.f32 	%f100, %f474, %f45;
	mul.f32 	%f101, %f474, %f46;
	mul.f32 	%f102, %f474, %f47;
	rcp.rn.f32 	%f475, %f103;
	mul.f32 	%f104, %f475, %f52;
	mul.f32 	%f105, %f475, %f53;
	mul.f32 	%f106, %f475, %f54;
	rcp.rn.f32 	%f476, %f107;
	mul.f32 	%f108, %f476, %f59;
	mul.f32 	%f109, %f476, %f60;
	mul.f32 	%f110, %f476, %f61;
	rcp.rn.f32 	%f477, %f111;
	mul.f32 	%f112, %f477, %f66;
	mul.f32 	%f113, %f477, %f67;
	mul.f32 	%f114, %f477, %f68;
	rcp.rn.f32 	%f478, %f115;
	mul.f32 	%f116, %f478, %f73;
	mul.f32 	%f117, %f478, %f74;
	mul.f32 	%f118, %f478, %f75;
	rcp.rn.f32 	%f479, %f119;
	mul.f32 	%f120, %f479, %f80;
	mul.f32 	%f121, %f479, %f81;
	mul.f32 	%f122, %f479, %f82;
	mov.u32 	%r452, 0;

BB0_8:
	cvt.rn.f32.s32	%f1148, %r450;
	mad.lo.s32 	%r148, %r475, 1664525, 1013904223;
	and.b32  	%r149, %r148, 16777215;
	cvt.rn.f32.u32	%f480, %r149;
	fma.rn.f32 	%f481, %f480, 0f33800000, %f1148;
	mul.f32 	%f482, %f24, %f481;
	mad.lo.s32 	%r11, %r148, 1664525, 1013904223;
	and.b32  	%r150, %r11, 16777215;
	cvt.rn.f32.u32	%f483, %r150;
	cvt.rn.f32.s32	%f484, %r452;
	fma.rn.f32 	%f485, %f483, 0f33800000, %f484;
	mul.f32 	%f486, %f24, %f485;
	sqrt.rn.f32 	%f125, %f482;
	mul.f32 	%f1167, %f486, 0f40C90FDB;
	abs.f32 	%f127, %f1167;
	setp.neu.f32	%p36, %f127, 0f7F800000;
	mov.f32 	%f1161, %f1167;
	@%p36 bra 	BB0_10;

	mov.f32 	%f487, 0f00000000;
	mul.rn.f32 	%f1161, %f1167, %f487;

BB0_10:
	mul.f32 	%f488, %f1161, 0f3F22F983;
	cvt.rni.s32.f32	%r463, %f488;
	cvt.rn.f32.s32	%f489, %r463;
	neg.f32 	%f490, %f489;
	mov.f32 	%f491, 0f3FC90FDA;
	fma.rn.f32 	%f492, %f490, %f491, %f1161;
	mov.f32 	%f493, 0f33A22168;
	fma.rn.f32 	%f494, %f490, %f493, %f492;
	mov.f32 	%f495, 0f27C234C5;
	fma.rn.f32 	%f1162, %f490, %f495, %f494;
	abs.f32 	%f496, %f1161;
	setp.leu.f32	%p37, %f496, 0f47CE4780;
	@%p37 bra 	BB0_21;

	add.u64 	%rd56, %SP, 8;
	cvta.to.local.u64 	%rd324, %rd56;
	mov.b32 	 %r13, %f1161;
	shl.b32 	%r153, %r13, 8;
	or.b32  	%r15, %r153, -2147483648;
	mov.u32 	%r454, 0;
	mov.u64 	%rd325, 0;
	mov.u32 	%r455, %r454;

BB0_12:
	.pragma "nounroll";
	add.u64 	%rd322, %SP, 8;
	cvta.to.local.u64 	%rd321, %rd322;
	shl.b64 	%rd57, %rd325, 2;
	mov.u64 	%rd58, __cudart_i2opi_f;
	add.s64 	%rd59, %rd58, %rd57;
	ld.const.u32 	%r156, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r154, %r156, %r15, %r455;
	madc.hi.u32     %r455, %r156, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd324], %r154;
	add.s32 	%r454, %r454, 1;
	cvt.s64.s32	%rd325, %r454;
	mul.wide.s32 	%rd62, %r454, 4;
	add.s64 	%rd324, %rd321, %rd62;
	setp.ne.s32	%p38, %r454, 6;
	@%p38 bra 	BB0_12;

	mov.b32 	 %r441, %f1161;
	shr.u32 	%r440, %r441, 23;
	add.u64 	%rd323, %SP, 8;
	and.b32  	%r159, %r440, 255;
	add.s32 	%r160, %r159, -128;
	shr.u32 	%r161, %r160, 5;
	cvta.to.local.u64 	%rd64, %rd323;
	st.local.u32 	[%rd64+24], %r455;
	mov.u32 	%r162, 6;
	sub.s32 	%r163, %r162, %r161;
	mul.wide.s32 	%rd65, %r163, 4;
	add.s64 	%rd8, %rd64, %rd65;
	ld.local.u32 	%r456, [%rd8];
	ld.local.u32 	%r457, [%rd8+-4];
	and.b32  	%r23, %r440, 31;
	setp.eq.s32	%p39, %r23, 0;
	@%p39 bra 	BB0_15;

	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r23;
	shr.u32 	%r166, %r457, %r165;
	shl.b32 	%r167, %r456, %r23;
	add.s32 	%r456, %r166, %r167;
	ld.local.u32 	%r168, [%rd8+-8];
	shr.u32 	%r169, %r168, %r165;
	shl.b32 	%r170, %r457, %r23;
	add.s32 	%r457, %r169, %r170;

BB0_15:
	mov.b32 	 %r444, %f1161;
	and.b32  	%r459, %r444, -2147483648;
	shr.u32 	%r171, %r457, 30;
	shl.b32 	%r172, %r456, 2;
	add.s32 	%r458, %r171, %r172;
	shl.b32 	%r29, %r457, 2;
	shr.u32 	%r173, %r458, 31;
	shr.u32 	%r174, %r456, 30;
	add.s32 	%r30, %r173, %r174;
	setp.eq.s32	%p40, %r173, 0;
	@%p40 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r460, %r29;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r446, %f1161;
	and.b32  	%r445, %r446, -2147483648;
	not.b32 	%r175, %r458;
	neg.s32 	%r460, %r29;
	setp.eq.s32	%p41, %r29, 0;
	selp.u32	%r176, 1, 0, %p41;
	add.s32 	%r458, %r176, %r175;
	xor.b32  	%r459, %r445, -2147483648;

BB0_18:
	mov.b32 	 %r448, %f1161;
	and.b32  	%r447, %r448, -2147483648;
	clz.b32 	%r462, %r458;
	setp.eq.s32	%p42, %r462, 0;
	shl.b32 	%r177, %r458, %r462;
	mov.u32 	%r178, 32;
	sub.s32 	%r179, %r178, %r462;
	shr.u32 	%r180, %r460, %r179;
	add.s32 	%r181, %r180, %r177;
	selp.b32	%r38, %r458, %r181, %p42;
	mov.u32 	%r182, -921707870;
	mul.hi.u32 	%r461, %r38, %r182;
	setp.eq.s32	%p43, %r447, 0;
	neg.s32 	%r183, %r30;
	selp.b32	%r463, %r30, %r183, %p43;
	setp.lt.s32	%p44, %r461, 1;
	@%p44 bra 	BB0_20;

	mul.lo.s32 	%r184, %r38, -921707870;
	shr.u32 	%r185, %r184, 31;
	shl.b32 	%r186, %r461, 1;
	add.s32 	%r461, %r185, %r186;
	add.s32 	%r462, %r462, 1;

BB0_20:
	mov.u32 	%r187, 126;
	sub.s32 	%r188, %r187, %r462;
	shl.b32 	%r189, %r188, 23;
	add.s32 	%r190, %r461, 1;
	shr.u32 	%r191, %r190, 7;
	add.s32 	%r192, %r191, 1;
	shr.u32 	%r193, %r192, 1;
	add.s32 	%r194, %r193, %r189;
	or.b32  	%r195, %r194, %r459;
	mov.b32 	 %f1162, %r195;

BB0_21:
	mul.rn.f32 	%f133, %f1162, %f1162;
	add.s32 	%r46, %r463, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p45, %r47, 0;
	@%p45 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f499, 0f3C08839E;
	mov.f32 	%f500, 0fB94CA1F9;
	fma.rn.f32 	%f1163, %f500, %f133, %f499;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f497, 0fBAB6061A;
	mov.f32 	%f498, 0f37CCF5CE;
	fma.rn.f32 	%f1163, %f498, %f133, %f497;

BB0_24:
	@%p45 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f504, 0fBE2AAAA3;
	fma.rn.f32 	%f505, %f1163, %f133, %f504;
	mov.f32 	%f506, 0f00000000;
	fma.rn.f32 	%f1164, %f505, %f133, %f506;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f501, 0f3D2AAAA5;
	fma.rn.f32 	%f502, %f1163, %f133, %f501;
	mov.f32 	%f503, 0fBF000000;
	fma.rn.f32 	%f1164, %f502, %f133, %f503;

BB0_27:
	fma.rn.f32 	%f1165, %f1164, %f1162, %f1162;
	@%p45 bra 	BB0_29;

	mov.f32 	%f507, 0f3F800000;
	fma.rn.f32 	%f1165, %f1164, %f133, %f507;

BB0_29:
	and.b32  	%r196, %r46, 2;
	setp.eq.s32	%p48, %r196, 0;
	@%p48 bra 	BB0_31;

	mov.f32 	%f508, 0f00000000;
	mov.f32 	%f509, 0fBF800000;
	fma.rn.f32 	%f1165, %f1165, %f509, %f508;

BB0_31:
	abs.f32 	%f1150, %f1167;
	setp.neu.f32	%p155, %f1150, 0f7F800000;
	@%p155 bra 	BB0_33;

	mov.f32 	%f510, 0f00000000;
	mul.rn.f32 	%f1167, %f1167, %f510;

BB0_33:
	mov.f32 	%f1153, 0f27C234C5;
	mov.f32 	%f1152, 0f33A22168;
	mov.f32 	%f1151, 0f3FC90FDA;
	mul.f32 	%f511, %f1167, 0f3F22F983;
	cvt.rni.s32.f32	%r473, %f511;
	cvt.rn.f32.s32	%f512, %r473;
	neg.f32 	%f513, %f512;
	fma.rn.f32 	%f515, %f513, %f1151, %f1167;
	fma.rn.f32 	%f517, %f513, %f1152, %f515;
	fma.rn.f32 	%f1168, %f513, %f1153, %f517;
	abs.f32 	%f519, %f1167;
	setp.leu.f32	%p50, %f519, 0f47CE4780;
	@%p50 bra 	BB0_44;

	add.u64 	%rd67, %SP, 8;
	cvta.to.local.u64 	%rd9, %rd67;
	mov.b32 	 %r49, %f1167;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r199, %r49, 8;
	or.b32  	%r51, %r199, -2147483648;
	mov.u32 	%r464, 0;
	mov.u64 	%rd326, %rd9;
	mov.u64 	%rd327, %rd27;
	mov.u32 	%r465, %r464;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd327, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r202, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r200, %r202, %r51, %r465;
	madc.hi.u32     %r465, %r202, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd326], %r200;
	add.s32 	%r464, %r464, 1;
	cvt.s64.s32	%rd327, %r464;
	mul.wide.s32 	%rd71, %r464, 4;
	add.s64 	%rd326, %rd9, %rd71;
	setp.ne.s32	%p51, %r464, 6;
	@%p51 bra 	BB0_35;

	and.b32  	%r205, %r50, 255;
	add.s32 	%r206, %r205, -128;
	shr.u32 	%r207, %r206, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd73, %rd67;
	st.local.u32 	[%rd73+24], %r465;
	mov.u32 	%r208, 6;
	sub.s32 	%r209, %r208, %r207;
	mul.wide.s32 	%rd74, %r209, 4;
	add.s64 	%rd15, %rd73, %rd74;
	ld.local.u32 	%r466, [%rd15];
	ld.local.u32 	%r467, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p52, %r59, 0;
	@%p52 bra 	BB0_38;

	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r59;
	shr.u32 	%r212, %r467, %r211;
	shl.b32 	%r213, %r466, %r59;
	add.s32 	%r466, %r212, %r213;
	ld.local.u32 	%r214, [%rd15+-8];
	shr.u32 	%r215, %r214, %r211;
	shl.b32 	%r216, %r467, %r59;
	add.s32 	%r467, %r215, %r216;

BB0_38:
	shr.u32 	%r217, %r467, 30;
	shl.b32 	%r218, %r466, 2;
	add.s32 	%r468, %r217, %r218;
	shl.b32 	%r65, %r467, 2;
	shr.u32 	%r219, %r468, 31;
	shr.u32 	%r220, %r466, 30;
	add.s32 	%r66, %r219, %r220;
	setp.eq.s32	%p53, %r219, 0;
	@%p53 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r469, %r56;
	mov.u32 	%r470, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r221, %r468;
	neg.s32 	%r470, %r65;
	setp.eq.s32	%p54, %r65, 0;
	selp.u32	%r222, 1, 0, %p54;
	add.s32 	%r468, %r222, %r221;
	xor.b32  	%r469, %r56, -2147483648;

BB0_41:
	clz.b32 	%r472, %r468;
	setp.eq.s32	%p55, %r472, 0;
	shl.b32 	%r223, %r468, %r472;
	mov.u32 	%r224, 32;
	sub.s32 	%r225, %r224, %r472;
	shr.u32 	%r226, %r470, %r225;
	add.s32 	%r227, %r226, %r223;
	selp.b32	%r74, %r468, %r227, %p55;
	mov.u32 	%r228, -921707870;
	mul.hi.u32 	%r471, %r74, %r228;
	setp.eq.s32	%p56, %r56, 0;
	neg.s32 	%r229, %r66;
	selp.b32	%r473, %r66, %r229, %p56;
	setp.lt.s32	%p57, %r471, 1;
	@%p57 bra 	BB0_43;

	mul.lo.s32 	%r230, %r74, -921707870;
	shr.u32 	%r231, %r230, 31;
	shl.b32 	%r232, %r471, 1;
	add.s32 	%r471, %r231, %r232;
	add.s32 	%r472, %r472, 1;

BB0_43:
	mov.u32 	%r233, 126;
	sub.s32 	%r234, %r233, %r472;
	shl.b32 	%r235, %r234, 23;
	add.s32 	%r236, %r471, 1;
	shr.u32 	%r237, %r236, 7;
	add.s32 	%r238, %r237, 1;
	shr.u32 	%r239, %r238, 1;
	add.s32 	%r240, %r239, %r235;
	or.b32  	%r241, %r240, %r469;
	mov.b32 	 %f1168, %r241;

BB0_44:
	mul.rn.f32 	%f150, %f1168, %f1168;
	and.b32  	%r82, %r473, 1;
	setp.eq.s32	%p58, %r82, 0;
	@%p58 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f522, 0f3C08839E;
	mov.f32 	%f523, 0fB94CA1F9;
	fma.rn.f32 	%f1169, %f523, %f150, %f522;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f520, 0fBAB6061A;
	mov.f32 	%f521, 0f37CCF5CE;
	fma.rn.f32 	%f1169, %f521, %f150, %f520;

BB0_47:
	@%p58 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f527, 0fBE2AAAA3;
	fma.rn.f32 	%f528, %f1169, %f150, %f527;
	mov.f32 	%f529, 0f00000000;
	fma.rn.f32 	%f1170, %f528, %f150, %f529;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f524, 0f3D2AAAA5;
	fma.rn.f32 	%f525, %f1169, %f150, %f524;
	mov.f32 	%f526, 0fBF000000;
	fma.rn.f32 	%f1170, %f525, %f150, %f526;

BB0_50:
	fma.rn.f32 	%f1171, %f1170, %f1168, %f1168;
	@%p58 bra 	BB0_52;

	mov.f32 	%f530, 0f3F800000;
	fma.rn.f32 	%f1171, %f1170, %f150, %f530;

BB0_52:
	and.b32  	%r242, %r473, 2;
	setp.eq.s32	%p61, %r242, 0;
	@%p61 bra 	BB0_54;

	mov.f32 	%f531, 0f00000000;
	mov.f32 	%f532, 0fBF800000;
	fma.rn.f32 	%f1171, %f1171, %f532, %f531;

BB0_54:
	max.f32 	%f1149, %f470, %f308;
	mul.f32 	%f541, %f125, %f1165;
	add.u64 	%rd75, %SP, 4;
	cvta.to.local.u64 	%rd16, %rd75;
	mul.f32 	%f542, %f541, %f541;
	mov.f32 	%f543, 0f3F800000;
	sub.f32 	%f544, %f543, %f542;
	mul.f32 	%f545, %f125, %f1171;
	mul.f32 	%f546, %f545, %f545;
	sub.f32 	%f547, %f544, %f546;
	mov.f32 	%f548, 0f00000000;
	max.f32 	%f549, %f548, %f547;
	sqrt.rn.f32 	%f550, %f549;
	mul.f32 	%f551, %f21, %f545;
	mul.f32 	%f552, %f22, %f545;
	mul.f32 	%f553, %f23, %f545;
	fma.rn.f32 	%f554, %f86, %f541, %f551;
	fma.rn.f32 	%f555, %f85, %f541, %f552;
	fma.rn.f32 	%f556, %f84, %f541, %f553;
	fma.rn.f32 	%f557, %f7, %f550, %f554;
	fma.rn.f32 	%f558, %f8, %f550, %f555;
	fma.rn.f32 	%f559, %f9, %f550, %f556;
	add.f32 	%f560, %f7, %f557;
	add.f32 	%f561, %f8, %f558;
	add.f32 	%f562, %f9, %f559;
	ld.global.f32 	%f563, [shadowSpread];
	mul.f32 	%f564, %f563, %f560;
	mul.f32 	%f565, %f563, %f561;
	mul.f32 	%f566, %f563, %f562;
	sub.f32 	%f567, %f564, %f7;
	sub.f32 	%f568, %f565, %f8;
	sub.f32 	%f569, %f566, %f9;
	mul.f32 	%f570, %f568, %f568;
	fma.rn.f32 	%f571, %f567, %f567, %f570;
	fma.rn.f32 	%f572, %f569, %f569, %f571;
	sqrt.rn.f32 	%f573, %f572;
	rcp.rn.f32 	%f574, %f573;
	mul.f32 	%f162, %f574, %f567;
	mul.f32 	%f163, %f574, %f568;
	mul.f32 	%f164, %f574, %f569;
	ld.global.u32 	%r246, [imageEnabled];
	and.b32  	%r247, %r246, 32;
	setp.eq.s32	%p62, %r247, 0;
	selp.f32	%f575, 0f3F800000, 0f41200000, %p62;
	mul.f32 	%f539, %f575, %f1149;
	mov.u32 	%r248, 1065353216;
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r243, [root];
	mov.u32 	%r244, 1;
	// inline asm
	call _rt_trace_64, (%r243, %f11, %f12, %f13, %f92, %f93, %f94, %r244, %f539, %f91, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f576, [%rd16];
	mov.u16 	%rs170, 0;
	setp.neu.f32	%p63, %f576, 0f3F800000;
	@%p63 bra 	BB0_56;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r249, [root];
	mov.f32 	%f584, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r249, %f28, %f29, %f30, %f162, %f163, %f164, %r244, %f539, %f584, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f585, [%rd16];
	add.f32 	%f1160, %f1160, %f585;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_56:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r253, [root];
	// inline asm
	call _rt_trace_64, (%r253, %f11, %f12, %f13, %f96, %f97, %f98, %r244, %f539, %f95, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f594, [%rd16];
	setp.neu.f32	%p64, %f594, 0f3F800000;
	@%p64 bra 	BB0_58;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r257, [root];
	mov.f32 	%f602, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r257, %f35, %f36, %f37, %f162, %f163, %f164, %r244, %f539, %f602, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f603, [%rd16];
	add.f32 	%f1160, %f1160, %f603;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_58:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r261, [root];
	// inline asm
	call _rt_trace_64, (%r261, %f11, %f12, %f13, %f100, %f101, %f102, %r244, %f539, %f99, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f612, [%rd16];
	setp.neu.f32	%p65, %f612, 0f3F800000;
	@%p65 bra 	BB0_60;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r265, [root];
	mov.f32 	%f620, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r265, %f42, %f43, %f44, %f162, %f163, %f164, %r244, %f539, %f620, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f621, [%rd16];
	add.f32 	%f1160, %f1160, %f621;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_60:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r269, [root];
	// inline asm
	call _rt_trace_64, (%r269, %f11, %f12, %f13, %f104, %f105, %f106, %r244, %f539, %f103, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f630, [%rd16];
	setp.neu.f32	%p66, %f630, 0f3F800000;
	@%p66 bra 	BB0_62;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r273, [root];
	mov.f32 	%f638, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r273, %f49, %f50, %f51, %f162, %f163, %f164, %r244, %f539, %f638, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f639, [%rd16];
	add.f32 	%f1160, %f1160, %f639;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_62:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r277, [root];
	// inline asm
	call _rt_trace_64, (%r277, %f11, %f12, %f13, %f108, %f109, %f110, %r244, %f539, %f107, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f648, [%rd16];
	setp.neu.f32	%p67, %f648, 0f3F800000;
	@%p67 bra 	BB0_64;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r281, [root];
	mov.f32 	%f656, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r281, %f56, %f57, %f58, %f162, %f163, %f164, %r244, %f539, %f656, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f657, [%rd16];
	add.f32 	%f1160, %f1160, %f657;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_64:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r285, [root];
	// inline asm
	call _rt_trace_64, (%r285, %f11, %f12, %f13, %f112, %f113, %f114, %r244, %f539, %f111, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f666, [%rd16];
	setp.neu.f32	%p68, %f666, 0f3F800000;
	@%p68 bra 	BB0_66;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r289, [root];
	mov.f32 	%f674, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r289, %f63, %f64, %f65, %f162, %f163, %f164, %r244, %f539, %f674, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f675, [%rd16];
	add.f32 	%f1160, %f1160, %f675;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_66:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r293, [root];
	// inline asm
	call _rt_trace_64, (%r293, %f11, %f12, %f13, %f116, %f117, %f118, %r244, %f539, %f115, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f684, [%rd16];
	setp.neu.f32	%p69, %f684, 0f3F800000;
	@%p69 bra 	BB0_68;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r297, [root];
	mov.f32 	%f692, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r297, %f70, %f71, %f72, %f162, %f163, %f164, %r244, %f539, %f692, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f693, [%rd16];
	add.f32 	%f1160, %f1160, %f693;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_68:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r301, [root];
	// inline asm
	call _rt_trace_64, (%r301, %f11, %f12, %f13, %f120, %f121, %f122, %r244, %f539, %f119, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f702, [%rd16];
	setp.neu.f32	%p70, %f702, 0f3F800000;
	@%p70 bra 	BB0_70;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r305, [root];
	mov.f32 	%f710, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r305, %f77, %f78, %f79, %f162, %f163, %f164, %r244, %f539, %f710, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f711, [%rd16];
	add.f32 	%f1160, %f1160, %f711;
	add.f32 	%f1159, %f1159, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_70:
	setp.ne.s16	%p71, %rs170, 0;
	@%p71 bra 	BB0_72;

	add.u64 	%rd91, %SP, 0;
	cvta.to.local.u64 	%rd92, %rd91;
	st.local.u32 	[%rd92], %r248;
	ld.global.u32 	%r309, [root];
	mov.f32 	%f719, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r309, %f11, %f12, %f13, %f162, %f163, %f164, %r244, %f539, %f719, %rd91, %r100);
	// inline asm
	ld.local.f32 	%f720, [%rd92];
	add.f32 	%f1160, %f1160, %f720;
	add.f32 	%f1159, %f1159, 0f3F800000;

BB0_72:
	mad.lo.s32 	%r439, %r475, 1664525, 1013904223;
	mad.lo.s32 	%r475, %r439, 1664525, 1013904223;
	ld.global.u32 	%r449, [samples];
	add.s32 	%r452, %r452, 1;
	setp.lt.s32	%p72, %r452, %r449;
	@%p72 bra 	BB0_8;

BB0_73:
	add.s32 	%r450, %r450, 1;
	setp.lt.s32	%p73, %r450, %r449;
	@%p73 bra 	BB0_6;
	bra.uni 	BB0_74;

BB0_4:
	mov.f32 	%f1160, %f1159;

BB0_74:
	setp.eq.s32	%p74, %r449, 0;
	mov.f32 	%f1195, 0f3F800000;
	@%p74 bra 	BB0_76;

	mov.f32 	%f722, 0f3F800000;
	max.f32 	%f723, %f1159, %f722;
	div.rn.f32 	%f1195, %f1160, %f723;

BB0_76:
	ld.global.f32 	%f724, [directColor];
	mul.f32 	%f725, %f1195, %f724;
	ld.global.f32 	%f726, [directColor+4];
	mul.f32 	%f727, %f1195, %f726;
	ld.global.f32 	%f728, [directColor+8];
	mul.f32 	%f729, %f1195, %f728;
	cvt.sat.f32.f32	%f730, %f10;
	mul.f32 	%f208, %f725, %f730;
	mul.f32 	%f209, %f727, %f730;
	mul.f32 	%f210, %f729, %f730;
	mul.f32 	%f731, %f10, 0f40800000;
	cvt.sat.f32.f32	%f732, %f731;
	mul.f32 	%f733, %f725, %f732;
	mul.f32 	%f734, %f727, %f732;
	mul.f32 	%f735, %f729, %f732;
	mul.f32 	%f211, %f733, 0f3E800000;
	mul.f32 	%f212, %f734, 0f3E800000;
	mul.f32 	%f213, %f735, 0f3E800000;
	ld.global.u32 	%r478, [imageEnabled];
	and.b32  	%r313, %r478, 8;
	setp.eq.s32	%p75, %r313, 0;
	@%p75 bra 	BB0_89;

	cvt.u64.u32	%rd95, %r2;
	cvt.u64.u32	%rd96, %r3;
	mov.u64 	%rd99, image_Mask;
	cvta.global.u64 	%rd94, %rd99;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r99, %r99, %rd95, %rd96, %rd27, %rd27);
	// inline asm
	mov.f32 	%f738, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f739, %f738;
	fma.rn.f32 	%f740, %f739, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f214, %f740;
	abs.f32 	%f215, %f1195;
	setp.lt.f32	%p76, %f215, 0f00800000;
	mul.f32 	%f741, %f215, 0f4B800000;
	selp.f32	%f742, 0fC3170000, 0fC2FE0000, %p76;
	selp.f32	%f743, %f741, %f215, %p76;
	mov.b32 	 %r316, %f743;
	and.b32  	%r317, %r316, 8388607;
	or.b32  	%r318, %r317, 1065353216;
	mov.b32 	 %f744, %r318;
	shr.u32 	%r319, %r316, 23;
	cvt.rn.f32.u32	%f745, %r319;
	add.f32 	%f746, %f742, %f745;
	setp.gt.f32	%p77, %f744, 0f3FB504F3;
	mul.f32 	%f747, %f744, 0f3F000000;
	add.f32 	%f748, %f746, 0f3F800000;
	selp.f32	%f749, %f747, %f744, %p77;
	selp.f32	%f750, %f748, %f746, %p77;
	add.f32 	%f751, %f749, 0fBF800000;
	add.f32 	%f737, %f749, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f736,%f737;
	// inline asm
	add.f32 	%f752, %f751, %f751;
	mul.f32 	%f753, %f736, %f752;
	mul.f32 	%f754, %f753, %f753;
	mov.f32 	%f755, 0f3C4CAF63;
	mov.f32 	%f756, 0f3B18F0FE;
	fma.rn.f32 	%f757, %f756, %f754, %f755;
	mov.f32 	%f758, 0f3DAAAABD;
	fma.rn.f32 	%f759, %f757, %f754, %f758;
	mul.rn.f32 	%f760, %f759, %f754;
	mul.rn.f32 	%f761, %f760, %f753;
	sub.f32 	%f762, %f751, %f753;
	neg.f32 	%f763, %f753;
	add.f32 	%f764, %f762, %f762;
	fma.rn.f32 	%f765, %f763, %f751, %f764;
	mul.rn.f32 	%f766, %f736, %f765;
	add.f32 	%f767, %f761, %f753;
	sub.f32 	%f768, %f753, %f767;
	add.f32 	%f769, %f761, %f768;
	add.f32 	%f770, %f766, %f769;
	add.f32 	%f771, %f767, %f770;
	sub.f32 	%f772, %f767, %f771;
	add.f32 	%f773, %f770, %f772;
	mov.f32 	%f774, 0f3F317200;
	mul.rn.f32 	%f775, %f750, %f774;
	mov.f32 	%f776, 0f35BFBE8E;
	mul.rn.f32 	%f777, %f750, %f776;
	add.f32 	%f778, %f775, %f771;
	sub.f32 	%f779, %f775, %f778;
	add.f32 	%f780, %f771, %f779;
	add.f32 	%f781, %f773, %f780;
	add.f32 	%f782, %f777, %f781;
	add.f32 	%f783, %f778, %f782;
	sub.f32 	%f784, %f778, %f783;
	add.f32 	%f785, %f782, %f784;
	mov.f32 	%f786, 0f3EE8BA2E;
	mul.rn.f32 	%f787, %f786, %f783;
	neg.f32 	%f788, %f787;
	fma.rn.f32 	%f789, %f786, %f783, %f788;
	fma.rn.f32 	%f790, %f786, %f785, %f789;
	mov.f32 	%f791, 0f00000000;
	fma.rn.f32 	%f792, %f791, %f783, %f790;
	add.rn.f32 	%f793, %f787, %f792;
	neg.f32 	%f794, %f793;
	add.rn.f32 	%f795, %f787, %f794;
	add.rn.f32 	%f796, %f795, %f792;
	mov.b32 	 %r320, %f793;
	setp.eq.s32	%p78, %r320, 1118925336;
	add.s32 	%r321, %r320, -1;
	mov.b32 	 %f797, %r321;
	add.f32 	%f798, %f796, 0f37000000;
	selp.f32	%f799, %f797, %f793, %p78;
	selp.f32	%f216, %f798, %f796, %p78;
	mul.f32 	%f800, %f799, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f801, %f800;
	mov.f32 	%f802, 0fBF317200;
	fma.rn.f32 	%f803, %f801, %f802, %f799;
	mov.f32 	%f804, 0fB5BFBE8E;
	fma.rn.f32 	%f805, %f801, %f804, %f803;
	mul.f32 	%f806, %f805, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f807, %f806;
	add.f32 	%f808, %f801, 0f00000000;
	ex2.approx.f32 	%f809, %f808;
	mul.f32 	%f810, %f807, %f809;
	setp.lt.f32	%p79, %f799, 0fC2D20000;
	selp.f32	%f811, 0f00000000, %f810, %p79;
	setp.gt.f32	%p80, %f799, 0f42D20000;
	selp.f32	%f1196, 0f7F800000, %f811, %p80;
	setp.eq.f32	%p81, %f1196, 0f7F800000;
	@%p81 bra 	BB0_79;

	fma.rn.f32 	%f1196, %f1196, %f216, %f1196;

BB0_79:
	setp.lt.f32	%p82, %f1195, 0f00000000;
	setp.eq.f32	%p83, %f214, 0f3F800000;
	and.pred  	%p1, %p82, %p83;
	mov.b32 	 %r322, %f1196;
	xor.b32  	%r323, %r322, -2147483648;
	mov.b32 	 %f812, %r323;
	selp.f32	%f1198, %f812, %f1196, %p1;
	setp.eq.f32	%p84, %f1195, 0f00000000;
	@%p84 bra 	BB0_82;
	bra.uni 	BB0_80;

BB0_82:
	add.f32 	%f815, %f1195, %f1195;
	selp.f32	%f1198, %f815, 0f00000000, %p83;
	bra.uni 	BB0_83;

BB0_147:
	mov.u64 	%rd240, image_HDR;
	cvta.global.u64 	%rd235, %rd240;
	mov.u32 	%r409, 8;
	mov.u64 	%rd239, 0;
	// inline asm
	call (%rd234), _rt_buffer_get_64, (%rd235, %r99, %r409, %rd20, %rd21, %rd239, %rd239);
	// inline asm
	mov.f32 	%f1119, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs115, %f1119;}

	// inline asm
	mov.u16 	%rs116, 0;
	st.v4.u16 	[%rd234], {%rs115, %rs115, %rs115, %rs116};

BB0_148:
	ld.global.u32 	%r410, [additive];
	setp.eq.s32	%p151, %r410, 0;
	@%p151 bra 	BB0_150;

	mov.u64 	%rd253, image_RNM0;
	cvta.global.u64 	%rd242, %rd253;
	mov.u32 	%r414, 8;
	mov.u64 	%rd252, 0;
	// inline asm
	call (%rd241), _rt_buffer_get_64, (%rd242, %r99, %r414, %rd20, %rd21, %rd252, %rd252);
	// inline asm
	ld.v4.u16 	{%rs123, %rs124, %rs125, %rs126}, [%rd241];
	// inline asm
	{  cvt.f32.f16 %f1120, %rs123;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1121, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1122, %rs125;}

	// inline asm
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd242, %r99, %r414, %rd20, %rd21, %rd252, %rd252);
	// inline asm
	add.f32 	%f1123, %f1120, 0f00000000;
	add.f32 	%f1124, %f1121, 0f00000000;
	add.f32 	%f1125, %f1122, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1125;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1124;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs120, %f1123;}

	// inline asm
	mov.u16 	%rs127, 0;
	st.v4.u16 	[%rd247], {%rs120, %rs121, %rs122, %rs127};
	bra.uni 	BB0_151;

BB0_150:
	mov.u64 	%rd260, image_RNM0;
	cvta.global.u64 	%rd255, %rd260;
	mov.u32 	%r416, 8;
	mov.u64 	%rd259, 0;
	// inline asm
	call (%rd254), _rt_buffer_get_64, (%rd255, %r99, %r416, %rd20, %rd21, %rd259, %rd259);
	// inline asm
	mov.f32 	%f1126, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs128, %f1126;}

	// inline asm
	mov.u16 	%rs129, 0;
	st.v4.u16 	[%rd254], {%rs128, %rs128, %rs128, %rs129};

BB0_151:
	ld.global.u32 	%r417, [additive];
	setp.eq.s32	%p152, %r417, 0;
	@%p152 bra 	BB0_153;

	mov.u64 	%rd273, image_RNM1;
	cvta.global.u64 	%rd262, %rd273;
	mov.u32 	%r421, 8;
	mov.u64 	%rd272, 0;
	// inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r99, %r421, %rd20, %rd21, %rd272, %rd272);
	// inline asm
	ld.v4.u16 	{%rs136, %rs137, %rs138, %rs139}, [%rd261];
	// inline asm
	{  cvt.f32.f16 %f1127, %rs136;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1128, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1129, %rs138;}

	// inline asm
	// inline asm
	call (%rd267), _rt_buffer_get_64, (%rd262, %r99, %r421, %rd20, %rd21, %rd272, %rd272);
	// inline asm
	add.f32 	%f1130, %f1127, 0f00000000;
	add.f32 	%f1131, %f1128, 0f00000000;
	add.f32 	%f1132, %f1129, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1132;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1131;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f1130;}

	// inline asm
	mov.u16 	%rs140, 0;
	st.v4.u16 	[%rd267], {%rs133, %rs134, %rs135, %rs140};
	bra.uni 	BB0_154;

BB0_153:
	mov.u64 	%rd280, image_RNM1;
	cvta.global.u64 	%rd275, %rd280;
	mov.u32 	%r423, 8;
	mov.u64 	%rd279, 0;
	// inline asm
	call (%rd274), _rt_buffer_get_64, (%rd275, %r99, %r423, %rd20, %rd21, %rd279, %rd279);
	// inline asm
	mov.f32 	%f1133, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs141, %f1133;}

	// inline asm
	mov.u16 	%rs142, 0;
	st.v4.u16 	[%rd274], {%rs141, %rs141, %rs141, %rs142};

BB0_154:
	ld.global.u32 	%r424, [additive];
	setp.eq.s32	%p153, %r424, 0;
	@%p153 bra 	BB0_156;

	mov.u64 	%rd293, image_RNM2;
	cvta.global.u64 	%rd282, %rd293;
	mov.u32 	%r428, 8;
	mov.u64 	%rd292, 0;
	// inline asm
	call (%rd281), _rt_buffer_get_64, (%rd282, %r99, %r428, %rd20, %rd21, %rd292, %rd292);
	// inline asm
	ld.v4.u16 	{%rs149, %rs150, %rs151, %rs152}, [%rd281];
	// inline asm
	{  cvt.f32.f16 %f1134, %rs149;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1135, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1136, %rs151;}

	// inline asm
	// inline asm
	call (%rd287), _rt_buffer_get_64, (%rd282, %r99, %r428, %rd20, %rd21, %rd292, %rd292);
	// inline asm
	add.f32 	%f1137, %f1134, 0f00000000;
	add.f32 	%f1138, %f1135, 0f00000000;
	add.f32 	%f1139, %f1136, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1139;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1138;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f1137;}

	// inline asm
	mov.u16 	%rs153, 0;
	st.v4.u16 	[%rd287], {%rs146, %rs147, %rs148, %rs153};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd300, image_RNM2;
	cvta.global.u64 	%rd295, %rd300;
	mov.u32 	%r430, 8;
	mov.u64 	%rd299, 0;
	// inline asm
	call (%rd294), _rt_buffer_get_64, (%rd295, %r99, %r430, %rd20, %rd21, %rd299, %rd299);
	// inline asm
	mov.f32 	%f1140, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs154, %f1140;}

	// inline asm
	mov.u16 	%rs155, 0;
	st.v4.u16 	[%rd294], {%rs154, %rs154, %rs154, %rs155};

BB0_157:
	ld.global.u32 	%r431, [additive];
	setp.eq.s32	%p154, %r431, 0;
	@%p154 bra 	BB0_159;

	mov.u64 	%rd313, image_RNM3;
	cvta.global.u64 	%rd302, %rd313;
	mov.u32 	%r435, 8;
	mov.u64 	%rd312, 0;
	// inline asm
	call (%rd301), _rt_buffer_get_64, (%rd302, %r99, %r435, %rd20, %rd21, %rd312, %rd312);
	// inline asm
	ld.v4.u16 	{%rs162, %rs163, %rs164, %rs165}, [%rd301];
	// inline asm
	{  cvt.f32.f16 %f1141, %rs162;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1142, %rs163;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1143, %rs164;}

	// inline asm
	// inline asm
	call (%rd307), _rt_buffer_get_64, (%rd302, %r99, %r435, %rd20, %rd21, %rd312, %rd312);
	// inline asm
	add.f32 	%f1144, %f1141, 0f00000000;
	add.f32 	%f1145, %f1142, 0f00000000;
	add.f32 	%f1146, %f1143, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs161, %f1146;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs160, %f1145;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f1144;}

	// inline asm
	mov.u16 	%rs166, 0;
	st.v4.u16 	[%rd307], {%rs159, %rs160, %rs161, %rs166};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd320, image_RNM3;
	cvta.global.u64 	%rd315, %rd320;
	mov.u32 	%r437, 8;
	mov.u64 	%rd319, 0;
	// inline asm
	call (%rd314), _rt_buffer_get_64, (%rd315, %r99, %r437, %rd20, %rd21, %rd319, %rd319);
	// inline asm
	mov.f32 	%f1147, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs167, %f1147;}

	// inline asm
	mov.u16 	%rs168, 0;
	st.v4.u16 	[%rd314], {%rs167, %rs167, %rs167, %rs168};
	bra.uni 	BB0_160;

BB0_80:
	setp.geu.f32	%p85, %f1195, 0f00000000;
	@%p85 bra 	BB0_83;

	cvt.rzi.f32.f32	%f814, %f786;
	setp.neu.f32	%p86, %f814, 0f3EE8BA2E;
	selp.f32	%f1198, 0f7FFFFFFF, %f1198, %p86;

BB0_83:
	add.f32 	%f816, %f215, 0f3EE8BA2E;
	mov.b32 	 %r324, %f816;
	setp.lt.s32	%p88, %r324, 2139095040;
	@%p88 bra 	BB0_88;

	setp.gtu.f32	%p89, %f215, 0f7F800000;
	@%p89 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f1198, %f1195, 0f3EE8BA2E;
	bra.uni 	BB0_88;

BB0_85:
	setp.neu.f32	%p90, %f215, 0f7F800000;
	@%p90 bra 	BB0_88;

	selp.f32	%f1198, 0fFF800000, 0f7F800000, %p1;

BB0_88:
	mul.f32 	%f817, %f1198, 0f437F0000;
	setp.eq.f32	%p91, %f1195, 0f3F800000;
	selp.f32	%f818, 0f437F0000, %f817, %p91;
	cvt.rzi.u32.f32	%r325, %f818;
	cvt.u16.u32	%rs31, %r325;
	mov.u16 	%rs32, 255;
	st.v2.u8 	[%rd93], {%rs31, %rs32};
	ld.global.u32 	%r478, [imageEnabled];

BB0_89:
	and.b32  	%r326, %r478, 1;
	setp.eq.b32	%p92, %r326, 1;
	@!%p92 bra 	BB0_124;
	bra.uni 	BB0_90;

BB0_90:
	mov.f32 	%f821, 0f3E666666;
	cvt.rzi.f32.f32	%f822, %f821;
	fma.rn.f32 	%f823, %f822, 0fC0000000, 0f3EE66666;
	abs.f32 	%f227, %f823;
	abs.f32 	%f228, %f208;
	setp.lt.f32	%p93, %f228, 0f00800000;
	mul.f32 	%f824, %f228, 0f4B800000;
	selp.f32	%f825, 0fC3170000, 0fC2FE0000, %p93;
	selp.f32	%f826, %f824, %f228, %p93;
	mov.b32 	 %r327, %f826;
	and.b32  	%r328, %r327, 8388607;
	or.b32  	%r329, %r328, 1065353216;
	mov.b32 	 %f827, %r329;
	shr.u32 	%r330, %r327, 23;
	cvt.rn.f32.u32	%f828, %r330;
	add.f32 	%f829, %f825, %f828;
	setp.gt.f32	%p94, %f827, 0f3FB504F3;
	mul.f32 	%f830, %f827, 0f3F000000;
	add.f32 	%f831, %f829, 0f3F800000;
	selp.f32	%f832, %f830, %f827, %p94;
	selp.f32	%f833, %f831, %f829, %p94;
	add.f32 	%f834, %f832, 0fBF800000;
	add.f32 	%f820, %f832, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f819,%f820;
	// inline asm
	add.f32 	%f835, %f834, %f834;
	mul.f32 	%f836, %f819, %f835;
	mul.f32 	%f837, %f836, %f836;
	mov.f32 	%f838, 0f3C4CAF63;
	mov.f32 	%f839, 0f3B18F0FE;
	fma.rn.f32 	%f840, %f839, %f837, %f838;
	mov.f32 	%f841, 0f3DAAAABD;
	fma.rn.f32 	%f842, %f840, %f837, %f841;
	mul.rn.f32 	%f843, %f842, %f837;
	mul.rn.f32 	%f844, %f843, %f836;
	sub.f32 	%f845, %f834, %f836;
	neg.f32 	%f846, %f836;
	add.f32 	%f847, %f845, %f845;
	fma.rn.f32 	%f848, %f846, %f834, %f847;
	mul.rn.f32 	%f849, %f819, %f848;
	add.f32 	%f850, %f844, %f836;
	sub.f32 	%f851, %f836, %f850;
	add.f32 	%f852, %f844, %f851;
	add.f32 	%f853, %f849, %f852;
	add.f32 	%f854, %f850, %f853;
	sub.f32 	%f855, %f850, %f854;
	add.f32 	%f856, %f853, %f855;
	mov.f32 	%f857, 0f3F317200;
	mul.rn.f32 	%f858, %f833, %f857;
	mov.f32 	%f859, 0f35BFBE8E;
	mul.rn.f32 	%f860, %f833, %f859;
	add.f32 	%f861, %f858, %f854;
	sub.f32 	%f862, %f858, %f861;
	add.f32 	%f863, %f854, %f862;
	add.f32 	%f864, %f856, %f863;
	add.f32 	%f865, %f860, %f864;
	add.f32 	%f866, %f861, %f865;
	sub.f32 	%f867, %f861, %f866;
	add.f32 	%f868, %f865, %f867;
	mov.f32 	%f869, 0f3EE66666;
	mul.rn.f32 	%f870, %f869, %f866;
	neg.f32 	%f871, %f870;
	fma.rn.f32 	%f872, %f869, %f866, %f871;
	fma.rn.f32 	%f873, %f869, %f868, %f872;
	mov.f32 	%f874, 0f00000000;
	fma.rn.f32 	%f875, %f874, %f866, %f873;
	add.rn.f32 	%f876, %f870, %f875;
	neg.f32 	%f877, %f876;
	add.rn.f32 	%f878, %f870, %f877;
	add.rn.f32 	%f879, %f878, %f875;
	mov.b32 	 %r331, %f876;
	setp.eq.s32	%p95, %r331, 1118925336;
	add.s32 	%r332, %r331, -1;
	mov.b32 	 %f880, %r332;
	add.f32 	%f881, %f879, 0f37000000;
	selp.f32	%f882, %f880, %f876, %p95;
	selp.f32	%f229, %f881, %f879, %p95;
	mul.f32 	%f883, %f882, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f884, %f883;
	mov.f32 	%f885, 0fBF317200;
	fma.rn.f32 	%f886, %f884, %f885, %f882;
	mov.f32 	%f887, 0fB5BFBE8E;
	fma.rn.f32 	%f888, %f884, %f887, %f886;
	mul.f32 	%f889, %f888, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f890, %f889;
	add.f32 	%f891, %f884, 0f00000000;
	ex2.approx.f32 	%f892, %f891;
	mul.f32 	%f893, %f890, %f892;
	setp.lt.f32	%p96, %f882, 0fC2D20000;
	selp.f32	%f894, 0f00000000, %f893, %p96;
	setp.gt.f32	%p97, %f882, 0f42D20000;
	selp.f32	%f1199, 0f7F800000, %f894, %p97;
	setp.eq.f32	%p98, %f1199, 0f7F800000;
	@%p98 bra 	BB0_92;

	fma.rn.f32 	%f1199, %f1199, %f229, %f1199;

BB0_92:
	setp.lt.f32	%p99, %f208, 0f00000000;
	setp.eq.f32	%p100, %f227, 0f3F800000;
	and.pred  	%p2, %p99, %p100;
	mov.b32 	 %r333, %f1199;
	xor.b32  	%r334, %r333, -2147483648;
	mov.b32 	 %f895, %r334;
	selp.f32	%f1201, %f895, %f1199, %p2;
	setp.eq.f32	%p101, %f208, 0f00000000;
	@%p101 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f898, %f208, %f208;
	selp.f32	%f1201, %f898, 0f00000000, %p100;
	bra.uni 	BB0_96;

BB0_93:
	setp.geu.f32	%p102, %f208, 0f00000000;
	@%p102 bra 	BB0_96;

	cvt.rzi.f32.f32	%f897, %f869;
	setp.neu.f32	%p103, %f897, 0f3EE66666;
	selp.f32	%f1201, 0f7FFFFFFF, %f1201, %p103;

BB0_96:
	add.f32 	%f899, %f228, 0f3EE66666;
	mov.b32 	 %r335, %f899;
	setp.lt.s32	%p105, %r335, 2139095040;
	@%p105 bra 	BB0_101;

	setp.gtu.f32	%p106, %f228, 0f7F800000;
	@%p106 bra 	BB0_100;
	bra.uni 	BB0_98;

BB0_100:
	add.f32 	%f1201, %f208, 0f3EE66666;
	bra.uni 	BB0_101;

BB0_98:
	setp.neu.f32	%p107, %f228, 0f7F800000;
	@%p107 bra 	BB0_101;

	selp.f32	%f1201, 0fFF800000, 0f7F800000, %p2;

BB0_101:
	setp.eq.f32	%p108, %f208, 0f3F800000;
	selp.f32	%f240, 0f3F800000, %f1201, %p108;
	abs.f32 	%f241, %f209;
	setp.lt.f32	%p109, %f241, 0f00800000;
	mul.f32 	%f902, %f241, 0f4B800000;
	selp.f32	%f903, 0fC3170000, 0fC2FE0000, %p109;
	selp.f32	%f904, %f902, %f241, %p109;
	mov.b32 	 %r336, %f904;
	and.b32  	%r337, %r336, 8388607;
	or.b32  	%r338, %r337, 1065353216;
	mov.b32 	 %f905, %r338;
	shr.u32 	%r339, %r336, 23;
	cvt.rn.f32.u32	%f906, %r339;
	add.f32 	%f907, %f903, %f906;
	setp.gt.f32	%p110, %f905, 0f3FB504F3;
	mul.f32 	%f908, %f905, 0f3F000000;
	add.f32 	%f909, %f907, 0f3F800000;
	selp.f32	%f910, %f908, %f905, %p110;
	selp.f32	%f911, %f909, %f907, %p110;
	add.f32 	%f912, %f910, 0fBF800000;
	add.f32 	%f901, %f910, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f900,%f901;
	// inline asm
	add.f32 	%f913, %f912, %f912;
	mul.f32 	%f914, %f900, %f913;
	mul.f32 	%f915, %f914, %f914;
	fma.rn.f32 	%f918, %f839, %f915, %f838;
	fma.rn.f32 	%f920, %f918, %f915, %f841;
	mul.rn.f32 	%f921, %f920, %f915;
	mul.rn.f32 	%f922, %f921, %f914;
	sub.f32 	%f923, %f912, %f914;
	neg.f32 	%f924, %f914;
	add.f32 	%f925, %f923, %f923;
	fma.rn.f32 	%f926, %f924, %f912, %f925;
	mul.rn.f32 	%f927, %f900, %f926;
	add.f32 	%f928, %f922, %f914;
	sub.f32 	%f929, %f914, %f928;
	add.f32 	%f930, %f922, %f929;
	add.f32 	%f931, %f927, %f930;
	add.f32 	%f932, %f928, %f931;
	sub.f32 	%f933, %f928, %f932;
	add.f32 	%f934, %f931, %f933;
	mul.rn.f32 	%f936, %f911, %f857;
	mul.rn.f32 	%f938, %f911, %f859;
	add.f32 	%f939, %f936, %f932;
	sub.f32 	%f940, %f936, %f939;
	add.f32 	%f941, %f932, %f940;
	add.f32 	%f942, %f934, %f941;
	add.f32 	%f943, %f938, %f942;
	add.f32 	%f944, %f939, %f943;
	sub.f32 	%f945, %f939, %f944;
	add.f32 	%f946, %f943, %f945;
	mul.rn.f32 	%f948, %f869, %f944;
	neg.f32 	%f949, %f948;
	fma.rn.f32 	%f950, %f869, %f944, %f949;
	fma.rn.f32 	%f951, %f869, %f946, %f950;
	fma.rn.f32 	%f953, %f874, %f944, %f951;
	add.rn.f32 	%f954, %f948, %f953;
	neg.f32 	%f955, %f954;
	add.rn.f32 	%f956, %f948, %f955;
	add.rn.f32 	%f957, %f956, %f953;
	mov.b32 	 %r340, %f954;
	setp.eq.s32	%p111, %r340, 1118925336;
	add.s32 	%r341, %r340, -1;
	mov.b32 	 %f958, %r341;
	add.f32 	%f959, %f957, 0f37000000;
	selp.f32	%f960, %f958, %f954, %p111;
	selp.f32	%f242, %f959, %f957, %p111;
	mul.f32 	%f961, %f960, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f962, %f961;
	fma.rn.f32 	%f964, %f962, %f885, %f960;
	fma.rn.f32 	%f966, %f962, %f887, %f964;
	mul.f32 	%f967, %f966, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f968, %f967;
	add.f32 	%f969, %f962, 0f00000000;
	ex2.approx.f32 	%f970, %f969;
	mul.f32 	%f971, %f968, %f970;
	setp.lt.f32	%p112, %f960, 0fC2D20000;
	selp.f32	%f972, 0f00000000, %f971, %p112;
	setp.gt.f32	%p113, %f960, 0f42D20000;
	selp.f32	%f1202, 0f7F800000, %f972, %p113;
	setp.eq.f32	%p114, %f1202, 0f7F800000;
	@%p114 bra 	BB0_103;

	fma.rn.f32 	%f1202, %f1202, %f242, %f1202;

BB0_103:
	setp.lt.f32	%p115, %f209, 0f00000000;
	and.pred  	%p3, %p115, %p100;
	mov.b32 	 %r342, %f1202;
	xor.b32  	%r343, %r342, -2147483648;
	mov.b32 	 %f973, %r343;
	selp.f32	%f1204, %f973, %f1202, %p3;
	setp.eq.f32	%p117, %f209, 0f00000000;
	@%p117 bra 	BB0_106;
	bra.uni 	BB0_104;

BB0_106:
	add.f32 	%f976, %f209, %f209;
	selp.f32	%f1204, %f976, 0f00000000, %p100;
	bra.uni 	BB0_107;

BB0_104:
	setp.geu.f32	%p118, %f209, 0f00000000;
	@%p118 bra 	BB0_107;

	cvt.rzi.f32.f32	%f975, %f869;
	setp.neu.f32	%p119, %f975, 0f3EE66666;
	selp.f32	%f1204, 0f7FFFFFFF, %f1204, %p119;

BB0_107:
	add.f32 	%f977, %f241, 0f3EE66666;
	mov.b32 	 %r344, %f977;
	setp.lt.s32	%p121, %r344, 2139095040;
	@%p121 bra 	BB0_112;

	setp.gtu.f32	%p122, %f241, 0f7F800000;
	@%p122 bra 	BB0_111;
	bra.uni 	BB0_109;

BB0_111:
	add.f32 	%f1204, %f209, 0f3EE66666;
	bra.uni 	BB0_112;

BB0_109:
	setp.neu.f32	%p123, %f241, 0f7F800000;
	@%p123 bra 	BB0_112;

	selp.f32	%f1204, 0fFF800000, 0f7F800000, %p3;

BB0_112:
	setp.eq.f32	%p124, %f209, 0f3F800000;
	selp.f32	%f253, 0f3F800000, %f1204, %p124;
	abs.f32 	%f254, %f210;
	setp.lt.f32	%p125, %f254, 0f00800000;
	mul.f32 	%f980, %f254, 0f4B800000;
	selp.f32	%f981, 0fC3170000, 0fC2FE0000, %p125;
	selp.f32	%f982, %f980, %f254, %p125;
	mov.b32 	 %r345, %f982;
	and.b32  	%r346, %r345, 8388607;
	or.b32  	%r347, %r346, 1065353216;
	mov.b32 	 %f983, %r347;
	shr.u32 	%r348, %r345, 23;
	cvt.rn.f32.u32	%f984, %r348;
	add.f32 	%f985, %f981, %f984;
	setp.gt.f32	%p126, %f983, 0f3FB504F3;
	mul.f32 	%f986, %f983, 0f3F000000;
	add.f32 	%f987, %f985, 0f3F800000;
	selp.f32	%f988, %f986, %f983, %p126;
	selp.f32	%f989, %f987, %f985, %p126;
	add.f32 	%f990, %f988, 0fBF800000;
	add.f32 	%f979, %f988, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// inline asm
	add.f32 	%f991, %f990, %f990;
	mul.f32 	%f992, %f978, %f991;
	mul.f32 	%f993, %f992, %f992;
	fma.rn.f32 	%f996, %f839, %f993, %f838;
	fma.rn.f32 	%f998, %f996, %f993, %f841;
	mul.rn.f32 	%f999, %f998, %f993;
	mul.rn.f32 	%f1000, %f999, %f992;
	sub.f32 	%f1001, %f990, %f992;
	neg.f32 	%f1002, %f992;
	add.f32 	%f1003, %f1001, %f1001;
	fma.rn.f32 	%f1004, %f1002, %f990, %f1003;
	mul.rn.f32 	%f1005, %f978, %f1004;
	add.f32 	%f1006, %f1000, %f992;
	sub.f32 	%f1007, %f992, %f1006;
	add.f32 	%f1008, %f1000, %f1007;
	add.f32 	%f1009, %f1005, %f1008;
	add.f32 	%f1010, %f1006, %f1009;
	sub.f32 	%f1011, %f1006, %f1010;
	add.f32 	%f1012, %f1009, %f1011;
	mul.rn.f32 	%f1014, %f989, %f857;
	mul.rn.f32 	%f1016, %f989, %f859;
	add.f32 	%f1017, %f1014, %f1010;
	sub.f32 	%f1018, %f1014, %f1017;
	add.f32 	%f1019, %f1010, %f1018;
	add.f32 	%f1020, %f1012, %f1019;
	add.f32 	%f1021, %f1016, %f1020;
	add.f32 	%f1022, %f1017, %f1021;
	sub.f32 	%f1023, %f1017, %f1022;
	add.f32 	%f1024, %f1021, %f1023;
	mul.rn.f32 	%f1026, %f869, %f1022;
	neg.f32 	%f1027, %f1026;
	fma.rn.f32 	%f1028, %f869, %f1022, %f1027;
	fma.rn.f32 	%f1029, %f869, %f1024, %f1028;
	fma.rn.f32 	%f1031, %f874, %f1022, %f1029;
	add.rn.f32 	%f1032, %f1026, %f1031;
	neg.f32 	%f1033, %f1032;
	add.rn.f32 	%f1034, %f1026, %f1033;
	add.rn.f32 	%f1035, %f1034, %f1031;
	mov.b32 	 %r349, %f1032;
	setp.eq.s32	%p127, %r349, 1118925336;
	add.s32 	%r350, %r349, -1;
	mov.b32 	 %f1036, %r350;
	add.f32 	%f1037, %f1035, 0f37000000;
	selp.f32	%f1038, %f1036, %f1032, %p127;
	selp.f32	%f255, %f1037, %f1035, %p127;
	mul.f32 	%f1039, %f1038, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1040, %f1039;
	fma.rn.f32 	%f1042, %f1040, %f885, %f1038;
	fma.rn.f32 	%f1044, %f1040, %f887, %f1042;
	mul.f32 	%f1045, %f1044, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1046, %f1045;
	add.f32 	%f1047, %f1040, 0f00000000;
	ex2.approx.f32 	%f1048, %f1047;
	mul.f32 	%f1049, %f1046, %f1048;
	setp.lt.f32	%p128, %f1038, 0fC2D20000;
	selp.f32	%f1050, 0f00000000, %f1049, %p128;
	setp.gt.f32	%p129, %f1038, 0f42D20000;
	selp.f32	%f1205, 0f7F800000, %f1050, %p129;
	setp.eq.f32	%p130, %f1205, 0f7F800000;
	@%p130 bra 	BB0_114;

	fma.rn.f32 	%f1205, %f1205, %f255, %f1205;

BB0_114:
	setp.lt.f32	%p131, %f210, 0f00000000;
	and.pred  	%p4, %p131, %p100;
	mov.b32 	 %r351, %f1205;
	xor.b32  	%r352, %r351, -2147483648;
	mov.b32 	 %f1051, %r352;
	selp.f32	%f1207, %f1051, %f1205, %p4;
	setp.eq.f32	%p133, %f210, 0f00000000;
	@%p133 bra 	BB0_117;
	bra.uni 	BB0_115;

BB0_117:
	add.f32 	%f1054, %f210, %f210;
	selp.f32	%f1207, %f1054, 0f00000000, %p100;
	bra.uni 	BB0_118;

BB0_115:
	setp.geu.f32	%p134, %f210, 0f00000000;
	@%p134 bra 	BB0_118;

	cvt.rzi.f32.f32	%f1053, %f869;
	setp.neu.f32	%p135, %f1053, 0f3EE66666;
	selp.f32	%f1207, 0f7FFFFFFF, %f1207, %p135;

BB0_118:
	add.f32 	%f1055, %f254, 0f3EE66666;
	mov.b32 	 %r353, %f1055;
	setp.lt.s32	%p137, %r353, 2139095040;
	@%p137 bra 	BB0_123;

	setp.gtu.f32	%p138, %f254, 0f7F800000;
	@%p138 bra 	BB0_122;
	bra.uni 	BB0_120;

BB0_122:
	add.f32 	%f1207, %f210, 0f3EE66666;
	bra.uni 	BB0_123;

BB0_120:
	setp.neu.f32	%p139, %f254, 0f7F800000;
	@%p139 bra 	BB0_123;

	selp.f32	%f1207, 0fFF800000, 0f7F800000, %p4;

BB0_123:
	setp.eq.f32	%p140, %f210, 0f3F800000;
	selp.f32	%f1056, 0f3F800000, %f1207, %p140;
	cvt.u64.u32	%rd103, %r3;
	cvt.u64.u32	%rd102, %r2;
	mov.u64 	%rd106, image;
	cvta.global.u64 	%rd101, %rd106;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r99, %r100, %rd102, %rd103, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f1057, %f1056;
	mul.f32 	%f1058, %f1057, 0f437FFD71;
	cvt.rzi.u32.f32	%r356, %f1058;
	cvt.sat.f32.f32	%f1059, %f253;
	mul.f32 	%f1060, %f1059, 0f437FFD71;
	cvt.rzi.u32.f32	%r357, %f1060;
	cvt.sat.f32.f32	%f1061, %f240;
	mul.f32 	%f1062, %f1061, 0f437FFD71;
	cvt.rzi.u32.f32	%r358, %f1062;
	cvt.u16.u32	%rs33, %r356;
	cvt.u16.u32	%rs34, %r358;
	cvt.u16.u32	%rs35, %r357;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd100], {%rs33, %rs35, %rs34, %rs36};
	ld.global.u32 	%r478, [imageEnabled];

BB0_124:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r359, %r478, 4;
	setp.eq.s32	%p141, %r359, 0;
	@%p141 bra 	BB0_128;

	ld.global.u32 	%r360, [additive];
	setp.eq.s32	%p142, %r360, 0;
	mov.f32 	%f1063, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f1063;}

	// inline asm
	@%p142 bra 	BB0_127;

	mov.u64 	%rd119, image_HDR;
	cvta.global.u64 	%rd108, %rd119;
	mov.u32 	%r364, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r99, %r364, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs44, %rs45, %rs46, %rs47}, [%rd107];
	// inline asm
	{  cvt.f32.f16 %f1064, %rs44;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1065, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1066, %rs46;}

	// inline asm
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd108, %r99, %r364, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1067, %f208, %f1064;
	add.f32 	%f1068, %f209, %f1065;
	add.f32 	%f1069, %f210, %f1066;
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f1069;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f1068;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1067;}

	// inline asm
	st.v4.u16 	[%rd113], {%rs41, %rs42, %rs43, %rs37};
	bra.uni 	BB0_128;

BB0_127:
	mov.u64 	%rd126, image_HDR;
	cvta.global.u64 	%rd121, %rd126;
	mov.u32 	%r366, 8;
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd121, %r99, %r366, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f210;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f209;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f208;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs48, %rs49, %rs50, %rs37};

BB0_128:
	ld.global.u32 	%r367, [additive];
	setp.eq.s32	%p143, %r367, 0;
	mov.f32 	%f1073, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1073;}

	// inline asm
	@%p143 bra 	BB0_130;

	mov.u64 	%rd139, image_RNM0;
	cvta.global.u64 	%rd128, %rd139;
	mov.u32 	%r371, 8;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r99, %r371, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs58, %rs59, %rs60, %rs61}, [%rd127];
	// inline asm
	{  cvt.f32.f16 %f1074, %rs58;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1075, %rs59;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1076, %rs60;}

	// inline asm
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd128, %r99, %r371, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1077, %f211, %f1074;
	add.f32 	%f1078, %f212, %f1075;
	add.f32 	%f1079, %f213, %f1076;
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f1079;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f1078;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f1077;}

	// inline asm
	st.v4.u16 	[%rd133], {%rs55, %rs56, %rs57, %rs51};
	bra.uni 	BB0_131;

BB0_130:
	mov.u64 	%rd146, image_RNM0;
	cvta.global.u64 	%rd141, %rd146;
	mov.u32 	%r373, 8;
	// inline asm
	call (%rd140), _rt_buffer_get_64, (%rd141, %r99, %r373, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f213;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f212;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f211;}

	// inline asm
	st.v4.u16 	[%rd140], {%rs62, %rs63, %rs64, %rs51};

BB0_131:
	ld.global.f32 	%f1084, [directDir];
	fma.rn.f32 	%f266, %f1084, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1085, [directDir+4];
	fma.rn.f32 	%f267, %f1085, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1086, [directDir+8];
	fma.rn.f32 	%f268, %f1086, 0fBF000000, 0f3F000000;
	ld.global.u32 	%r374, [additive];
	setp.eq.s32	%p144, %r374, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1073;}

	// inline asm
	@%p144 bra 	BB0_133;

	mov.u64 	%rd159, image_RNM1;
	cvta.global.u64 	%rd148, %rd159;
	mov.u32 	%r378, 8;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r99, %r378, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs72, %rs73, %rs74, %rs75}, [%rd147];
	// inline asm
	{  cvt.f32.f16 %f1087, %rs72;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1088, %rs73;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1089, %rs74;}

	// inline asm
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd148, %r99, %r378, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1090, %f266, %f1087;
	add.f32 	%f1091, %f266, %f1088;
	add.f32 	%f1092, %f266, %f1089;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f1092;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f1091;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1090;}

	// inline asm
	st.v4.u16 	[%rd153], {%rs69, %rs70, %rs71, %rs65};
	bra.uni 	BB0_134;

BB0_133:
	mov.u64 	%rd166, image_RNM1;
	cvta.global.u64 	%rd161, %rd166;
	mov.u32 	%r380, 8;
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd161, %r99, %r380, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f266;}

	// inline asm
	st.v4.u16 	[%rd160], {%rs76, %rs76, %rs76, %rs65};

BB0_134:
	ld.global.u32 	%r381, [additive];
	setp.eq.s32	%p145, %r381, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f1073;}

	// inline asm
	@%p145 bra 	BB0_136;

	mov.u64 	%rd179, image_RNM2;
	cvta.global.u64 	%rd168, %rd179;
	mov.u32 	%r385, 8;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r99, %r385, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs84, %rs85, %rs86, %rs87}, [%rd167];
	// inline asm
	{  cvt.f32.f16 %f1095, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1096, %rs85;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1097, %rs86;}

	// inline asm
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd168, %r99, %r385, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1098, %f267, %f1095;
	add.f32 	%f1099, %f267, %f1096;
	add.f32 	%f1100, %f267, %f1097;
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1100;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1099;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1098;}

	// inline asm
	st.v4.u16 	[%rd173], {%rs81, %rs82, %rs83, %rs77};
	bra.uni 	BB0_137;

BB0_136:
	mov.u64 	%rd186, image_RNM2;
	cvta.global.u64 	%rd181, %rd186;
	mov.u32 	%r387, 8;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r99, %r387, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f267;}

	// inline asm
	st.v4.u16 	[%rd180], {%rs88, %rs88, %rs88, %rs77};

BB0_137:
	ld.global.u32 	%r388, [additive];
	setp.eq.s32	%p146, %r388, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f1073;}

	// inline asm
	@%p146 bra 	BB0_139;

	mov.u64 	%rd199, image_RNM3;
	cvta.global.u64 	%rd188, %rd199;
	mov.u32 	%r392, 8;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r99, %r392, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs96, %rs97, %rs98, %rs99}, [%rd187];
	// inline asm
	{  cvt.f32.f16 %f1103, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1104, %rs97;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1105, %rs98;}

	// inline asm
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd188, %r99, %r392, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1106, %f268, %f1103;
	add.f32 	%f1107, %f268, %f1104;
	add.f32 	%f1108, %f268, %f1105;
	// inline asm
	{  cvt.rn.f16.f32 %rs95, %f1108;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1107;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1106;}

	// inline asm
	st.v4.u16 	[%rd193], {%rs93, %rs94, %rs95, %rs89};
	bra.uni 	BB0_160;

BB0_139:
	mov.u64 	%rd206, image_RNM3;
	cvta.global.u64 	%rd201, %rd206;
	mov.u32 	%r394, 8;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r99, %r394, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f268;}

	// inline asm
	st.v4.u16 	[%rd200], {%rs100, %rs100, %rs100, %rs89};

BB0_160:
	ret;
}


