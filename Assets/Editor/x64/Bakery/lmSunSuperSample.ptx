//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<161>;
	.reg .b16 	%rs<101>;
	.reg .f32 	%f<1155>;
	.reg .b32 	%r<464>;
	.reg .b64 	%rd<226>;


	mov.u64 	%rd225, __local_depot0;
	cvta.local.u64 	%SP, %rd225;
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	cvt.u64.u32	%rd26, %r106;
	cvt.u64.u32	%rd27, %r107;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r104, 2;
	mov.u32 	%r105, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r104, %r105, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r1, [%rd24];
	shr.u32 	%r110, %r1, 16;
	cvt.u16.u32	%rs1, %r110;
	and.b16  	%rs12, %rs1, 255;
	cvt.u16.u32	%rs13, %r1;
	or.b16  	%rs14, %rs13, %rs12;
	setp.eq.s16	%p5, %rs14, 0;
	mov.f32 	%f1101, 0f00000000;
	mov.f32 	%f1102, %f1101;
	mov.f32 	%f1103, %f1101;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs15, [%rd24+1];
	and.b16  	%rs17, %rs13, 255;
	cvt.rn.f32.u16	%f266, %rs17;
	div.rn.f32 	%f267, %f266, 0f437F0000;
	fma.rn.f32 	%f268, %f267, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f269, %rs15;
	div.rn.f32 	%f270, %f269, 0f437F0000;
	fma.rn.f32 	%f271, %f270, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f272, %rs12;
	div.rn.f32 	%f273, %f272, 0f437F0000;
	fma.rn.f32 	%f274, %f273, 0f40000000, 0fBF800000;
	mul.f32 	%f275, %f271, %f271;
	fma.rn.f32 	%f276, %f268, %f268, %f275;
	fma.rn.f32 	%f277, %f274, %f274, %f276;
	sqrt.rn.f32 	%f278, %f277;
	rcp.rn.f32 	%f279, %f278;
	mul.f32 	%f1101, %f268, %f279;
	mul.f32 	%f1102, %f271, %f279;
	mul.f32 	%f1103, %f274, %f279;

BB0_2:
	ld.global.v2.u32 	{%r111, %r112}, [pixelID];
	ld.global.v2.u32 	{%r114, %r115}, [tileInfo];
	add.s32 	%r2, %r111, %r114;
	add.s32 	%r3, %r112, %r115;
	setp.eq.f32	%p6, %f1102, 0f00000000;
	setp.eq.f32	%p7, %f1101, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1103, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_141;
	bra.uni 	BB0_3;

BB0_141:
	ld.global.u32 	%r463, [imageEnabled];
	and.b32  	%r397, %r463, 1;
	setp.eq.b32	%p155, %r397, 1;
	@!%p155 bra 	BB0_143;
	bra.uni 	BB0_142;

BB0_142:
	cvt.u64.u32	%rd179, %r2;
	cvt.u64.u32	%rd180, %r3;
	mov.u64 	%rd183, image;
	cvta.global.u64 	%rd178, %rd183;
	mov.u64 	%rd182, 0;
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd178, %r104, %r105, %rd179, %rd180, %rd182, %rd182);
	// inline asm
	mov.u16 	%rs74, 0;
	st.v4.u8 	[%rd177], {%rs74, %rs74, %rs74, %rs74};
	ld.global.u32 	%r463, [imageEnabled];

BB0_143:
	and.b32  	%r400, %r463, 8;
	setp.eq.s32	%p156, %r400, 0;
	@%p156 bra 	BB0_145;

	cvt.u64.u32	%rd186, %r2;
	cvt.u64.u32	%rd187, %r3;
	mov.u64 	%rd190, image_Mask;
	cvta.global.u64 	%rd185, %rd190;
	mov.u64 	%rd189, 0;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r104, %r104, %rd186, %rd187, %rd189, %rd189);
	// inline asm
	mov.f32 	%f1087, 0f00000000;
	cvt.rzi.u32.f32	%r403, %f1087;
	cvt.u16.u32	%rs75, %r403;
	mov.u16 	%rs76, 0;
	st.v2.u8 	[%rd184], {%rs75, %rs76};
	ld.global.u32 	%r463, [imageEnabled];

BB0_145:
	and.b32  	%r404, %r463, 4;
	setp.eq.s32	%p157, %r404, 0;
	@%p157 bra 	BB0_149;

	ld.global.u32 	%r405, [additive];
	setp.eq.s32	%p158, %r405, 0;
	cvt.u64.u32	%rd22, %r2;
	cvt.u64.u32	%rd23, %r3;
	@%p158 bra 	BB0_148;

	mov.u64 	%rd203, image_HDR;
	cvta.global.u64 	%rd192, %rd203;
	mov.u32 	%r409, 8;
	mov.u64 	%rd202, 0;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r104, %r409, %rd22, %rd23, %rd202, %rd202);
	// inline asm
	ld.v4.u16 	{%rs83, %rs84, %rs85, %rs86}, [%rd191];
	// inline asm
	{  cvt.f32.f16 %f1088, %rs83;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1089, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1090, %rs85;}

	// inline asm
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd192, %r104, %r409, %rd22, %rd23, %rd202, %rd202);
	// inline asm
	add.f32 	%f1091, %f1088, 0f00000000;
	add.f32 	%f1092, %f1089, 0f00000000;
	add.f32 	%f1093, %f1090, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1093;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1092;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1091;}

	// inline asm
	mov.u16 	%rs87, 0;
	st.v4.u16 	[%rd197], {%rs80, %rs81, %rs82, %rs87};
	bra.uni 	BB0_149;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f280, %f1101, %f7;
	mul.f32 	%f281, %f1102, %f8;
	neg.f32 	%f282, %f281;
	sub.f32 	%f283, %f282, %f280;
	mul.f32 	%f284, %f1103, %f9;
	sub.f32 	%f10, %f283, %f284;
	ld.global.u32 	%r119, [ignoreNormal];
	setp.eq.s32	%p11, %r119, 0;
	setp.le.f32	%p12, %f10, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	ld.global.u32 	%r461, [imageEnabled];
	and.b32  	%r120, %r461, 32;
	setp.eq.s32	%p14, %r120, 0;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	BB0_131;
	bra.uni 	BB0_4;

BB0_131:
	and.b32  	%r380, %r461, 1;
	setp.eq.b32	%p150, %r380, 1;
	@!%p150 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd138, %r2;
	cvt.u64.u32	%rd139, %r3;
	mov.u64 	%rd142, image;
	cvta.global.u64 	%rd137, %rd142;
	mov.u64 	%rd141, 0;
	// inline asm
	call (%rd136), _rt_buffer_get_64, (%rd137, %r104, %r105, %rd138, %rd139, %rd141, %rd141);
	// inline asm
	mov.u16 	%rs54, 255;
	mov.u16 	%rs55, 0;
	st.v4.u8 	[%rd136], {%rs55, %rs55, %rs55, %rs54};
	ld.global.u32 	%r461, [imageEnabled];

BB0_133:
	and.b32  	%r383, %r461, 8;
	setp.eq.s32	%p151, %r383, 0;
	@%p151 bra 	BB0_135;

	cvt.u64.u32	%rd145, %r2;
	cvt.u64.u32	%rd146, %r3;
	mov.u64 	%rd149, image_Mask;
	cvta.global.u64 	%rd144, %rd149;
	mov.u64 	%rd148, 0;
	// inline asm
	call (%rd143), _rt_buffer_get_64, (%rd144, %r104, %r104, %rd145, %rd146, %rd148, %rd148);
	// inline asm
	mov.f32 	%f1076, 0f00000000;
	cvt.rzi.u32.f32	%r386, %f1076;
	cvt.u16.u32	%rs56, %r386;
	mov.u16 	%rs57, 255;
	st.v2.u8 	[%rd143], {%rs56, %rs57};
	ld.global.u32 	%r461, [imageEnabled];

BB0_135:
	and.b32  	%r387, %r461, 4;
	setp.eq.s32	%p152, %r387, 0;
	@%p152 bra 	BB0_139;

	ld.global.u32 	%r388, [additive];
	setp.eq.s32	%p153, %r388, 0;
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	mov.f32 	%f1077, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f1077;}

	// inline asm
	@%p153 bra 	BB0_138;

	mov.u64 	%rd162, image_HDR;
	cvta.global.u64 	%rd151, %rd162;
	mov.u32 	%r392, 8;
	mov.u64 	%rd161, 0;
	// inline asm
	call (%rd150), _rt_buffer_get_64, (%rd151, %r104, %r392, %rd20, %rd21, %rd161, %rd161);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd150];
	// inline asm
	{  cvt.f32.f16 %f1078, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1079, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1080, %rs67;}

	// inline asm
	// inline asm
	call (%rd156), _rt_buffer_get_64, (%rd151, %r104, %r392, %rd20, %rd21, %rd161, %rd161);
	// inline asm
	add.f32 	%f1081, %f1078, 0f00000000;
	add.f32 	%f1082, %f1079, 0f00000000;
	add.f32 	%f1083, %f1080, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1083;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f1082;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f1081;}

	// inline asm
	st.v4.u16 	[%rd156], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_139;

BB0_4:
	ld.global.v2.u32 	{%r129, %r130}, [pixelID];
	cvt.u64.u32	%rd33, %r129;
	cvt.u64.u32	%rd34, %r130;
	mov.u64 	%rd55, uvpos;
	cvta.global.u64 	%rd32, %rd55;
	mov.u32 	%r126, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f287, [%rd31+8];
	ld.f32 	%f288, [%rd31+4];
	ld.f32 	%f289, [%rd31];
	mul.f32 	%f290, %f289, 0f3456BF95;
	mul.f32 	%f291, %f288, 0f3456BF95;
	mul.f32 	%f292, %f287, 0f3456BF95;
	abs.f32 	%f293, %f1101;
	div.rn.f32 	%f294, %f290, %f293;
	abs.f32 	%f295, %f1102;
	div.rn.f32 	%f296, %f291, %f295;
	abs.f32 	%f297, %f1103;
	div.rn.f32 	%f298, %f292, %f297;
	abs.f32 	%f299, %f294;
	abs.f32 	%f300, %f296;
	abs.f32 	%f301, %f298;
	mov.f32 	%f302, 0f38D1B717;
	max.f32 	%f303, %f299, %f302;
	max.f32 	%f304, %f300, %f302;
	max.f32 	%f305, %f301, %f302;
	fma.rn.f32 	%f11, %f1101, %f303, %f289;
	fma.rn.f32 	%f12, %f1102, %f304, %f288;
	fma.rn.f32 	%f13, %f1103, %f305, %f287;
	setp.gt.f32	%p16, %f293, %f297;
	neg.f32 	%f306, %f1102;
	selp.f32	%f307, %f306, 0f00000000, %p16;
	neg.f32 	%f308, %f1103;
	selp.f32	%f309, %f1101, %f308, %p16;
	selp.f32	%f310, 0f00000000, %f1102, %p16;
	mul.f32 	%f311, %f309, %f309;
	fma.rn.f32 	%f312, %f307, %f307, %f311;
	fma.rn.f32 	%f313, %f310, %f310, %f312;
	sqrt.rn.f32 	%f314, %f313;
	rcp.rn.f32 	%f315, %f314;
	mul.f32 	%f14, %f307, %f315;
	mul.f32 	%f15, %f309, %f315;
	mul.f32 	%f16, %f310, %f315;
	mul.f32 	%f316, %f1103, %f15;
	mul.f32 	%f317, %f1102, %f16;
	sub.f32 	%f17, %f316, %f317;
	mul.f32 	%f318, %f1101, %f16;
	mul.f32 	%f319, %f1103, %f14;
	sub.f32 	%f18, %f318, %f319;
	mul.f32 	%f320, %f1102, %f14;
	mul.f32 	%f321, %f1101, %f15;
	sub.f32 	%f19, %f320, %f321;
	ld.global.v2.u32 	{%r133, %r134}, [pixelID];
	cvt.u64.u32	%rd40, %r134;
	add.s32 	%r137, %r133, 1;
	ld.global.u32 	%r138, [resolution];
	add.s32 	%r139, %r138, -1;
	min.u32 	%r140, %r137, %r139;
	cvt.u64.u32	%rd39, %r140;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.f32 	%f322, [%rd37+8];
	ld.f32 	%f323, [%rd37+4];
	ld.f32 	%f324, [%rd37];
	setp.eq.f32	%p17, %f324, 0f00000000;
	setp.eq.f32	%p18, %f323, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f322, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f325, %f289, %f324, %p21;
	selp.f32	%f326, %f288, %f323, %p21;
	selp.f32	%f327, %f287, %f322, %p21;
	ld.global.v2.u32 	{%r141, %r142}, [pixelID];
	add.s32 	%r145, %r142, 1;
	ld.global.u32 	%r146, [resolution+4];
	add.s32 	%r147, %r146, -1;
	min.u32 	%r148, %r145, %r147;
	cvt.u64.u32	%rd45, %r141;
	cvt.u64.u32	%rd46, %r148;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd45, %rd46, %rd29, %rd29);
	// inline asm
	ld.f32 	%f328, [%rd43+8];
	ld.f32 	%f329, [%rd43+4];
	ld.f32 	%f330, [%rd43];
	setp.eq.f32	%p22, %f330, 0f00000000;
	setp.eq.f32	%p23, %f329, 0f00000000;
	and.pred  	%p24, %p22, %p23;
	setp.eq.f32	%p25, %f328, 0f00000000;
	and.pred  	%p26, %p24, %p25;
	selp.f32	%f331, %f289, %f330, %p26;
	selp.f32	%f332, %f288, %f329, %p26;
	selp.f32	%f333, %f287, %f328, %p26;
	sub.f32 	%f334, %f325, %f289;
	sub.f32 	%f335, %f326, %f288;
	sub.f32 	%f336, %f327, %f287;
	sub.f32 	%f337, %f331, %f289;
	sub.f32 	%f338, %f332, %f288;
	sub.f32 	%f339, %f333, %f287;
	abs.f32 	%f340, %f334;
	abs.f32 	%f341, %f337;
	max.f32 	%f342, %f340, %f341;
	abs.f32 	%f343, %f335;
	abs.f32 	%f344, %f338;
	max.f32 	%f345, %f343, %f344;
	abs.f32 	%f346, %f336;
	abs.f32 	%f347, %f339;
	max.f32 	%f348, %f346, %f347;
	max.f32 	%f349, %f342, %f345;
	max.f32 	%f350, %f349, %f348;
	setp.neu.f32	%p27, %f334, 0f00000000;
	setp.neu.f32	%p28, %f335, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f336, 0f00000000;
	setp.neu.f32	%p31, %f337, 0f00000000;
	setp.neu.f32	%p32, %f338, 0f00000000;
	or.pred  	%p33, %p31, %p32;
	setp.neu.f32	%p34, %f339, 0f00000000;
	or.pred  	%p35, %p33, %p34;
	or.pred  	%p36, %p29, %p30;
	and.pred  	%p37, %p36, %p35;
	selp.f32	%f20, %f350, 0f00000000, %p37;
	abs.f32 	%f351, %f9;
	abs.f32 	%f352, %f7;
	setp.gt.f32	%p38, %f352, %f351;
	neg.f32 	%f353, %f8;
	selp.f32	%f354, %f353, 0f00000000, %p38;
	neg.f32 	%f355, %f9;
	selp.f32	%f356, %f7, %f355, %p38;
	selp.f32	%f357, 0f00000000, %f8, %p38;
	mul.f32 	%f358, %f356, %f356;
	fma.rn.f32 	%f359, %f354, %f354, %f358;
	fma.rn.f32 	%f360, %f357, %f357, %f359;
	sqrt.rn.f32 	%f361, %f360;
	rcp.rn.f32 	%f362, %f361;
	mul.f32 	%f21, %f354, %f362;
	mul.f32 	%f22, %f356, %f362;
	mul.f32 	%f23, %f357, %f362;
	ld.global.v2.u32 	{%r149, %r150}, [pixelID];
	cvt.u64.u32	%rd51, %r149;
	cvt.u64.u32	%rd52, %r150;
	mov.u64 	%rd56, rnd_seeds;
	cvta.global.u64 	%rd50, %rd56;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r104, %r105, %rd51, %rd52, %rd29, %rd29);
	// inline asm
	ld.global.u32 	%r430, [samples];
	mov.f32 	%f1106, 0f00000000;
	setp.lt.s32	%p39, %r430, 1;
	@%p39 bra 	BB0_5;

	cvt.rn.f32.s32	%f365, %r430;
	rcp.rn.f32 	%f24, %f365;
	ld.u32 	%r456, [%rd49];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f366, %f17, 0f3E24A490;
	mul.f32 	%f367, %f18, 0f3E24A490;
	mul.f32 	%f368, %f19, 0f3E24A490;
	fma.rn.f32 	%f369, %f20, %f366, %f11;
	fma.rn.f32 	%f370, %f20, %f367, %f12;
	fma.rn.f32 	%f371, %f20, %f368, %f13;
	mul.f32 	%f372, %f14, 0fBECECEDE;
	mul.f32 	%f373, %f15, 0fBECECEDE;
	mul.f32 	%f374, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f372, %f369;
	fma.rn.f32 	%f29, %f20, %f373, %f370;
	fma.rn.f32 	%f30, %f20, %f374, %f371;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f375, %f32, %f32;
	fma.rn.f32 	%f376, %f31, %f31, %f375;
	fma.rn.f32 	%f34, %f33, %f33, %f376;
	mul.f32 	%f377, %f17, 0fBE24A490;
	mul.f32 	%f378, %f18, 0fBE24A490;
	mul.f32 	%f379, %f19, 0fBE24A490;
	fma.rn.f32 	%f380, %f20, %f377, %f11;
	fma.rn.f32 	%f381, %f20, %f378, %f12;
	fma.rn.f32 	%f382, %f20, %f379, %f13;
	mul.f32 	%f383, %f14, 0f3ECACABC;
	mul.f32 	%f384, %f15, 0f3ECACABC;
	mul.f32 	%f385, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f383, %f380;
	fma.rn.f32 	%f36, %f20, %f384, %f381;
	fma.rn.f32 	%f37, %f20, %f385, %f382;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f386, %f39, %f39;
	fma.rn.f32 	%f387, %f38, %f38, %f386;
	fma.rn.f32 	%f41, %f40, %f40, %f387;
	mul.f32 	%f388, %f17, 0f3F23A3A8;
	mul.f32 	%f389, %f18, 0f3F23A3A8;
	mul.f32 	%f390, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f391, %f20, %f388, %f11;
	fma.rn.f32 	%f392, %f20, %f389, %f12;
	fma.rn.f32 	%f393, %f20, %f390, %f13;
	mul.f32 	%f394, %f14, 0f3E24A490;
	mul.f32 	%f395, %f15, 0f3E24A490;
	mul.f32 	%f396, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f394, %f391;
	fma.rn.f32 	%f43, %f20, %f395, %f392;
	fma.rn.f32 	%f44, %f20, %f396, %f393;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f397, %f46, %f46;
	fma.rn.f32 	%f398, %f45, %f45, %f397;
	fma.rn.f32 	%f48, %f47, %f47, %f398;
	mul.f32 	%f399, %f17, 0fBECECEDE;
	mul.f32 	%f400, %f18, 0fBECECEDE;
	mul.f32 	%f401, %f19, 0fBECECEDE;
	fma.rn.f32 	%f402, %f20, %f399, %f11;
	fma.rn.f32 	%f403, %f20, %f400, %f12;
	fma.rn.f32 	%f404, %f20, %f401, %f13;
	mul.f32 	%f405, %f14, 0fBF23A3A9;
	mul.f32 	%f406, %f15, 0fBF23A3A9;
	mul.f32 	%f407, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f405, %f402;
	fma.rn.f32 	%f50, %f20, %f406, %f403;
	fma.rn.f32 	%f51, %f20, %f407, %f404;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f408, %f53, %f53;
	fma.rn.f32 	%f409, %f52, %f52, %f408;
	fma.rn.f32 	%f55, %f54, %f54, %f409;
	mul.f32 	%f410, %f17, 0fBF23A3A9;
	mul.f32 	%f411, %f18, 0fBF23A3A9;
	mul.f32 	%f412, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f413, %f20, %f410, %f11;
	fma.rn.f32 	%f414, %f20, %f411, %f12;
	fma.rn.f32 	%f415, %f20, %f412, %f13;
	mul.f32 	%f416, %f14, 0f3F23A3A8;
	mul.f32 	%f417, %f15, 0f3F23A3A8;
	mul.f32 	%f418, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f416, %f413;
	fma.rn.f32 	%f57, %f20, %f417, %f414;
	fma.rn.f32 	%f58, %f20, %f418, %f415;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f419, %f60, %f60;
	fma.rn.f32 	%f420, %f59, %f59, %f419;
	fma.rn.f32 	%f62, %f61, %f61, %f420;
	mul.f32 	%f421, %f17, 0fBF61E1E3;
	mul.f32 	%f422, %f18, 0fBF61E1E3;
	mul.f32 	%f423, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f424, %f20, %f421, %f11;
	fma.rn.f32 	%f425, %f20, %f422, %f12;
	fma.rn.f32 	%f426, %f20, %f423, %f13;
	mul.f32 	%f427, %f14, 0fBE24A490;
	mul.f32 	%f428, %f15, 0fBE24A490;
	mul.f32 	%f429, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f427, %f424;
	fma.rn.f32 	%f64, %f20, %f428, %f425;
	fma.rn.f32 	%f65, %f20, %f429, %f426;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f430, %f67, %f67;
	fma.rn.f32 	%f431, %f66, %f66, %f430;
	fma.rn.f32 	%f69, %f68, %f68, %f431;
	mul.f32 	%f432, %f17, 0f3ECACABC;
	mul.f32 	%f433, %f18, 0f3ECACABC;
	mul.f32 	%f434, %f19, 0f3ECACABC;
	fma.rn.f32 	%f435, %f20, %f432, %f11;
	fma.rn.f32 	%f436, %f20, %f433, %f12;
	fma.rn.f32 	%f437, %f20, %f434, %f13;
	mul.f32 	%f438, %f14, 0f3F61E1D2;
	mul.f32 	%f439, %f15, 0f3F61E1D2;
	mul.f32 	%f440, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f438, %f435;
	fma.rn.f32 	%f71, %f20, %f439, %f436;
	fma.rn.f32 	%f72, %f20, %f440, %f437;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f441, %f74, %f74;
	fma.rn.f32 	%f442, %f73, %f73, %f441;
	fma.rn.f32 	%f76, %f75, %f75, %f442;
	mul.f32 	%f443, %f17, 0f3F61E1D2;
	mul.f32 	%f444, %f18, 0f3F61E1D2;
	mul.f32 	%f445, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f446, %f20, %f443, %f11;
	fma.rn.f32 	%f447, %f20, %f444, %f12;
	fma.rn.f32 	%f448, %f20, %f445, %f13;
	mul.f32 	%f449, %f14, 0fBF61E1E3;
	mul.f32 	%f450, %f15, 0fBF61E1E3;
	mul.f32 	%f451, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f449, %f446;
	fma.rn.f32 	%f78, %f20, %f450, %f447;
	fma.rn.f32 	%f79, %f20, %f451, %f448;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f452, %f81, %f81;
	fma.rn.f32 	%f453, %f80, %f80, %f452;
	fma.rn.f32 	%f83, %f82, %f82, %f453;
	mul.f32 	%f454, %f7, %f22;
	mul.f32 	%f455, %f8, %f21;
	sub.f32 	%f84, %f455, %f454;
	mul.f32 	%f456, %f9, %f21;
	mul.f32 	%f457, %f7, %f23;
	sub.f32 	%f85, %f457, %f456;
	mul.f32 	%f458, %f8, %f23;
	mul.f32 	%f459, %f9, %f22;
	sub.f32 	%f86, %f459, %f458;
	mov.f32 	%f1106, 0f00000000;
	mov.u32 	%r431, 0;
	abs.f32 	%f460, %f26;
	abs.f32 	%f461, %f25;
	max.f32 	%f462, %f461, %f460;
	abs.f32 	%f463, %f27;
	max.f32 	%f464, %f462, %f463;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1107, %f1106;

BB0_7:
	setp.lt.s32	%p40, %r430, 1;
	@%p40 bra 	BB0_74;

	rcp.rn.f32 	%f466, %f91;
	mul.f32 	%f92, %f466, %f31;
	mul.f32 	%f93, %f466, %f32;
	mul.f32 	%f94, %f466, %f33;
	rcp.rn.f32 	%f467, %f95;
	mul.f32 	%f96, %f467, %f38;
	mul.f32 	%f97, %f467, %f39;
	mul.f32 	%f98, %f467, %f40;
	rcp.rn.f32 	%f468, %f99;
	mul.f32 	%f100, %f468, %f45;
	mul.f32 	%f101, %f468, %f46;
	mul.f32 	%f102, %f468, %f47;
	rcp.rn.f32 	%f469, %f103;
	mul.f32 	%f104, %f469, %f52;
	mul.f32 	%f105, %f469, %f53;
	mul.f32 	%f106, %f469, %f54;
	rcp.rn.f32 	%f470, %f107;
	mul.f32 	%f108, %f470, %f59;
	mul.f32 	%f109, %f470, %f60;
	mul.f32 	%f110, %f470, %f61;
	rcp.rn.f32 	%f471, %f111;
	mul.f32 	%f112, %f471, %f66;
	mul.f32 	%f113, %f471, %f67;
	mul.f32 	%f114, %f471, %f68;
	rcp.rn.f32 	%f472, %f115;
	mul.f32 	%f116, %f472, %f73;
	mul.f32 	%f117, %f472, %f74;
	mul.f32 	%f118, %f472, %f75;
	rcp.rn.f32 	%f473, %f119;
	mul.f32 	%f120, %f473, %f80;
	mul.f32 	%f121, %f473, %f81;
	mul.f32 	%f122, %f473, %f82;
	mov.u32 	%r433, 0;

BB0_9:
	cvt.rn.f32.s32	%f1095, %r431;
	mad.lo.s32 	%r155, %r456, 1664525, 1013904223;
	and.b32  	%r156, %r155, 16777215;
	cvt.rn.f32.u32	%f474, %r156;
	fma.rn.f32 	%f475, %f474, 0f33800000, %f1095;
	mul.f32 	%f476, %f24, %f475;
	mad.lo.s32 	%r12, %r155, 1664525, 1013904223;
	and.b32  	%r157, %r12, 16777215;
	cvt.rn.f32.u32	%f477, %r157;
	cvt.rn.f32.s32	%f478, %r433;
	fma.rn.f32 	%f479, %f477, 0f33800000, %f478;
	mul.f32 	%f480, %f24, %f479;
	sqrt.rn.f32 	%f125, %f476;
	mul.f32 	%f1114, %f480, 0f40C90FDB;
	abs.f32 	%f127, %f1114;
	setp.neu.f32	%p41, %f127, 0f7F800000;
	mov.f32 	%f1108, %f1114;
	@%p41 bra 	BB0_11;

	mov.f32 	%f481, 0f00000000;
	mul.rn.f32 	%f1108, %f1114, %f481;

BB0_11:
	mul.f32 	%f482, %f1108, 0f3F22F983;
	cvt.rni.s32.f32	%r444, %f482;
	cvt.rn.f32.s32	%f483, %r444;
	neg.f32 	%f484, %f483;
	mov.f32 	%f485, 0f3FC90FDA;
	fma.rn.f32 	%f486, %f484, %f485, %f1108;
	mov.f32 	%f487, 0f33A22168;
	fma.rn.f32 	%f488, %f484, %f487, %f486;
	mov.f32 	%f489, 0f27C234C5;
	fma.rn.f32 	%f1109, %f484, %f489, %f488;
	abs.f32 	%f490, %f1108;
	setp.leu.f32	%p42, %f490, 0f47CE4780;
	@%p42 bra 	BB0_22;

	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd221, %rd58;
	mov.b32 	 %r14, %f1108;
	shl.b32 	%r160, %r14, 8;
	or.b32  	%r16, %r160, -2147483648;
	mov.u32 	%r435, 0;
	mov.u64 	%rd222, 0;
	mov.u32 	%r436, %r435;

BB0_13:
	.pragma "nounroll";
	add.u64 	%rd219, %SP, 0;
	cvta.to.local.u64 	%rd218, %rd219;
	shl.b64 	%rd59, %rd222, 2;
	mov.u64 	%rd60, __cudart_i2opi_f;
	add.s64 	%rd61, %rd60, %rd59;
	ld.const.u32 	%r163, [%rd61];
	// inline asm
	{
	mad.lo.cc.u32   %r161, %r163, %r16, %r436;
	madc.hi.u32     %r436, %r163, %r16,  0;
	}
	// inline asm
	st.local.u32 	[%rd221], %r161;
	add.s32 	%r435, %r435, 1;
	cvt.s64.s32	%rd222, %r435;
	mul.wide.s32 	%rd64, %r435, 4;
	add.s64 	%rd221, %rd218, %rd64;
	setp.ne.s32	%p43, %r435, 6;
	@%p43 bra 	BB0_13;

	mov.b32 	 %r422, %f1108;
	shr.u32 	%r421, %r422, 23;
	add.u64 	%rd220, %SP, 0;
	and.b32  	%r166, %r421, 255;
	add.s32 	%r167, %r166, -128;
	shr.u32 	%r168, %r167, 5;
	cvta.to.local.u64 	%rd66, %rd220;
	st.local.u32 	[%rd66+24], %r436;
	mov.u32 	%r169, 6;
	sub.s32 	%r170, %r169, %r168;
	mul.wide.s32 	%rd67, %r170, 4;
	add.s64 	%rd8, %rd66, %rd67;
	ld.local.u32 	%r437, [%rd8];
	ld.local.u32 	%r438, [%rd8+-4];
	and.b32  	%r24, %r421, 31;
	setp.eq.s32	%p44, %r24, 0;
	@%p44 bra 	BB0_16;

	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r24;
	shr.u32 	%r173, %r438, %r172;
	shl.b32 	%r174, %r437, %r24;
	add.s32 	%r437, %r173, %r174;
	ld.local.u32 	%r175, [%rd8+-8];
	shr.u32 	%r176, %r175, %r172;
	shl.b32 	%r177, %r438, %r24;
	add.s32 	%r438, %r176, %r177;

BB0_16:
	mov.b32 	 %r425, %f1108;
	and.b32  	%r440, %r425, -2147483648;
	shr.u32 	%r178, %r438, 30;
	shl.b32 	%r179, %r437, 2;
	add.s32 	%r439, %r178, %r179;
	shl.b32 	%r30, %r438, 2;
	shr.u32 	%r180, %r439, 31;
	shr.u32 	%r181, %r437, 30;
	add.s32 	%r31, %r180, %r181;
	setp.eq.s32	%p45, %r180, 0;
	@%p45 bra 	BB0_17;
	bra.uni 	BB0_18;

BB0_17:
	mov.u32 	%r441, %r30;
	bra.uni 	BB0_19;

BB0_18:
	mov.b32 	 %r427, %f1108;
	and.b32  	%r426, %r427, -2147483648;
	not.b32 	%r182, %r439;
	neg.s32 	%r441, %r30;
	setp.eq.s32	%p46, %r30, 0;
	selp.u32	%r183, 1, 0, %p46;
	add.s32 	%r439, %r183, %r182;
	xor.b32  	%r440, %r426, -2147483648;

BB0_19:
	mov.b32 	 %r429, %f1108;
	and.b32  	%r428, %r429, -2147483648;
	clz.b32 	%r443, %r439;
	setp.eq.s32	%p47, %r443, 0;
	shl.b32 	%r184, %r439, %r443;
	mov.u32 	%r185, 32;
	sub.s32 	%r186, %r185, %r443;
	shr.u32 	%r187, %r441, %r186;
	add.s32 	%r188, %r187, %r184;
	selp.b32	%r39, %r439, %r188, %p47;
	mov.u32 	%r189, -921707870;
	mul.hi.u32 	%r442, %r39, %r189;
	setp.eq.s32	%p48, %r428, 0;
	neg.s32 	%r190, %r31;
	selp.b32	%r444, %r31, %r190, %p48;
	setp.lt.s32	%p49, %r442, 1;
	@%p49 bra 	BB0_21;

	mul.lo.s32 	%r191, %r39, -921707870;
	shr.u32 	%r192, %r191, 31;
	shl.b32 	%r193, %r442, 1;
	add.s32 	%r442, %r192, %r193;
	add.s32 	%r443, %r443, 1;

BB0_21:
	mov.u32 	%r194, 126;
	sub.s32 	%r195, %r194, %r443;
	shl.b32 	%r196, %r195, 23;
	add.s32 	%r197, %r442, 1;
	shr.u32 	%r198, %r197, 7;
	add.s32 	%r199, %r198, 1;
	shr.u32 	%r200, %r199, 1;
	add.s32 	%r201, %r200, %r196;
	or.b32  	%r202, %r201, %r440;
	mov.b32 	 %f1109, %r202;

BB0_22:
	mul.rn.f32 	%f133, %f1109, %f1109;
	add.s32 	%r47, %r444, 1;
	and.b32  	%r48, %r47, 1;
	setp.eq.s32	%p50, %r48, 0;
	@%p50 bra 	BB0_24;
	bra.uni 	BB0_23;

BB0_24:
	mov.f32 	%f493, 0f3C08839E;
	mov.f32 	%f494, 0fB94CA1F9;
	fma.rn.f32 	%f1110, %f494, %f133, %f493;
	bra.uni 	BB0_25;

BB0_23:
	mov.f32 	%f491, 0fBAB6061A;
	mov.f32 	%f492, 0f37CCF5CE;
	fma.rn.f32 	%f1110, %f492, %f133, %f491;

BB0_25:
	@%p50 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_27:
	mov.f32 	%f498, 0fBE2AAAA3;
	fma.rn.f32 	%f499, %f1110, %f133, %f498;
	mov.f32 	%f500, 0f00000000;
	fma.rn.f32 	%f1111, %f499, %f133, %f500;
	bra.uni 	BB0_28;

BB0_26:
	mov.f32 	%f495, 0f3D2AAAA5;
	fma.rn.f32 	%f496, %f1110, %f133, %f495;
	mov.f32 	%f497, 0fBF000000;
	fma.rn.f32 	%f1111, %f496, %f133, %f497;

BB0_28:
	fma.rn.f32 	%f1112, %f1111, %f1109, %f1109;
	@%p50 bra 	BB0_30;

	mov.f32 	%f501, 0f3F800000;
	fma.rn.f32 	%f1112, %f1111, %f133, %f501;

BB0_30:
	and.b32  	%r203, %r47, 2;
	setp.eq.s32	%p53, %r203, 0;
	@%p53 bra 	BB0_32;

	mov.f32 	%f502, 0f00000000;
	mov.f32 	%f503, 0fBF800000;
	fma.rn.f32 	%f1112, %f1112, %f503, %f502;

BB0_32:
	abs.f32 	%f1097, %f1114;
	setp.neu.f32	%p160, %f1097, 0f7F800000;
	@%p160 bra 	BB0_34;

	mov.f32 	%f504, 0f00000000;
	mul.rn.f32 	%f1114, %f1114, %f504;

BB0_34:
	mov.f32 	%f1100, 0f27C234C5;
	mov.f32 	%f1099, 0f33A22168;
	mov.f32 	%f1098, 0f3FC90FDA;
	mul.f32 	%f505, %f1114, 0f3F22F983;
	cvt.rni.s32.f32	%r454, %f505;
	cvt.rn.f32.s32	%f506, %r454;
	neg.f32 	%f507, %f506;
	fma.rn.f32 	%f509, %f507, %f1098, %f1114;
	fma.rn.f32 	%f511, %f507, %f1099, %f509;
	fma.rn.f32 	%f1115, %f507, %f1100, %f511;
	abs.f32 	%f513, %f1114;
	setp.leu.f32	%p55, %f513, 0f47CE4780;
	@%p55 bra 	BB0_45;

	add.u64 	%rd69, %SP, 0;
	cvta.to.local.u64 	%rd9, %rd69;
	mov.b32 	 %r50, %f1114;
	shr.u32 	%r51, %r50, 23;
	shl.b32 	%r206, %r50, 8;
	or.b32  	%r52, %r206, -2147483648;
	mov.u32 	%r445, 0;
	mov.u64 	%rd223, %rd9;
	mov.u64 	%rd224, %rd29;
	mov.u32 	%r446, %r445;

BB0_36:
	.pragma "nounroll";
	shl.b64 	%rd70, %rd224, 2;
	mov.u64 	%rd71, __cudart_i2opi_f;
	add.s64 	%rd72, %rd71, %rd70;
	ld.const.u32 	%r209, [%rd72];
	// inline asm
	{
	mad.lo.cc.u32   %r207, %r209, %r52, %r446;
	madc.hi.u32     %r446, %r209, %r52,  0;
	}
	// inline asm
	st.local.u32 	[%rd223], %r207;
	add.s32 	%r445, %r445, 1;
	cvt.s64.s32	%rd224, %r445;
	mul.wide.s32 	%rd73, %r445, 4;
	add.s64 	%rd223, %rd9, %rd73;
	setp.ne.s32	%p56, %r445, 6;
	@%p56 bra 	BB0_36;

	and.b32  	%r212, %r51, 255;
	add.s32 	%r213, %r212, -128;
	shr.u32 	%r214, %r213, 5;
	and.b32  	%r57, %r50, -2147483648;
	cvta.to.local.u64 	%rd75, %rd69;
	st.local.u32 	[%rd75+24], %r446;
	mov.u32 	%r215, 6;
	sub.s32 	%r216, %r215, %r214;
	mul.wide.s32 	%rd76, %r216, 4;
	add.s64 	%rd15, %rd75, %rd76;
	ld.local.u32 	%r447, [%rd15];
	ld.local.u32 	%r448, [%rd15+-4];
	and.b32  	%r60, %r51, 31;
	setp.eq.s32	%p57, %r60, 0;
	@%p57 bra 	BB0_39;

	mov.u32 	%r217, 32;
	sub.s32 	%r218, %r217, %r60;
	shr.u32 	%r219, %r448, %r218;
	shl.b32 	%r220, %r447, %r60;
	add.s32 	%r447, %r219, %r220;
	ld.local.u32 	%r221, [%rd15+-8];
	shr.u32 	%r222, %r221, %r218;
	shl.b32 	%r223, %r448, %r60;
	add.s32 	%r448, %r222, %r223;

BB0_39:
	shr.u32 	%r224, %r448, 30;
	shl.b32 	%r225, %r447, 2;
	add.s32 	%r449, %r224, %r225;
	shl.b32 	%r66, %r448, 2;
	shr.u32 	%r226, %r449, 31;
	shr.u32 	%r227, %r447, 30;
	add.s32 	%r67, %r226, %r227;
	setp.eq.s32	%p58, %r226, 0;
	@%p58 bra 	BB0_40;
	bra.uni 	BB0_41;

BB0_40:
	mov.u32 	%r450, %r57;
	mov.u32 	%r451, %r66;
	bra.uni 	BB0_42;

BB0_41:
	not.b32 	%r228, %r449;
	neg.s32 	%r451, %r66;
	setp.eq.s32	%p59, %r66, 0;
	selp.u32	%r229, 1, 0, %p59;
	add.s32 	%r449, %r229, %r228;
	xor.b32  	%r450, %r57, -2147483648;

BB0_42:
	clz.b32 	%r453, %r449;
	setp.eq.s32	%p60, %r453, 0;
	shl.b32 	%r230, %r449, %r453;
	mov.u32 	%r231, 32;
	sub.s32 	%r232, %r231, %r453;
	shr.u32 	%r233, %r451, %r232;
	add.s32 	%r234, %r233, %r230;
	selp.b32	%r75, %r449, %r234, %p60;
	mov.u32 	%r235, -921707870;
	mul.hi.u32 	%r452, %r75, %r235;
	setp.eq.s32	%p61, %r57, 0;
	neg.s32 	%r236, %r67;
	selp.b32	%r454, %r67, %r236, %p61;
	setp.lt.s32	%p62, %r452, 1;
	@%p62 bra 	BB0_44;

	mul.lo.s32 	%r237, %r75, -921707870;
	shr.u32 	%r238, %r237, 31;
	shl.b32 	%r239, %r452, 1;
	add.s32 	%r452, %r238, %r239;
	add.s32 	%r453, %r453, 1;

BB0_44:
	mov.u32 	%r240, 126;
	sub.s32 	%r241, %r240, %r453;
	shl.b32 	%r242, %r241, 23;
	add.s32 	%r243, %r452, 1;
	shr.u32 	%r244, %r243, 7;
	add.s32 	%r245, %r244, 1;
	shr.u32 	%r246, %r245, 1;
	add.s32 	%r247, %r246, %r242;
	or.b32  	%r248, %r247, %r450;
	mov.b32 	 %f1115, %r248;

BB0_45:
	mul.rn.f32 	%f150, %f1115, %f1115;
	and.b32  	%r83, %r454, 1;
	setp.eq.s32	%p63, %r83, 0;
	@%p63 bra 	BB0_47;
	bra.uni 	BB0_46;

BB0_47:
	mov.f32 	%f516, 0f3C08839E;
	mov.f32 	%f517, 0fB94CA1F9;
	fma.rn.f32 	%f1116, %f517, %f150, %f516;
	bra.uni 	BB0_48;

BB0_46:
	mov.f32 	%f514, 0fBAB6061A;
	mov.f32 	%f515, 0f37CCF5CE;
	fma.rn.f32 	%f1116, %f515, %f150, %f514;

BB0_48:
	@%p63 bra 	BB0_50;
	bra.uni 	BB0_49;

BB0_50:
	mov.f32 	%f521, 0fBE2AAAA3;
	fma.rn.f32 	%f522, %f1116, %f150, %f521;
	mov.f32 	%f523, 0f00000000;
	fma.rn.f32 	%f1117, %f522, %f150, %f523;
	bra.uni 	BB0_51;

BB0_49:
	mov.f32 	%f518, 0f3D2AAAA5;
	fma.rn.f32 	%f519, %f1116, %f150, %f518;
	mov.f32 	%f520, 0fBF000000;
	fma.rn.f32 	%f1117, %f519, %f150, %f520;

BB0_51:
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1115;
	@%p63 bra 	BB0_53;

	mov.f32 	%f524, 0f3F800000;
	fma.rn.f32 	%f1118, %f1117, %f150, %f524;

BB0_53:
	and.b32  	%r249, %r454, 2;
	setp.eq.s32	%p66, %r249, 0;
	@%p66 bra 	BB0_55;

	mov.f32 	%f525, 0f00000000;
	mov.f32 	%f526, 0fBF800000;
	fma.rn.f32 	%f1118, %f1118, %f526, %f525;

BB0_55:
	max.f32 	%f1096, %f464, %f302;
	mul.f32 	%f535, %f125, %f1112;
	add.u64 	%rd77, %SP, 28;
	cvta.to.local.u64 	%rd16, %rd77;
	mul.f32 	%f536, %f535, %f535;
	mov.f32 	%f537, 0f3F800000;
	sub.f32 	%f538, %f537, %f536;
	mul.f32 	%f539, %f125, %f1118;
	mul.f32 	%f540, %f539, %f539;
	sub.f32 	%f541, %f538, %f540;
	mov.f32 	%f542, 0f00000000;
	max.f32 	%f543, %f542, %f541;
	sqrt.rn.f32 	%f544, %f543;
	mul.f32 	%f545, %f21, %f539;
	mul.f32 	%f546, %f22, %f539;
	mul.f32 	%f547, %f23, %f539;
	fma.rn.f32 	%f548, %f86, %f535, %f545;
	fma.rn.f32 	%f549, %f85, %f535, %f546;
	fma.rn.f32 	%f550, %f84, %f535, %f547;
	fma.rn.f32 	%f551, %f7, %f544, %f548;
	fma.rn.f32 	%f552, %f8, %f544, %f549;
	fma.rn.f32 	%f553, %f9, %f544, %f550;
	add.f32 	%f554, %f7, %f551;
	add.f32 	%f555, %f8, %f552;
	add.f32 	%f556, %f9, %f553;
	ld.global.f32 	%f557, [shadowSpread];
	mul.f32 	%f558, %f557, %f554;
	mul.f32 	%f559, %f557, %f555;
	mul.f32 	%f560, %f557, %f556;
	sub.f32 	%f561, %f558, %f7;
	sub.f32 	%f562, %f559, %f8;
	sub.f32 	%f563, %f560, %f9;
	mul.f32 	%f564, %f562, %f562;
	fma.rn.f32 	%f565, %f561, %f561, %f564;
	fma.rn.f32 	%f566, %f563, %f563, %f565;
	sqrt.rn.f32 	%f567, %f566;
	rcp.rn.f32 	%f568, %f567;
	mul.f32 	%f162, %f568, %f561;
	mul.f32 	%f163, %f568, %f562;
	mul.f32 	%f164, %f568, %f563;
	ld.global.u32 	%r253, [imageEnabled];
	and.b32  	%r254, %r253, 32;
	setp.eq.s32	%p67, %r254, 0;
	selp.f32	%f569, 0f3F800000, 0f41200000, %p67;
	mul.f32 	%f533, %f569, %f1096;
	mov.u32 	%r255, 1065353216;
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r250, [root];
	mov.u32 	%r251, 1;
	// inline asm
	call _rt_trace_64, (%r250, %f11, %f12, %f13, %f92, %f93, %f94, %r251, %f533, %f91, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f570, [%rd16];
	mov.u16 	%rs94, 0;
	setp.neu.f32	%p68, %f570, 0f3F800000;
	@%p68 bra 	BB0_57;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r256, [root];
	mov.f32 	%f578, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r256, %f28, %f29, %f30, %f162, %f163, %f164, %r251, %f533, %f578, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f579, [%rd16];
	add.f32 	%f1107, %f1107, %f579;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_57:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r260, [root];
	// inline asm
	call _rt_trace_64, (%r260, %f11, %f12, %f13, %f96, %f97, %f98, %r251, %f533, %f95, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f588, [%rd16];
	setp.neu.f32	%p69, %f588, 0f3F800000;
	@%p69 bra 	BB0_59;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r264, [root];
	mov.f32 	%f596, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r264, %f35, %f36, %f37, %f162, %f163, %f164, %r251, %f533, %f596, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f597, [%rd16];
	add.f32 	%f1107, %f1107, %f597;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_59:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r268, [root];
	// inline asm
	call _rt_trace_64, (%r268, %f11, %f12, %f13, %f100, %f101, %f102, %r251, %f533, %f99, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f606, [%rd16];
	setp.neu.f32	%p70, %f606, 0f3F800000;
	@%p70 bra 	BB0_61;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r272, [root];
	mov.f32 	%f614, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r272, %f42, %f43, %f44, %f162, %f163, %f164, %r251, %f533, %f614, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f615, [%rd16];
	add.f32 	%f1107, %f1107, %f615;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_61:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r276, [root];
	// inline asm
	call _rt_trace_64, (%r276, %f11, %f12, %f13, %f104, %f105, %f106, %r251, %f533, %f103, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f624, [%rd16];
	setp.neu.f32	%p71, %f624, 0f3F800000;
	@%p71 bra 	BB0_63;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r280, [root];
	mov.f32 	%f632, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r280, %f49, %f50, %f51, %f162, %f163, %f164, %r251, %f533, %f632, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f633, [%rd16];
	add.f32 	%f1107, %f1107, %f633;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_63:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r284, [root];
	// inline asm
	call _rt_trace_64, (%r284, %f11, %f12, %f13, %f108, %f109, %f110, %r251, %f533, %f107, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f642, [%rd16];
	setp.neu.f32	%p72, %f642, 0f3F800000;
	@%p72 bra 	BB0_65;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r288, [root];
	mov.f32 	%f650, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r288, %f56, %f57, %f58, %f162, %f163, %f164, %r251, %f533, %f650, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f651, [%rd16];
	add.f32 	%f1107, %f1107, %f651;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_65:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r292, [root];
	// inline asm
	call _rt_trace_64, (%r292, %f11, %f12, %f13, %f112, %f113, %f114, %r251, %f533, %f111, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f660, [%rd16];
	setp.neu.f32	%p73, %f660, 0f3F800000;
	@%p73 bra 	BB0_67;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r296, [root];
	mov.f32 	%f668, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r296, %f63, %f64, %f65, %f162, %f163, %f164, %r251, %f533, %f668, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f669, [%rd16];
	add.f32 	%f1107, %f1107, %f669;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_67:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r300, [root];
	// inline asm
	call _rt_trace_64, (%r300, %f11, %f12, %f13, %f116, %f117, %f118, %r251, %f533, %f115, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f678, [%rd16];
	setp.neu.f32	%p74, %f678, 0f3F800000;
	@%p74 bra 	BB0_69;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r304, [root];
	mov.f32 	%f686, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r304, %f70, %f71, %f72, %f162, %f163, %f164, %r251, %f533, %f686, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f687, [%rd16];
	add.f32 	%f1107, %f1107, %f687;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_69:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r308, [root];
	// inline asm
	call _rt_trace_64, (%r308, %f11, %f12, %f13, %f120, %f121, %f122, %r251, %f533, %f119, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f696, [%rd16];
	setp.neu.f32	%p75, %f696, 0f3F800000;
	@%p75 bra 	BB0_71;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r312, [root];
	mov.f32 	%f704, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r312, %f77, %f78, %f79, %f162, %f163, %f164, %r251, %f533, %f704, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f705, [%rd16];
	add.f32 	%f1107, %f1107, %f705;
	add.f32 	%f1106, %f1106, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_71:
	setp.ne.s16	%p76, %rs94, 0;
	@%p76 bra 	BB0_73;

	add.u64 	%rd93, %SP, 32;
	cvta.to.local.u64 	%rd94, %rd93;
	st.local.u32 	[%rd94], %r255;
	ld.global.u32 	%r316, [root];
	mov.f32 	%f713, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r316, %f11, %f12, %f13, %f162, %f163, %f164, %r251, %f533, %f713, %rd93, %r105);
	// inline asm
	ld.local.f32 	%f714, [%rd94];
	add.f32 	%f1107, %f1107, %f714;
	add.f32 	%f1106, %f1106, 0f3F800000;

BB0_73:
	mad.lo.s32 	%r420, %r456, 1664525, 1013904223;
	mad.lo.s32 	%r456, %r420, 1664525, 1013904223;
	ld.global.u32 	%r430, [samples];
	add.s32 	%r433, %r433, 1;
	setp.lt.s32	%p77, %r433, %r430;
	@%p77 bra 	BB0_9;

BB0_74:
	add.s32 	%r431, %r431, 1;
	setp.lt.s32	%p78, %r431, %r430;
	@%p78 bra 	BB0_7;
	bra.uni 	BB0_75;

BB0_148:
	mov.u64 	%rd210, image_HDR;
	cvta.global.u64 	%rd205, %rd210;
	mov.u32 	%r411, 8;
	mov.u64 	%rd209, 0;
	// inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r104, %r411, %rd22, %rd23, %rd209, %rd209);
	// inline asm
	mov.f32 	%f1094, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f1094;}

	// inline asm
	mov.u16 	%rs89, 0;
	st.v4.u16 	[%rd204], {%rs88, %rs88, %rs88, %rs89};

BB0_149:
	ld.global.u8 	%rs90, [imageEnabled];
	and.b16  	%rs91, %rs90, 64;
	setp.eq.s16	%p159, %rs91, 0;
	@%p159 bra 	BB0_151;

	cvt.u64.u32	%rd213, %r2;
	cvt.u64.u32	%rd214, %r3;
	mov.u64 	%rd217, image_Dir;
	cvta.global.u64 	%rd212, %rd217;
	mov.u64 	%rd216, 0;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r104, %r105, %rd213, %rd214, %rd216, %rd216);
	// inline asm
	mov.u16 	%rs92, 0;
	st.v4.u8 	[%rd211], {%rs92, %rs92, %rs92, %rs92};
	bra.uni 	BB0_151;

BB0_5:
	mov.f32 	%f1107, %f1106;

BB0_75:
	setp.eq.s32	%p79, %r430, 0;
	mov.f32 	%f1142, 0f3F800000;
	@%p79 bra 	BB0_77;

	mov.f32 	%f716, 0f3F800000;
	max.f32 	%f717, %f1106, %f716;
	div.rn.f32 	%f1142, %f1107, %f717;

BB0_77:
	ld.global.f32 	%f718, [directColor];
	mul.f32 	%f719, %f1142, %f718;
	ld.global.f32 	%f720, [directColor+4];
	mul.f32 	%f721, %f1142, %f720;
	ld.global.f32 	%f722, [directColor+8];
	mul.f32 	%f723, %f1142, %f722;
	cvt.sat.f32.f32	%f724, %f10;
	mul.f32 	%f725, %f719, %f724;
	mul.f32 	%f726, %f721, %f724;
	mul.f32 	%f727, %f723, %f724;
	ld.global.u32 	%r320, [ignoreNormal];
	setp.eq.s32	%p80, %r320, 0;
	selp.f32	%f208, %f725, %f719, %p80;
	selp.f32	%f209, %f726, %f721, %p80;
	selp.f32	%f210, %f727, %f723, %p80;
	ld.global.u32 	%r459, [imageEnabled];
	and.b32  	%r321, %r459, 8;
	setp.eq.s32	%p81, %r321, 0;
	@%p81 bra 	BB0_90;

	mov.u32 	%r414, 2;
	cvt.u64.u32	%rd97, %r2;
	cvt.u64.u32	%rd98, %r3;
	mov.u64 	%rd101, image_Mask;
	cvta.global.u64 	%rd96, %rd101;
	// inline asm
	call (%rd95), _rt_buffer_get_64, (%rd96, %r414, %r414, %rd97, %rd98, %rd29, %rd29);
	// inline asm
	mov.f32 	%f730, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f731, %f730;
	fma.rn.f32 	%f732, %f731, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f211, %f732;
	abs.f32 	%f212, %f1142;
	setp.lt.f32	%p82, %f212, 0f00800000;
	mul.f32 	%f733, %f212, 0f4B800000;
	selp.f32	%f734, 0fC3170000, 0fC2FE0000, %p82;
	selp.f32	%f735, %f733, %f212, %p82;
	mov.b32 	 %r324, %f735;
	and.b32  	%r325, %r324, 8388607;
	or.b32  	%r326, %r325, 1065353216;
	mov.b32 	 %f736, %r326;
	shr.u32 	%r327, %r324, 23;
	cvt.rn.f32.u32	%f737, %r327;
	add.f32 	%f738, %f734, %f737;
	setp.gt.f32	%p83, %f736, 0f3FB504F3;
	mul.f32 	%f739, %f736, 0f3F000000;
	add.f32 	%f740, %f738, 0f3F800000;
	selp.f32	%f741, %f739, %f736, %p83;
	selp.f32	%f742, %f740, %f738, %p83;
	add.f32 	%f743, %f741, 0fBF800000;
	add.f32 	%f729, %f741, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f728,%f729;
	// inline asm
	add.f32 	%f744, %f743, %f743;
	mul.f32 	%f745, %f728, %f744;
	mul.f32 	%f746, %f745, %f745;
	mov.f32 	%f747, 0f3C4CAF63;
	mov.f32 	%f748, 0f3B18F0FE;
	fma.rn.f32 	%f749, %f748, %f746, %f747;
	mov.f32 	%f750, 0f3DAAAABD;
	fma.rn.f32 	%f751, %f749, %f746, %f750;
	mul.rn.f32 	%f752, %f751, %f746;
	mul.rn.f32 	%f753, %f752, %f745;
	sub.f32 	%f754, %f743, %f745;
	neg.f32 	%f755, %f745;
	add.f32 	%f756, %f754, %f754;
	fma.rn.f32 	%f757, %f755, %f743, %f756;
	mul.rn.f32 	%f758, %f728, %f757;
	add.f32 	%f759, %f753, %f745;
	sub.f32 	%f760, %f745, %f759;
	add.f32 	%f761, %f753, %f760;
	add.f32 	%f762, %f758, %f761;
	add.f32 	%f763, %f759, %f762;
	sub.f32 	%f764, %f759, %f763;
	add.f32 	%f765, %f762, %f764;
	mov.f32 	%f766, 0f3F317200;
	mul.rn.f32 	%f767, %f742, %f766;
	mov.f32 	%f768, 0f35BFBE8E;
	mul.rn.f32 	%f769, %f742, %f768;
	add.f32 	%f770, %f767, %f763;
	sub.f32 	%f771, %f767, %f770;
	add.f32 	%f772, %f763, %f771;
	add.f32 	%f773, %f765, %f772;
	add.f32 	%f774, %f769, %f773;
	add.f32 	%f775, %f770, %f774;
	sub.f32 	%f776, %f770, %f775;
	add.f32 	%f777, %f774, %f776;
	mov.f32 	%f778, 0f3EE8BA2E;
	mul.rn.f32 	%f779, %f778, %f775;
	neg.f32 	%f780, %f779;
	fma.rn.f32 	%f781, %f778, %f775, %f780;
	fma.rn.f32 	%f782, %f778, %f777, %f781;
	mov.f32 	%f783, 0f00000000;
	fma.rn.f32 	%f784, %f783, %f775, %f782;
	add.rn.f32 	%f785, %f779, %f784;
	neg.f32 	%f786, %f785;
	add.rn.f32 	%f787, %f779, %f786;
	add.rn.f32 	%f788, %f787, %f784;
	mov.b32 	 %r328, %f785;
	setp.eq.s32	%p84, %r328, 1118925336;
	add.s32 	%r329, %r328, -1;
	mov.b32 	 %f789, %r329;
	add.f32 	%f790, %f788, 0f37000000;
	selp.f32	%f791, %f789, %f785, %p84;
	selp.f32	%f213, %f790, %f788, %p84;
	mul.f32 	%f792, %f791, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f793, %f792;
	mov.f32 	%f794, 0fBF317200;
	fma.rn.f32 	%f795, %f793, %f794, %f791;
	mov.f32 	%f796, 0fB5BFBE8E;
	fma.rn.f32 	%f797, %f793, %f796, %f795;
	mul.f32 	%f798, %f797, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f799, %f798;
	add.f32 	%f800, %f793, 0f00000000;
	ex2.approx.f32 	%f801, %f800;
	mul.f32 	%f802, %f799, %f801;
	setp.lt.f32	%p85, %f791, 0fC2D20000;
	selp.f32	%f803, 0f00000000, %f802, %p85;
	setp.gt.f32	%p86, %f791, 0f42D20000;
	selp.f32	%f1143, 0f7F800000, %f803, %p86;
	setp.eq.f32	%p87, %f1143, 0f7F800000;
	@%p87 bra 	BB0_80;

	fma.rn.f32 	%f1143, %f1143, %f213, %f1143;

BB0_80:
	setp.lt.f32	%p88, %f1142, 0f00000000;
	setp.eq.f32	%p89, %f211, 0f3F800000;
	and.pred  	%p1, %p88, %p89;
	mov.b32 	 %r330, %f1143;
	xor.b32  	%r331, %r330, -2147483648;
	mov.b32 	 %f804, %r331;
	selp.f32	%f1145, %f804, %f1143, %p1;
	setp.eq.f32	%p90, %f1142, 0f00000000;
	@%p90 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f807, %f1142, %f1142;
	selp.f32	%f1145, %f807, 0f00000000, %p89;
	bra.uni 	BB0_84;

BB0_138:
	mov.u64 	%rd169, image_HDR;
	cvta.global.u64 	%rd164, %rd169;
	mov.u32 	%r394, 8;
	mov.u64 	%rd168, 0;
	// inline asm
	call (%rd163), _rt_buffer_get_64, (%rd164, %r104, %r394, %rd20, %rd21, %rd168, %rd168);
	// inline asm
	mov.f32 	%f1084, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1084;}

	// inline asm
	st.v4.u16 	[%rd163], {%rs69, %rs69, %rs69, %rs58};

BB0_139:
	ld.global.u8 	%rs70, [imageEnabled];
	and.b16  	%rs71, %rs70, 64;
	setp.eq.s16	%p154, %rs71, 0;
	@%p154 bra 	BB0_151;

	cvt.u64.u32	%rd172, %r2;
	cvt.u64.u32	%rd173, %r3;
	mov.u64 	%rd176, image_Dir;
	cvta.global.u64 	%rd171, %rd176;
	mov.u64 	%rd175, 0;
	// inline asm
	call (%rd170), _rt_buffer_get_64, (%rd171, %r104, %r105, %rd172, %rd173, %rd175, %rd175);
	// inline asm
	mov.u16 	%rs72, 255;
	mov.u16 	%rs73, 0;
	st.v4.u8 	[%rd170], {%rs73, %rs73, %rs73, %rs72};
	bra.uni 	BB0_151;

BB0_81:
	setp.geu.f32	%p91, %f1142, 0f00000000;
	@%p91 bra 	BB0_84;

	cvt.rzi.f32.f32	%f806, %f778;
	setp.neu.f32	%p92, %f806, 0f3EE8BA2E;
	selp.f32	%f1145, 0f7FFFFFFF, %f1145, %p92;

BB0_84:
	add.f32 	%f808, %f212, 0f3EE8BA2E;
	mov.b32 	 %r332, %f808;
	setp.lt.s32	%p94, %r332, 2139095040;
	@%p94 bra 	BB0_89;

	setp.gtu.f32	%p95, %f212, 0f7F800000;
	@%p95 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f1145, %f1142, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p96, %f212, 0f7F800000;
	@%p96 bra 	BB0_89;

	selp.f32	%f1145, 0fFF800000, 0f7F800000, %p1;

BB0_89:
	mul.f32 	%f809, %f1145, 0f437F0000;
	setp.eq.f32	%p97, %f1142, 0f3F800000;
	selp.f32	%f810, 0f437F0000, %f809, %p97;
	cvt.rzi.u32.f32	%r333, %f810;
	cvt.u16.u32	%rs28, %r333;
	mov.u16 	%rs29, 255;
	st.v2.u8 	[%rd95], {%rs28, %rs29};
	ld.global.u32 	%r459, [imageEnabled];

BB0_90:
	and.b32  	%r334, %r459, 1;
	setp.eq.b32	%p98, %r334, 1;
	@!%p98 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f813, 0f3E666666;
	cvt.rzi.f32.f32	%f814, %f813;
	fma.rn.f32 	%f815, %f814, 0fC0000000, 0f3EE66666;
	abs.f32 	%f224, %f815;
	abs.f32 	%f225, %f208;
	setp.lt.f32	%p99, %f225, 0f00800000;
	mul.f32 	%f816, %f225, 0f4B800000;
	selp.f32	%f817, 0fC3170000, 0fC2FE0000, %p99;
	selp.f32	%f818, %f816, %f225, %p99;
	mov.b32 	 %r335, %f818;
	and.b32  	%r336, %r335, 8388607;
	or.b32  	%r337, %r336, 1065353216;
	mov.b32 	 %f819, %r337;
	shr.u32 	%r338, %r335, 23;
	cvt.rn.f32.u32	%f820, %r338;
	add.f32 	%f821, %f817, %f820;
	setp.gt.f32	%p100, %f819, 0f3FB504F3;
	mul.f32 	%f822, %f819, 0f3F000000;
	add.f32 	%f823, %f821, 0f3F800000;
	selp.f32	%f824, %f822, %f819, %p100;
	selp.f32	%f825, %f823, %f821, %p100;
	add.f32 	%f826, %f824, 0fBF800000;
	add.f32 	%f812, %f824, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f811,%f812;
	// inline asm
	add.f32 	%f827, %f826, %f826;
	mul.f32 	%f828, %f811, %f827;
	mul.f32 	%f829, %f828, %f828;
	mov.f32 	%f830, 0f3C4CAF63;
	mov.f32 	%f831, 0f3B18F0FE;
	fma.rn.f32 	%f832, %f831, %f829, %f830;
	mov.f32 	%f833, 0f3DAAAABD;
	fma.rn.f32 	%f834, %f832, %f829, %f833;
	mul.rn.f32 	%f835, %f834, %f829;
	mul.rn.f32 	%f836, %f835, %f828;
	sub.f32 	%f837, %f826, %f828;
	neg.f32 	%f838, %f828;
	add.f32 	%f839, %f837, %f837;
	fma.rn.f32 	%f840, %f838, %f826, %f839;
	mul.rn.f32 	%f841, %f811, %f840;
	add.f32 	%f842, %f836, %f828;
	sub.f32 	%f843, %f828, %f842;
	add.f32 	%f844, %f836, %f843;
	add.f32 	%f845, %f841, %f844;
	add.f32 	%f846, %f842, %f845;
	sub.f32 	%f847, %f842, %f846;
	add.f32 	%f848, %f845, %f847;
	mov.f32 	%f849, 0f3F317200;
	mul.rn.f32 	%f850, %f825, %f849;
	mov.f32 	%f851, 0f35BFBE8E;
	mul.rn.f32 	%f852, %f825, %f851;
	add.f32 	%f853, %f850, %f846;
	sub.f32 	%f854, %f850, %f853;
	add.f32 	%f855, %f846, %f854;
	add.f32 	%f856, %f848, %f855;
	add.f32 	%f857, %f852, %f856;
	add.f32 	%f858, %f853, %f857;
	sub.f32 	%f859, %f853, %f858;
	add.f32 	%f860, %f857, %f859;
	mov.f32 	%f861, 0f3EE66666;
	mul.rn.f32 	%f862, %f861, %f858;
	neg.f32 	%f863, %f862;
	fma.rn.f32 	%f864, %f861, %f858, %f863;
	fma.rn.f32 	%f865, %f861, %f860, %f864;
	mov.f32 	%f866, 0f00000000;
	fma.rn.f32 	%f867, %f866, %f858, %f865;
	add.rn.f32 	%f868, %f862, %f867;
	neg.f32 	%f869, %f868;
	add.rn.f32 	%f870, %f862, %f869;
	add.rn.f32 	%f871, %f870, %f867;
	mov.b32 	 %r339, %f868;
	setp.eq.s32	%p101, %r339, 1118925336;
	add.s32 	%r340, %r339, -1;
	mov.b32 	 %f872, %r340;
	add.f32 	%f873, %f871, 0f37000000;
	selp.f32	%f874, %f872, %f868, %p101;
	selp.f32	%f226, %f873, %f871, %p101;
	mul.f32 	%f875, %f874, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f876, %f875;
	mov.f32 	%f877, 0fBF317200;
	fma.rn.f32 	%f878, %f876, %f877, %f874;
	mov.f32 	%f879, 0fB5BFBE8E;
	fma.rn.f32 	%f880, %f876, %f879, %f878;
	mul.f32 	%f881, %f880, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f882, %f881;
	add.f32 	%f883, %f876, 0f00000000;
	ex2.approx.f32 	%f884, %f883;
	mul.f32 	%f885, %f882, %f884;
	setp.lt.f32	%p102, %f874, 0fC2D20000;
	selp.f32	%f886, 0f00000000, %f885, %p102;
	setp.gt.f32	%p103, %f874, 0f42D20000;
	selp.f32	%f1146, 0f7F800000, %f886, %p103;
	setp.eq.f32	%p104, %f1146, 0f7F800000;
	@%p104 bra 	BB0_93;

	fma.rn.f32 	%f1146, %f1146, %f226, %f1146;

BB0_93:
	setp.lt.f32	%p105, %f208, 0f00000000;
	setp.eq.f32	%p106, %f224, 0f3F800000;
	and.pred  	%p2, %p105, %p106;
	mov.b32 	 %r341, %f1146;
	xor.b32  	%r342, %r341, -2147483648;
	mov.b32 	 %f887, %r342;
	selp.f32	%f1148, %f887, %f1146, %p2;
	setp.eq.f32	%p107, %f208, 0f00000000;
	@%p107 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f890, %f208, %f208;
	selp.f32	%f1148, %f890, 0f00000000, %p106;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p108, %f208, 0f00000000;
	@%p108 bra 	BB0_97;

	cvt.rzi.f32.f32	%f889, %f861;
	setp.neu.f32	%p109, %f889, 0f3EE66666;
	selp.f32	%f1148, 0f7FFFFFFF, %f1148, %p109;

BB0_97:
	add.f32 	%f891, %f225, 0f3EE66666;
	mov.b32 	 %r343, %f891;
	setp.lt.s32	%p111, %r343, 2139095040;
	@%p111 bra 	BB0_102;

	setp.gtu.f32	%p112, %f225, 0f7F800000;
	@%p112 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f1148, %f208, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p113, %f225, 0f7F800000;
	@%p113 bra 	BB0_102;

	selp.f32	%f1148, 0fFF800000, 0f7F800000, %p2;

BB0_102:
	setp.eq.f32	%p114, %f208, 0f3F800000;
	selp.f32	%f237, 0f3F800000, %f1148, %p114;
	abs.f32 	%f238, %f209;
	setp.lt.f32	%p115, %f238, 0f00800000;
	mul.f32 	%f894, %f238, 0f4B800000;
	selp.f32	%f895, 0fC3170000, 0fC2FE0000, %p115;
	selp.f32	%f896, %f894, %f238, %p115;
	mov.b32 	 %r344, %f896;
	and.b32  	%r345, %r344, 8388607;
	or.b32  	%r346, %r345, 1065353216;
	mov.b32 	 %f897, %r346;
	shr.u32 	%r347, %r344, 23;
	cvt.rn.f32.u32	%f898, %r347;
	add.f32 	%f899, %f895, %f898;
	setp.gt.f32	%p116, %f897, 0f3FB504F3;
	mul.f32 	%f900, %f897, 0f3F000000;
	add.f32 	%f901, %f899, 0f3F800000;
	selp.f32	%f902, %f900, %f897, %p116;
	selp.f32	%f903, %f901, %f899, %p116;
	add.f32 	%f904, %f902, 0fBF800000;
	add.f32 	%f893, %f902, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f892,%f893;
	// inline asm
	add.f32 	%f905, %f904, %f904;
	mul.f32 	%f906, %f892, %f905;
	mul.f32 	%f907, %f906, %f906;
	fma.rn.f32 	%f910, %f831, %f907, %f830;
	fma.rn.f32 	%f912, %f910, %f907, %f833;
	mul.rn.f32 	%f913, %f912, %f907;
	mul.rn.f32 	%f914, %f913, %f906;
	sub.f32 	%f915, %f904, %f906;
	neg.f32 	%f916, %f906;
	add.f32 	%f917, %f915, %f915;
	fma.rn.f32 	%f918, %f916, %f904, %f917;
	mul.rn.f32 	%f919, %f892, %f918;
	add.f32 	%f920, %f914, %f906;
	sub.f32 	%f921, %f906, %f920;
	add.f32 	%f922, %f914, %f921;
	add.f32 	%f923, %f919, %f922;
	add.f32 	%f924, %f920, %f923;
	sub.f32 	%f925, %f920, %f924;
	add.f32 	%f926, %f923, %f925;
	mul.rn.f32 	%f928, %f903, %f849;
	mul.rn.f32 	%f930, %f903, %f851;
	add.f32 	%f931, %f928, %f924;
	sub.f32 	%f932, %f928, %f931;
	add.f32 	%f933, %f924, %f932;
	add.f32 	%f934, %f926, %f933;
	add.f32 	%f935, %f930, %f934;
	add.f32 	%f936, %f931, %f935;
	sub.f32 	%f937, %f931, %f936;
	add.f32 	%f938, %f935, %f937;
	mul.rn.f32 	%f940, %f861, %f936;
	neg.f32 	%f941, %f940;
	fma.rn.f32 	%f942, %f861, %f936, %f941;
	fma.rn.f32 	%f943, %f861, %f938, %f942;
	fma.rn.f32 	%f945, %f866, %f936, %f943;
	add.rn.f32 	%f946, %f940, %f945;
	neg.f32 	%f947, %f946;
	add.rn.f32 	%f948, %f940, %f947;
	add.rn.f32 	%f949, %f948, %f945;
	mov.b32 	 %r348, %f946;
	setp.eq.s32	%p117, %r348, 1118925336;
	add.s32 	%r349, %r348, -1;
	mov.b32 	 %f950, %r349;
	add.f32 	%f951, %f949, 0f37000000;
	selp.f32	%f952, %f950, %f946, %p117;
	selp.f32	%f239, %f951, %f949, %p117;
	mul.f32 	%f953, %f952, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f954, %f953;
	fma.rn.f32 	%f956, %f954, %f877, %f952;
	fma.rn.f32 	%f958, %f954, %f879, %f956;
	mul.f32 	%f959, %f958, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f960, %f959;
	add.f32 	%f961, %f954, 0f00000000;
	ex2.approx.f32 	%f962, %f961;
	mul.f32 	%f963, %f960, %f962;
	setp.lt.f32	%p118, %f952, 0fC2D20000;
	selp.f32	%f964, 0f00000000, %f963, %p118;
	setp.gt.f32	%p119, %f952, 0f42D20000;
	selp.f32	%f1149, 0f7F800000, %f964, %p119;
	setp.eq.f32	%p120, %f1149, 0f7F800000;
	@%p120 bra 	BB0_104;

	fma.rn.f32 	%f1149, %f1149, %f239, %f1149;

BB0_104:
	setp.lt.f32	%p121, %f209, 0f00000000;
	and.pred  	%p3, %p121, %p106;
	mov.b32 	 %r350, %f1149;
	xor.b32  	%r351, %r350, -2147483648;
	mov.b32 	 %f965, %r351;
	selp.f32	%f1151, %f965, %f1149, %p3;
	setp.eq.f32	%p123, %f209, 0f00000000;
	@%p123 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f968, %f209, %f209;
	selp.f32	%f1151, %f968, 0f00000000, %p106;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p124, %f209, 0f00000000;
	@%p124 bra 	BB0_108;

	cvt.rzi.f32.f32	%f967, %f861;
	setp.neu.f32	%p125, %f967, 0f3EE66666;
	selp.f32	%f1151, 0f7FFFFFFF, %f1151, %p125;

BB0_108:
	add.f32 	%f969, %f238, 0f3EE66666;
	mov.b32 	 %r352, %f969;
	setp.lt.s32	%p127, %r352, 2139095040;
	@%p127 bra 	BB0_113;

	setp.gtu.f32	%p128, %f238, 0f7F800000;
	@%p128 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f1151, %f209, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p129, %f238, 0f7F800000;
	@%p129 bra 	BB0_113;

	selp.f32	%f1151, 0fFF800000, 0f7F800000, %p3;

BB0_113:
	setp.eq.f32	%p130, %f209, 0f3F800000;
	selp.f32	%f250, 0f3F800000, %f1151, %p130;
	abs.f32 	%f251, %f210;
	setp.lt.f32	%p131, %f251, 0f00800000;
	mul.f32 	%f972, %f251, 0f4B800000;
	selp.f32	%f973, 0fC3170000, 0fC2FE0000, %p131;
	selp.f32	%f974, %f972, %f251, %p131;
	mov.b32 	 %r353, %f974;
	and.b32  	%r354, %r353, 8388607;
	or.b32  	%r355, %r354, 1065353216;
	mov.b32 	 %f975, %r355;
	shr.u32 	%r356, %r353, 23;
	cvt.rn.f32.u32	%f976, %r356;
	add.f32 	%f977, %f973, %f976;
	setp.gt.f32	%p132, %f975, 0f3FB504F3;
	mul.f32 	%f978, %f975, 0f3F000000;
	add.f32 	%f979, %f977, 0f3F800000;
	selp.f32	%f980, %f978, %f975, %p132;
	selp.f32	%f981, %f979, %f977, %p132;
	add.f32 	%f982, %f980, 0fBF800000;
	add.f32 	%f971, %f980, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f970,%f971;
	// inline asm
	add.f32 	%f983, %f982, %f982;
	mul.f32 	%f984, %f970, %f983;
	mul.f32 	%f985, %f984, %f984;
	fma.rn.f32 	%f988, %f831, %f985, %f830;
	fma.rn.f32 	%f990, %f988, %f985, %f833;
	mul.rn.f32 	%f991, %f990, %f985;
	mul.rn.f32 	%f992, %f991, %f984;
	sub.f32 	%f993, %f982, %f984;
	neg.f32 	%f994, %f984;
	add.f32 	%f995, %f993, %f993;
	fma.rn.f32 	%f996, %f994, %f982, %f995;
	mul.rn.f32 	%f997, %f970, %f996;
	add.f32 	%f998, %f992, %f984;
	sub.f32 	%f999, %f984, %f998;
	add.f32 	%f1000, %f992, %f999;
	add.f32 	%f1001, %f997, %f1000;
	add.f32 	%f1002, %f998, %f1001;
	sub.f32 	%f1003, %f998, %f1002;
	add.f32 	%f1004, %f1001, %f1003;
	mul.rn.f32 	%f1006, %f981, %f849;
	mul.rn.f32 	%f1008, %f981, %f851;
	add.f32 	%f1009, %f1006, %f1002;
	sub.f32 	%f1010, %f1006, %f1009;
	add.f32 	%f1011, %f1002, %f1010;
	add.f32 	%f1012, %f1004, %f1011;
	add.f32 	%f1013, %f1008, %f1012;
	add.f32 	%f1014, %f1009, %f1013;
	sub.f32 	%f1015, %f1009, %f1014;
	add.f32 	%f1016, %f1013, %f1015;
	mul.rn.f32 	%f1018, %f861, %f1014;
	neg.f32 	%f1019, %f1018;
	fma.rn.f32 	%f1020, %f861, %f1014, %f1019;
	fma.rn.f32 	%f1021, %f861, %f1016, %f1020;
	fma.rn.f32 	%f1023, %f866, %f1014, %f1021;
	add.rn.f32 	%f1024, %f1018, %f1023;
	neg.f32 	%f1025, %f1024;
	add.rn.f32 	%f1026, %f1018, %f1025;
	add.rn.f32 	%f1027, %f1026, %f1023;
	mov.b32 	 %r357, %f1024;
	setp.eq.s32	%p133, %r357, 1118925336;
	add.s32 	%r358, %r357, -1;
	mov.b32 	 %f1028, %r358;
	add.f32 	%f1029, %f1027, 0f37000000;
	selp.f32	%f1030, %f1028, %f1024, %p133;
	selp.f32	%f252, %f1029, %f1027, %p133;
	mul.f32 	%f1031, %f1030, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1032, %f1031;
	fma.rn.f32 	%f1034, %f1032, %f877, %f1030;
	fma.rn.f32 	%f1036, %f1032, %f879, %f1034;
	mul.f32 	%f1037, %f1036, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1038, %f1037;
	add.f32 	%f1039, %f1032, 0f00000000;
	ex2.approx.f32 	%f1040, %f1039;
	mul.f32 	%f1041, %f1038, %f1040;
	setp.lt.f32	%p134, %f1030, 0fC2D20000;
	selp.f32	%f1042, 0f00000000, %f1041, %p134;
	setp.gt.f32	%p135, %f1030, 0f42D20000;
	selp.f32	%f1152, 0f7F800000, %f1042, %p135;
	setp.eq.f32	%p136, %f1152, 0f7F800000;
	@%p136 bra 	BB0_115;

	fma.rn.f32 	%f1152, %f1152, %f252, %f1152;

BB0_115:
	setp.lt.f32	%p137, %f210, 0f00000000;
	and.pred  	%p4, %p137, %p106;
	mov.b32 	 %r359, %f1152;
	xor.b32  	%r360, %r359, -2147483648;
	mov.b32 	 %f1043, %r360;
	selp.f32	%f1154, %f1043, %f1152, %p4;
	setp.eq.f32	%p139, %f210, 0f00000000;
	@%p139 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f1046, %f210, %f210;
	selp.f32	%f1154, %f1046, 0f00000000, %p106;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p140, %f210, 0f00000000;
	@%p140 bra 	BB0_119;

	cvt.rzi.f32.f32	%f1045, %f861;
	setp.neu.f32	%p141, %f1045, 0f3EE66666;
	selp.f32	%f1154, 0f7FFFFFFF, %f1154, %p141;

BB0_119:
	add.f32 	%f1047, %f251, 0f3EE66666;
	mov.b32 	 %r361, %f1047;
	setp.lt.s32	%p143, %r361, 2139095040;
	@%p143 bra 	BB0_124;

	setp.gtu.f32	%p144, %f251, 0f7F800000;
	@%p144 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f1154, %f210, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p145, %f251, 0f7F800000;
	@%p145 bra 	BB0_124;

	selp.f32	%f1154, 0fFF800000, 0f7F800000, %p4;

BB0_124:
	mov.u32 	%r415, 2;
	setp.eq.f32	%p146, %f210, 0f3F800000;
	selp.f32	%f1048, 0f3F800000, %f1154, %p146;
	cvt.u64.u32	%rd105, %r3;
	cvt.u64.u32	%rd104, %r2;
	mov.u64 	%rd108, image;
	cvta.global.u64 	%rd103, %rd108;
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd103, %r415, %r105, %rd104, %rd105, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f1049, %f1048;
	mul.f32 	%f1050, %f1049, 0f437FFD71;
	cvt.rzi.u32.f32	%r364, %f1050;
	cvt.sat.f32.f32	%f1051, %f250;
	mul.f32 	%f1052, %f1051, 0f437FFD71;
	cvt.rzi.u32.f32	%r365, %f1052;
	cvt.sat.f32.f32	%f1053, %f237;
	mul.f32 	%f1054, %f1053, 0f437FFD71;
	cvt.rzi.u32.f32	%r366, %f1054;
	cvt.u16.u32	%rs30, %r364;
	cvt.u16.u32	%rs31, %r366;
	cvt.u16.u32	%rs32, %r365;
	mov.u16 	%rs33, 255;
	st.v4.u8 	[%rd102], {%rs30, %rs32, %rs31, %rs33};
	ld.global.u32 	%r459, [imageEnabled];

BB0_125:
	and.b32  	%r367, %r459, 4;
	setp.eq.s32	%p147, %r367, 0;
	@%p147 bra 	BB0_129;

	ld.global.u32 	%r368, [additive];
	setp.eq.s32	%p148, %r368, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1055, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f1055;}

	// inline asm
	@%p148 bra 	BB0_128;

	mov.u32 	%r416, 2;
	mov.u64 	%rd121, image_HDR;
	cvta.global.u64 	%rd110, %rd121;
	mov.u32 	%r372, 8;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r416, %r372, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd109];
	// inline asm
	{  cvt.f32.f16 %f1056, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1057, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1058, %rs43;}

	// inline asm
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd110, %r416, %r372, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	add.f32 	%f1059, %f208, %f1056;
	add.f32 	%f1060, %f209, %f1057;
	add.f32 	%f1061, %f210, %f1058;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1061;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1060;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f1059;}

	// inline asm
	st.v4.u16 	[%rd115], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_129;

BB0_128:
	mov.u32 	%r417, 2;
	mov.u64 	%rd128, image_HDR;
	cvta.global.u64 	%rd123, %rd128;
	mov.u32 	%r374, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r417, %r374, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f210;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f209;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f208;}

	// inline asm
	st.v4.u16 	[%rd122], {%rs45, %rs46, %rs47, %rs34};

BB0_129:
	ld.global.u8 	%rs48, [imageEnabled];
	and.b16  	%rs49, %rs48, 64;
	setp.eq.s16	%p149, %rs49, 0;
	@%p149 bra 	BB0_151;

	mov.u32 	%r418, 2;
	ld.global.f32 	%f1065, [directDir];
	ld.global.f32 	%f1066, [directDir+4];
	ld.global.f32 	%f1067, [directDir+8];
	cvt.u64.u32	%rd132, %r3;
	cvt.u64.u32	%rd131, %r2;
	mov.u64 	%rd135, image_Dir;
	cvta.global.u64 	%rd130, %rd135;
	// inline asm
	call (%rd129), _rt_buffer_get_64, (%rd130, %r418, %r105, %rd131, %rd132, %rd29, %rd29);
	// inline asm
	fma.rn.f32 	%f1068, %f1065, 0fBF000000, 0f3F000000;
	mul.f32 	%f1069, %f1068, 0f437F0000;
	cvt.rzi.u32.f32	%r377, %f1069;
	fma.rn.f32 	%f1070, %f1066, 0fBF000000, 0f3F000000;
	mul.f32 	%f1071, %f1070, 0f437F0000;
	cvt.rzi.u32.f32	%r378, %f1071;
	fma.rn.f32 	%f1072, %f1067, 0fBF000000, 0f3F000000;
	mul.f32 	%f1073, %f1072, 0f437F0000;
	cvt.rzi.u32.f32	%r379, %f1073;
	cvt.u16.u32	%rs50, %r379;
	cvt.u16.u32	%rs51, %r378;
	cvt.u16.u32	%rs52, %r377;
	mov.u16 	%rs53, 255;
	st.v4.u8 	[%rd129], {%rs52, %rs51, %rs50, %rs53};

BB0_151:
	ret;
}


