//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<146>;
	.reg .b16 	%rs<55>;
	.reg .f32 	%f<936>;
	.reg .b32 	%r<371>;
	.reg .b64 	%rd<163>;


	mov.u64 	%rd162, __local_depot0;
	cvta.local.u64 	%SP, %rd162;
	ld.global.u32 	%r1, [lightMeshBufferSize];
	abs.s32 	%r2, %r1;
	ld.global.u32 	%r3, [samples];
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	cvt.u64.u32	%rd23, %r105;
	cvt.u64.u32	%rd24, %r106;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r103, 2;
	mov.u32 	%r104, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r103, %r104, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r4, [%rd21];
	shr.u32 	%r109, %r4, 16;
	cvt.u16.u32	%rs1, %r109;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r4;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f866, 0f00000000;
	mov.f32 	%f867, %f866;
	mov.f32 	%f868, %f866;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd21+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f205, %rs8;
	div.rn.f32 	%f206, %f205, 0f437F0000;
	fma.rn.f32 	%f207, %f206, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f208, %rs6;
	div.rn.f32 	%f209, %f208, 0f437F0000;
	fma.rn.f32 	%f210, %f209, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f211, %rs3;
	div.rn.f32 	%f212, %f211, 0f437F0000;
	fma.rn.f32 	%f213, %f212, 0f40000000, 0fBF800000;
	mul.f32 	%f214, %f210, %f210;
	fma.rn.f32 	%f215, %f207, %f207, %f214;
	fma.rn.f32 	%f216, %f213, %f213, %f215;
	sqrt.rn.f32 	%f217, %f216;
	rcp.rn.f32 	%f218, %f217;
	mul.f32 	%f866, %f207, %f218;
	mul.f32 	%f867, %f210, %f218;
	mul.f32 	%f868, %f213, %f218;

BB0_2:
	ld.global.v2.u32 	{%r110, %r111}, [pixelID];
	ld.global.v2.u32 	{%r113, %r114}, [tileInfo];
	add.s32 	%r5, %r110, %r113;
	add.s32 	%r6, %r111, %r114;
	setp.eq.f32	%p8, %f867, 0f00000000;
	setp.eq.f32	%p9, %f866, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f868, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_131;
	bra.uni 	BB0_3;

BB0_131:
	ld.global.u32 	%r370, [imageEnabled];
	and.b32  	%r313, %r370, 1;
	setp.eq.b32	%p140, %r313, 1;
	@!%p140 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd116, %r5;
	cvt.u64.u32	%rd117, %r6;
	mov.u64 	%rd120, image;
	cvta.global.u64 	%rd115, %rd120;
	mov.u64 	%rd119, 0;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r103, %r104, %rd116, %rd117, %rd119, %rd119);
	// inline asm
	mov.u16 	%rs36, 0;
	st.v4.u8 	[%rd114], {%rs36, %rs36, %rs36, %rs36};
	ld.global.u32 	%r370, [imageEnabled];

BB0_133:
	and.b32  	%r316, %r370, 8;
	setp.eq.s32	%p141, %r316, 0;
	@%p141 bra 	BB0_135;

	cvt.u64.u32	%rd123, %r5;
	cvt.u64.u32	%rd124, %r6;
	mov.u64 	%rd127, image_Mask;
	cvta.global.u64 	%rd122, %rd127;
	mov.u64 	%rd126, 0;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r103, %r103, %rd123, %rd124, %rd126, %rd126);
	// inline asm
	mov.f32 	%f849, 0f00000000;
	cvt.rzi.u32.f32	%r319, %f849;
	cvt.u16.u32	%rs37, %r319;
	mov.u16 	%rs38, 0;
	st.v2.u8 	[%rd121], {%rs37, %rs38};
	ld.global.u32 	%r370, [imageEnabled];

BB0_135:
	and.b32  	%r320, %r370, 4;
	setp.eq.s32	%p142, %r320, 0;
	@%p142 bra 	BB0_139;

	ld.global.u32 	%r321, [additive];
	setp.eq.s32	%p143, %r321, 0;
	cvt.u64.u32	%rd19, %r5;
	cvt.u64.u32	%rd20, %r6;
	@%p143 bra 	BB0_138;

	mov.u64 	%rd140, image_HDR;
	cvta.global.u64 	%rd129, %rd140;
	mov.u32 	%r325, 8;
	mov.u64 	%rd139, 0;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r103, %r325, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	ld.v4.u16 	{%rs45, %rs46, %rs47, %rs48}, [%rd128];
	// inline asm
	{  cvt.f32.f16 %f850, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f851, %rs46;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f852, %rs47;}

	// inline asm
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd129, %r103, %r325, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	add.f32 	%f853, %f850, 0f00000000;
	add.f32 	%f854, %f851, 0f00000000;
	add.f32 	%f855, %f852, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f855;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f854;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f853;}

	// inline asm
	mov.u16 	%rs49, 0;
	st.v4.u16 	[%rd134], {%rs42, %rs43, %rs44, %rs49};
	bra.uni 	BB0_139;

BB0_3:
	ld.global.v2.u32 	{%r123, %r124}, [pixelID];
	cvt.u64.u32	%rd30, %r123;
	cvt.u64.u32	%rd31, %r124;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r119, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r103, %r119, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f224, %f7, 0f3456BF95;
	mul.f32 	%f225, %f8, 0f3456BF95;
	mul.f32 	%f226, %f9, 0f3456BF95;
	abs.f32 	%f10, %f866;
	div.rn.f32 	%f227, %f224, %f10;
	abs.f32 	%f228, %f867;
	div.rn.f32 	%f229, %f225, %f228;
	abs.f32 	%f11, %f868;
	div.rn.f32 	%f230, %f226, %f11;
	abs.f32 	%f231, %f227;
	abs.f32 	%f232, %f229;
	abs.f32 	%f233, %f230;
	mov.f32 	%f234, 0f38D1B717;
	max.f32 	%f235, %f231, %f234;
	max.f32 	%f236, %f232, %f234;
	max.f32 	%f237, %f233, %f234;
	fma.rn.f32 	%f12, %f866, %f235, %f7;
	fma.rn.f32 	%f13, %f867, %f236, %f8;
	fma.rn.f32 	%f14, %f868, %f237, %f9;
	ld.global.v2.u32 	{%r127, %r128}, [pixelID];
	cvt.u64.u32	%rd36, %r127;
	cvt.u64.u32	%rd37, %r128;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r103, %r104, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r131, [%rd34];
	mad.lo.s32 	%r7, %r131, 1664525, 1013904223;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r9, 0;
	setp.lt.s32	%p14, %r2, 1;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r134, %r7, 16777215;
	cvt.rn.f32.u32	%f243, %r134;
	mul.f32 	%f244, %f243, 0fB3800000;
	fma.rn.f32 	%f19, %f244, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r339, 0;
	abs.f32 	%f367, %f17;
	abs.f32 	%f368, %f16;
	max.f32 	%f369, %f368, %f367;
	abs.f32 	%f370, %f18;
	max.f32 	%f371, %f369, %f370;
	mov.u32 	%r9, %r339;
	mov.f32 	%f21, %f20;
	mov.f32 	%f889, %f20;
	mov.f32 	%f890, %f20;
	mov.f32 	%f891, %f20;

BB0_6:
	shl.b32 	%r10, %r339, 1;
	cvt.s64.s32	%rd44, %r10;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r135, 1;
	mov.u64 	%rd47, 0;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r135, %r119, %rd44, %rd47, %rd47, %rd47);
	// inline asm
	ld.f32 	%f245, [%rd42];
	sub.f32 	%f246, %f245, %f7;
	ld.f32 	%f247, [%rd42+4];
	sub.f32 	%f248, %f247, %f8;
	ld.f32 	%f249, [%rd42+8];
	sub.f32 	%f250, %f249, %f9;
	mul.f32 	%f251, %f248, %f248;
	fma.rn.f32 	%f252, %f246, %f246, %f251;
	fma.rn.f32 	%f253, %f250, %f250, %f252;
	sqrt.rn.f32 	%f25, %f253;
	rcp.rn.f32 	%f254, %f25;
	mul.f32 	%f26, %f246, %f254;
	mul.f32 	%f27, %f248, %f254;
	mul.f32 	%f28, %f250, %f254;
	mul.f32 	%f255, %f867, %f27;
	fma.rn.f32 	%f256, %f866, %f26, %f255;
	fma.rn.f32 	%f29, %f868, %f28, %f256;
	setp.leu.f32	%p15, %f29, 0f00000000;
	@%p15 bra 	BB0_22;

	setp.ne.s32	%p17, %r3, 0;
	mul.f32 	%f257, %f25, %f25;
	mul.f32 	%f258, %f257, 0f40C90FDB;
	div.rn.f32 	%f259, %f15, %f258;
	add.f32 	%f30, %f259, %f259;
	setp.gt.f32	%p18, %f30, %f19;
	and.pred  	%p19, %p17, %p18;
	mov.pred 	%p145, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f262, [lightInvCutoff];
	mul.f32 	%f31, %f25, %f262;
	mov.f32 	%f266, 0f40800000;
	abs.f32 	%f33, %f31;
	setp.lt.f32	%p20, %f33, 0f00800000;
	mul.f32 	%f268, %f33, 0f4B800000;
	selp.f32	%f269, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f270, %f268, %f33, %p20;
	mov.b32 	 %r137, %f270;
	and.b32  	%r138, %r137, 8388607;
	or.b32  	%r139, %r138, 1065353216;
	mov.b32 	 %f271, %r139;
	shr.u32 	%r140, %r137, 23;
	cvt.rn.f32.u32	%f272, %r140;
	add.f32 	%f273, %f269, %f272;
	setp.gt.f32	%p21, %f271, 0f3FB504F3;
	mul.f32 	%f274, %f271, 0f3F000000;
	add.f32 	%f275, %f273, 0f3F800000;
	selp.f32	%f276, %f274, %f271, %p21;
	selp.f32	%f277, %f275, %f273, %p21;
	add.f32 	%f278, %f276, 0fBF800000;
	add.f32 	%f261, %f276, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f260,%f261;
	// inline asm
	add.f32 	%f279, %f278, %f278;
	mul.f32 	%f280, %f260, %f279;
	mul.f32 	%f281, %f280, %f280;
	mov.f32 	%f282, 0f3C4CAF63;
	mov.f32 	%f283, 0f3B18F0FE;
	fma.rn.f32 	%f284, %f283, %f281, %f282;
	mov.f32 	%f285, 0f3DAAAABD;
	fma.rn.f32 	%f286, %f284, %f281, %f285;
	mul.rn.f32 	%f287, %f286, %f281;
	mul.rn.f32 	%f288, %f287, %f280;
	sub.f32 	%f289, %f278, %f280;
	neg.f32 	%f290, %f280;
	add.f32 	%f291, %f289, %f289;
	fma.rn.f32 	%f292, %f290, %f278, %f291;
	mul.rn.f32 	%f293, %f260, %f292;
	add.f32 	%f294, %f288, %f280;
	sub.f32 	%f295, %f280, %f294;
	add.f32 	%f296, %f288, %f295;
	add.f32 	%f297, %f293, %f296;
	add.f32 	%f298, %f294, %f297;
	sub.f32 	%f299, %f294, %f298;
	add.f32 	%f300, %f297, %f299;
	mov.f32 	%f301, 0f3F317200;
	mul.rn.f32 	%f302, %f277, %f301;
	mov.f32 	%f303, 0f35BFBE8E;
	mul.rn.f32 	%f304, %f277, %f303;
	add.f32 	%f305, %f302, %f298;
	sub.f32 	%f306, %f302, %f305;
	add.f32 	%f307, %f298, %f306;
	add.f32 	%f308, %f300, %f307;
	add.f32 	%f309, %f304, %f308;
	add.f32 	%f310, %f305, %f309;
	sub.f32 	%f311, %f305, %f310;
	add.f32 	%f312, %f309, %f311;
	mul.rn.f32 	%f313, %f266, %f310;
	neg.f32 	%f314, %f313;
	fma.rn.f32 	%f315, %f266, %f310, %f314;
	fma.rn.f32 	%f316, %f266, %f312, %f315;
	mov.f32 	%f317, 0f00000000;
	fma.rn.f32 	%f318, %f317, %f310, %f316;
	add.rn.f32 	%f319, %f313, %f318;
	neg.f32 	%f320, %f319;
	add.rn.f32 	%f321, %f313, %f320;
	add.rn.f32 	%f322, %f321, %f318;
	mov.b32 	 %r141, %f319;
	setp.eq.s32	%p22, %r141, 1118925336;
	add.s32 	%r142, %r141, -1;
	mov.b32 	 %f323, %r142;
	add.f32 	%f324, %f322, 0f37000000;
	selp.f32	%f325, %f323, %f319, %p22;
	selp.f32	%f34, %f324, %f322, %p22;
	mul.f32 	%f326, %f325, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f327, %f326;
	mov.f32 	%f328, 0fBF317200;
	fma.rn.f32 	%f329, %f327, %f328, %f325;
	mov.f32 	%f330, 0fB5BFBE8E;
	fma.rn.f32 	%f331, %f327, %f330, %f329;
	mul.f32 	%f332, %f331, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f333, %f332;
	add.f32 	%f334, %f327, 0f00000000;
	ex2.approx.f32 	%f335, %f334;
	mul.f32 	%f336, %f333, %f335;
	setp.lt.f32	%p23, %f325, 0fC2D20000;
	selp.f32	%f337, 0f00000000, %f336, %p23;
	setp.gt.f32	%p24, %f325, 0f42D20000;
	selp.f32	%f874, 0f7F800000, %f337, %p24;
	setp.eq.f32	%p25, %f874, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f874, %f874, %f34, %f874;

BB0_10:
	mov.f32 	%f862, 0f40000000;
	cvt.rzi.f32.f32	%f861, %f862;
	add.f32 	%f860, %f861, %f861;
	mov.f32 	%f859, 0f40800000;
	sub.f32 	%f858, %f859, %f860;
	abs.f32 	%f857, %f858;
	setp.lt.f32	%p26, %f31, 0f00000000;
	setp.eq.f32	%p27, %f857, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r143, %f874;
	xor.b32  	%r144, %r143, -2147483648;
	mov.b32 	 %f338, %r144;
	selp.f32	%f876, %f338, %f874, %p1;
	setp.eq.f32	%p28, %f31, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f341, %f31, %f31;
	selp.f32	%f876, %f341, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f31, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f865, 0f40800000;
	cvt.rzi.f32.f32	%f340, %f865;
	setp.neu.f32	%p30, %f340, 0f40800000;
	selp.f32	%f876, 0f7FFFFFFF, %f876, %p30;

BB0_14:
	add.f32 	%f342, %f33, 0f40800000;
	mov.b32 	 %r145, %f342;
	setp.lt.s32	%p32, %r145, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f33, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f876, %f31, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f33, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f876, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u64 	%rd157, 0;
	mov.u32 	%r331, 1;
	mov.u64 	%rd156, lightMeshBuffer;
	cvta.global.u64 	%rd155, %rd156;
	shl.b32 	%r330, %r339, 1;
	mov.f32 	%f343, 0f3F800000;
	sub.f32 	%f344, %f343, %f876;
	setp.eq.f32	%p35, %f31, 0f3F800000;
	selp.f32	%f345, 0f00000000, %f344, %p35;
	cvt.sat.f32.f32	%f346, %f345;
	mul.f32 	%f347, %f30, %f346;
	add.s32 	%r148, %r330, 1;
	cvt.s64.s32	%rd51, %r148;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd155, %r331, %r119, %rd51, %rd157, %rd157, %rd157);
	// inline asm
	ld.f32 	%f348, [%rd49];
	mul.f32 	%f349, %f26, %f348;
	ld.f32 	%f350, [%rd49+4];
	mul.f32 	%f351, %f27, %f350;
	neg.f32 	%f352, %f351;
	sub.f32 	%f353, %f352, %f349;
	ld.f32 	%f354, [%rd49+8];
	mul.f32 	%f355, %f28, %f354;
	sub.f32 	%f356, %f353, %f355;
	cvt.sat.f32.f32	%f357, %f356;
	mul.f32 	%f45, %f347, %f357;
	cvt.sat.f32.f32	%f46, %f29;
	mul.f32 	%f358, %f45, %f46;
	setp.leu.f32	%p36, %f358, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r338, 1;
	add.u64 	%rd56, %SP, 28;
	cvta.to.local.u64 	%rd57, %rd56;
	max.f32 	%f365, %f371, %f234;
	sub.f32 	%f366, %f25, %f365;
	mov.u32 	%r152, 1065353216;
	st.local.u32 	[%rd57], %r152;
	ld.global.u32 	%r149, [root];
	// inline asm
	call _rt_trace_64, (%r149, %f12, %f13, %f14, %f26, %f27, %f28, %r338, %f365, %f366, %rd56, %r104);
	// inline asm
	ld.local.f32 	%f373, [%rd57];
	mul.f32 	%f374, %f45, %f373;
	fma.rn.f32 	%f21, %f46, %f374, %f21;
	add.f32 	%f20, %f20, %f373;
	fma.rn.f32 	%f891, %f26, %f373, %f891;
	fma.rn.f32 	%f890, %f27, %f373, %f890;
	fma.rn.f32 	%f889, %f28, %f373, %f889;

BB0_21:
	add.s32 	%r9, %r9, 1;

BB0_22:
	add.s32 	%r339, %r339, 1;
	setp.lt.s32	%p38, %r339, %r2;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f889, %f20;
	mov.f32 	%f890, %f20;
	mov.f32 	%f891, %f20;

BB0_23:
	mov.pred 	%p145, %p13;

BB0_24:
	cvt.rn.f32.s32	%f375, %r9;
	mov.f32 	%f376, 0f3F800000;
	max.f32 	%f377, %f375, %f376;
	div.rn.f32 	%f922, %f21, %f377;
	div.rn.f32 	%f923, %f20, %f377;
	@!%p145 bra 	BB0_77;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f864, %f868;
	abs.f32 	%f863, %f866;
	setp.gt.f32	%p39, %f863, %f864;
	neg.f32 	%f383, %f867;
	selp.f32	%f384, %f383, 0f00000000, %p39;
	neg.f32 	%f385, %f868;
	selp.f32	%f386, %f866, %f385, %p39;
	selp.f32	%f387, 0f00000000, %f867, %p39;
	mul.f32 	%f388, %f386, %f386;
	fma.rn.f32 	%f389, %f384, %f384, %f388;
	fma.rn.f32 	%f390, %f387, %f387, %f389;
	sqrt.rn.f32 	%f391, %f390;
	rcp.rn.f32 	%f392, %f391;
	mul.f32 	%f69, %f384, %f392;
	mul.f32 	%f70, %f386, %f392;
	mul.f32 	%f71, %f387, %f392;
	mov.f32 	%f897, 0f00000000;
	setp.lt.s32	%p40, %r3, 1;
	mov.f32 	%f898, %f897;
	mov.f32 	%f889, %f897;
	mov.f32 	%f890, %f897;
	mov.f32 	%f891, %f897;
	@%p40 bra 	BB0_76;

	mad.lo.s32 	%r346, %r131, 1664525, 1013904223;
	cvt.rn.f32.s32	%f398, %r3;
	rcp.rn.f32 	%f72, %f398;
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd58;
	mul.f32 	%f73, %f12, 0f3456BF95;
	mul.f32 	%f74, %f13, 0f3456BF95;
	mul.f32 	%f75, %f14, 0f3456BF95;
	add.u64 	%rd59, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd59;
	mul.f32 	%f399, %f866, %f70;
	mul.f32 	%f400, %f867, %f69;
	sub.f32 	%f76, %f400, %f399;
	mul.f32 	%f401, %f868, %f69;
	mul.f32 	%f402, %f866, %f71;
	sub.f32 	%f77, %f402, %f401;
	mul.f32 	%f403, %f867, %f71;
	mul.f32 	%f404, %f868, %f70;
	sub.f32 	%f78, %f404, %f403;
	mov.f32 	%f897, 0f00000000;
	mov.u32 	%r153, 0;
	abs.f32 	%f405, %f74;
	abs.f32 	%f406, %f73;
	max.f32 	%f407, %f406, %f405;
	abs.f32 	%f408, %f75;
	max.f32 	%f409, %f407, %f408;
	mov.u32 	%r343, %r153;
	mov.f32 	%f898, %f897;
	mov.f32 	%f889, %f897;
	mov.f32 	%f890, %f897;
	mov.f32 	%f891, %f897;

BB0_27:
	cvt.rn.f32.s32	%f84, %r343;
	max.f32 	%f85, %f409, %f234;
	mov.u32 	%r345, %r153;

BB0_28:
	mad.lo.s32 	%r155, %r346, 1664525, 1013904223;
	and.b32  	%r156, %r155, 16777215;
	cvt.rn.f32.u32	%f411, %r156;
	fma.rn.f32 	%f412, %f411, 0f33800000, %f84;
	mul.f32 	%f91, %f72, %f412;
	mad.lo.s32 	%r346, %r155, 1664525, 1013904223;
	and.b32  	%r157, %r346, 16777215;
	cvt.rn.f32.u32	%f413, %r157;
	cvt.rn.f32.s32	%f414, %r345;
	fma.rn.f32 	%f415, %f413, 0f33800000, %f414;
	mul.f32 	%f416, %f72, %f415;
	mul.f32 	%f417, %f91, %f91;
	sub.f32 	%f419, %f376, %f417;
	mov.f32 	%f420, 0f00000000;
	max.f32 	%f421, %f420, %f419;
	sqrt.rn.f32 	%f92, %f421;
	mul.f32 	%f908, %f416, 0f40C90FDB;
	abs.f32 	%f94, %f908;
	setp.neu.f32	%p41, %f94, 0f7F800000;
	mov.f32 	%f902, %f908;
	@%p41 bra 	BB0_30;

	mul.rn.f32 	%f902, %f908, %f420;

BB0_30:
	mul.f32 	%f423, %f902, 0f3F22F983;
	cvt.rni.s32.f32	%r356, %f423;
	cvt.rn.f32.s32	%f424, %r356;
	neg.f32 	%f425, %f424;
	mov.f32 	%f426, 0f3FC90FDA;
	fma.rn.f32 	%f427, %f425, %f426, %f902;
	mov.f32 	%f428, 0f33A22168;
	fma.rn.f32 	%f429, %f425, %f428, %f427;
	mov.f32 	%f430, 0f27C234C5;
	fma.rn.f32 	%f903, %f425, %f430, %f429;
	abs.f32 	%f431, %f902;
	setp.leu.f32	%p42, %f431, 0f47CE4780;
	@%p42 bra 	BB0_41;

	mov.b32 	 %r21, %f902;
	shr.u32 	%r22, %r21, 23;
	shl.b32 	%r160, %r21, 8;
	or.b32  	%r23, %r160, -2147483648;
	mov.u32 	%r347, 0;
	mov.u64 	%rd159, 0;
	mov.u64 	%rd158, %rd2;
	mov.u32 	%r348, %r347;

BB0_32:
	.pragma "nounroll";
	shl.b64 	%rd61, %rd159, 2;
	mov.u64 	%rd62, __cudart_i2opi_f;
	add.s64 	%rd63, %rd62, %rd61;
	ld.const.u32 	%r163, [%rd63];
	// inline asm
	{
	mad.lo.cc.u32   %r161, %r163, %r23, %r348;
	madc.hi.u32     %r348, %r163, %r23,  0;
	}
	// inline asm
	st.local.u32 	[%rd158], %r161;
	add.s32 	%r347, %r347, 1;
	cvt.s64.s32	%rd159, %r347;
	mul.wide.s32 	%rd64, %r347, 4;
	add.s64 	%rd158, %rd2, %rd64;
	setp.ne.s32	%p43, %r347, 6;
	@%p43 bra 	BB0_32;

	and.b32  	%r166, %r22, 255;
	add.s32 	%r167, %r166, -128;
	shr.u32 	%r168, %r167, 5;
	and.b32  	%r28, %r21, -2147483648;
	st.local.u32 	[%rd2+24], %r348;
	mov.u32 	%r169, 6;
	sub.s32 	%r170, %r169, %r168;
	mul.wide.s32 	%rd65, %r170, 4;
	add.s64 	%rd9, %rd2, %rd65;
	ld.local.u32 	%r349, [%rd9];
	ld.local.u32 	%r350, [%rd9+-4];
	and.b32  	%r31, %r22, 31;
	setp.eq.s32	%p44, %r31, 0;
	@%p44 bra 	BB0_35;

	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r31;
	shr.u32 	%r173, %r350, %r172;
	shl.b32 	%r174, %r349, %r31;
	add.s32 	%r349, %r173, %r174;
	ld.local.u32 	%r175, [%rd9+-8];
	shr.u32 	%r176, %r175, %r172;
	shl.b32 	%r177, %r350, %r31;
	add.s32 	%r350, %r176, %r177;

BB0_35:
	shr.u32 	%r178, %r350, 30;
	shl.b32 	%r179, %r349, 2;
	add.s32 	%r351, %r178, %r179;
	shl.b32 	%r37, %r350, 2;
	shr.u32 	%r180, %r351, 31;
	shr.u32 	%r181, %r349, 30;
	add.s32 	%r38, %r180, %r181;
	setp.eq.s32	%p45, %r180, 0;
	@%p45 bra 	BB0_36;
	bra.uni 	BB0_37;

BB0_36:
	mov.u32 	%r352, %r28;
	mov.u32 	%r353, %r37;
	bra.uni 	BB0_38;

BB0_37:
	not.b32 	%r182, %r351;
	neg.s32 	%r353, %r37;
	setp.eq.s32	%p46, %r37, 0;
	selp.u32	%r183, 1, 0, %p46;
	add.s32 	%r351, %r183, %r182;
	xor.b32  	%r352, %r28, -2147483648;

BB0_38:
	clz.b32 	%r355, %r351;
	setp.eq.s32	%p47, %r355, 0;
	shl.b32 	%r184, %r351, %r355;
	mov.u32 	%r185, 32;
	sub.s32 	%r186, %r185, %r355;
	shr.u32 	%r187, %r353, %r186;
	add.s32 	%r188, %r187, %r184;
	selp.b32	%r46, %r351, %r188, %p47;
	mov.u32 	%r189, -921707870;
	mul.hi.u32 	%r354, %r46, %r189;
	setp.eq.s32	%p48, %r28, 0;
	neg.s32 	%r190, %r38;
	selp.b32	%r356, %r38, %r190, %p48;
	setp.lt.s32	%p49, %r354, 1;
	@%p49 bra 	BB0_40;

	mul.lo.s32 	%r191, %r46, -921707870;
	shr.u32 	%r192, %r191, 31;
	shl.b32 	%r193, %r354, 1;
	add.s32 	%r354, %r192, %r193;
	add.s32 	%r355, %r355, 1;

BB0_40:
	mov.u32 	%r194, 126;
	sub.s32 	%r195, %r194, %r355;
	shl.b32 	%r196, %r195, 23;
	add.s32 	%r197, %r354, 1;
	shr.u32 	%r198, %r197, 7;
	add.s32 	%r199, %r198, 1;
	shr.u32 	%r200, %r199, 1;
	add.s32 	%r201, %r200, %r196;
	or.b32  	%r202, %r201, %r352;
	mov.b32 	 %f903, %r202;

BB0_41:
	mul.rn.f32 	%f100, %f903, %f903;
	add.s32 	%r54, %r356, 1;
	and.b32  	%r55, %r54, 1;
	setp.eq.s32	%p50, %r55, 0;
	@%p50 bra 	BB0_43;
	bra.uni 	BB0_42;

BB0_43:
	mov.f32 	%f434, 0f3C08839E;
	mov.f32 	%f435, 0fB94CA1F9;
	fma.rn.f32 	%f904, %f435, %f100, %f434;
	bra.uni 	BB0_44;

BB0_42:
	mov.f32 	%f432, 0fBAB6061A;
	mov.f32 	%f433, 0f37CCF5CE;
	fma.rn.f32 	%f904, %f433, %f100, %f432;

BB0_44:
	@%p50 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f439, 0fBE2AAAA3;
	fma.rn.f32 	%f440, %f904, %f100, %f439;
	fma.rn.f32 	%f905, %f440, %f100, %f420;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f436, 0f3D2AAAA5;
	fma.rn.f32 	%f437, %f904, %f100, %f436;
	mov.f32 	%f438, 0fBF000000;
	fma.rn.f32 	%f905, %f437, %f100, %f438;

BB0_47:
	fma.rn.f32 	%f906, %f905, %f903, %f903;
	@%p50 bra 	BB0_49;

	fma.rn.f32 	%f906, %f905, %f100, %f376;

BB0_49:
	and.b32  	%r203, %r54, 2;
	setp.eq.s32	%p53, %r203, 0;
	@%p53 bra 	BB0_51;

	mov.f32 	%f444, 0fBF800000;
	fma.rn.f32 	%f906, %f906, %f444, %f420;

BB0_51:
	@%p41 bra 	BB0_53;

	mul.rn.f32 	%f908, %f908, %f420;

BB0_53:
	mul.f32 	%f446, %f908, 0f3F22F983;
	cvt.rni.s32.f32	%r366, %f446;
	cvt.rn.f32.s32	%f447, %r366;
	neg.f32 	%f448, %f447;
	fma.rn.f32 	%f450, %f448, %f426, %f908;
	fma.rn.f32 	%f452, %f448, %f428, %f450;
	fma.rn.f32 	%f909, %f448, %f430, %f452;
	abs.f32 	%f454, %f908;
	setp.leu.f32	%p55, %f454, 0f47CE4780;
	@%p55 bra 	BB0_64;

	mov.b32 	 %r57, %f908;
	shr.u32 	%r58, %r57, 23;
	shl.b32 	%r206, %r57, 8;
	or.b32  	%r59, %r206, -2147483648;
	mov.u32 	%r357, 0;
	mov.u64 	%rd160, %rd2;
	mov.u64 	%rd161, %rd26;
	mov.u32 	%r358, %r357;

BB0_55:
	.pragma "nounroll";
	shl.b64 	%rd67, %rd161, 2;
	mov.u64 	%rd68, __cudart_i2opi_f;
	add.s64 	%rd69, %rd68, %rd67;
	ld.const.u32 	%r209, [%rd69];
	// inline asm
	{
	mad.lo.cc.u32   %r207, %r209, %r59, %r358;
	madc.hi.u32     %r358, %r209, %r59,  0;
	}
	// inline asm
	st.local.u32 	[%rd160], %r207;
	add.s32 	%r357, %r357, 1;
	cvt.s64.s32	%rd161, %r357;
	mul.wide.s32 	%rd70, %r357, 4;
	add.s64 	%rd160, %rd2, %rd70;
	setp.ne.s32	%p56, %r357, 6;
	@%p56 bra 	BB0_55;

	and.b32  	%r212, %r58, 255;
	add.s32 	%r213, %r212, -128;
	shr.u32 	%r214, %r213, 5;
	and.b32  	%r64, %r57, -2147483648;
	st.local.u32 	[%rd2+24], %r358;
	mov.u32 	%r215, 6;
	sub.s32 	%r216, %r215, %r214;
	mul.wide.s32 	%rd71, %r216, 4;
	add.s64 	%rd15, %rd2, %rd71;
	ld.local.u32 	%r359, [%rd15];
	ld.local.u32 	%r360, [%rd15+-4];
	and.b32  	%r67, %r58, 31;
	setp.eq.s32	%p57, %r67, 0;
	@%p57 bra 	BB0_58;

	mov.u32 	%r217, 32;
	sub.s32 	%r218, %r217, %r67;
	shr.u32 	%r219, %r360, %r218;
	shl.b32 	%r220, %r359, %r67;
	add.s32 	%r359, %r219, %r220;
	ld.local.u32 	%r221, [%rd15+-8];
	shr.u32 	%r222, %r221, %r218;
	shl.b32 	%r223, %r360, %r67;
	add.s32 	%r360, %r222, %r223;

BB0_58:
	shr.u32 	%r224, %r360, 30;
	shl.b32 	%r225, %r359, 2;
	add.s32 	%r361, %r224, %r225;
	shl.b32 	%r73, %r360, 2;
	shr.u32 	%r226, %r361, 31;
	shr.u32 	%r227, %r359, 30;
	add.s32 	%r74, %r226, %r227;
	setp.eq.s32	%p58, %r226, 0;
	@%p58 bra 	BB0_59;
	bra.uni 	BB0_60;

BB0_59:
	mov.u32 	%r362, %r64;
	mov.u32 	%r363, %r73;
	bra.uni 	BB0_61;

BB0_60:
	not.b32 	%r228, %r361;
	neg.s32 	%r363, %r73;
	setp.eq.s32	%p59, %r73, 0;
	selp.u32	%r229, 1, 0, %p59;
	add.s32 	%r361, %r229, %r228;
	xor.b32  	%r362, %r64, -2147483648;

BB0_61:
	clz.b32 	%r365, %r361;
	setp.eq.s32	%p60, %r365, 0;
	shl.b32 	%r230, %r361, %r365;
	mov.u32 	%r231, 32;
	sub.s32 	%r232, %r231, %r365;
	shr.u32 	%r233, %r363, %r232;
	add.s32 	%r234, %r233, %r230;
	selp.b32	%r82, %r361, %r234, %p60;
	mov.u32 	%r235, -921707870;
	mul.hi.u32 	%r364, %r82, %r235;
	setp.eq.s32	%p61, %r64, 0;
	neg.s32 	%r236, %r74;
	selp.b32	%r366, %r74, %r236, %p61;
	setp.lt.s32	%p62, %r364, 1;
	@%p62 bra 	BB0_63;

	mul.lo.s32 	%r237, %r82, -921707870;
	shr.u32 	%r238, %r237, 31;
	shl.b32 	%r239, %r364, 1;
	add.s32 	%r364, %r238, %r239;
	add.s32 	%r365, %r365, 1;

BB0_63:
	mov.u32 	%r240, 126;
	sub.s32 	%r241, %r240, %r365;
	shl.b32 	%r242, %r241, 23;
	add.s32 	%r243, %r364, 1;
	shr.u32 	%r244, %r243, 7;
	add.s32 	%r245, %r244, 1;
	shr.u32 	%r246, %r245, 1;
	add.s32 	%r247, %r246, %r242;
	or.b32  	%r248, %r247, %r362;
	mov.b32 	 %f909, %r248;

BB0_64:
	mul.rn.f32 	%f117, %f909, %f909;
	and.b32  	%r90, %r366, 1;
	setp.eq.s32	%p63, %r90, 0;
	@%p63 bra 	BB0_66;
	bra.uni 	BB0_65;

BB0_66:
	mov.f32 	%f457, 0f3C08839E;
	mov.f32 	%f458, 0fB94CA1F9;
	fma.rn.f32 	%f910, %f458, %f117, %f457;
	bra.uni 	BB0_67;

BB0_65:
	mov.f32 	%f455, 0fBAB6061A;
	mov.f32 	%f456, 0f37CCF5CE;
	fma.rn.f32 	%f910, %f456, %f117, %f455;

BB0_67:
	@%p63 bra 	BB0_69;
	bra.uni 	BB0_68;

BB0_69:
	mov.f32 	%f462, 0fBE2AAAA3;
	fma.rn.f32 	%f463, %f910, %f117, %f462;
	fma.rn.f32 	%f911, %f463, %f117, %f420;
	bra.uni 	BB0_70;

BB0_68:
	mov.f32 	%f459, 0f3D2AAAA5;
	fma.rn.f32 	%f460, %f910, %f117, %f459;
	mov.f32 	%f461, 0fBF000000;
	fma.rn.f32 	%f911, %f460, %f117, %f461;

BB0_70:
	fma.rn.f32 	%f912, %f911, %f909, %f909;
	@%p63 bra 	BB0_72;

	fma.rn.f32 	%f912, %f911, %f117, %f376;

BB0_72:
	and.b32  	%r249, %r366, 2;
	setp.eq.s32	%p66, %r249, 0;
	@%p66 bra 	BB0_74;

	mov.f32 	%f467, 0fBF800000;
	fma.rn.f32 	%f912, %f912, %f467, %f420;

BB0_74:
	mul.f32 	%f476, %f92, %f906;
	mul.f32 	%f477, %f92, %f912;
	mul.f32 	%f478, %f69, %f477;
	mul.f32 	%f479, %f70, %f477;
	mul.f32 	%f480, %f71, %f477;
	fma.rn.f32 	%f481, %f78, %f476, %f478;
	fma.rn.f32 	%f482, %f77, %f476, %f479;
	fma.rn.f32 	%f483, %f76, %f476, %f480;
	fma.rn.f32 	%f471, %f866, %f91, %f481;
	fma.rn.f32 	%f472, %f867, %f91, %f482;
	fma.rn.f32 	%f473, %f868, %f91, %f483;
	mov.u32 	%r251, 0;
	st.local.u32 	[%rd3], %r251;
	ld.global.u32 	%r250, [root];
	mov.f32 	%f475, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r250, %f12, %f13, %f14, %f471, %f472, %f473, %r251, %f85, %f475, %rd59, %r104);
	// inline asm
	ld.local.f32 	%f484, [%rd3];
	setp.lt.f32	%p67, %f484, 0f00000000;
	selp.f32	%f485, 0f00000000, %f484, %p67;
	selp.f32	%f486, 0f00000000, 0f3F800000, %p67;
	fma.rn.f32 	%f891, %f471, %f486, %f891;
	fma.rn.f32 	%f890, %f472, %f486, %f890;
	fma.rn.f32 	%f889, %f473, %f486, %f889;
	add.f32 	%f897, %f897, %f486;
	mul.f32 	%f487, %f867, %f472;
	fma.rn.f32 	%f488, %f866, %f471, %f487;
	fma.rn.f32 	%f489, %f868, %f473, %f488;
	cvt.sat.f32.f32	%f490, %f489;
	fma.rn.f32 	%f898, %f485, %f490, %f898;
	add.s32 	%r345, %r345, 1;
	setp.lt.s32	%p68, %r345, %r3;
	@%p68 bra 	BB0_28;

	add.s32 	%r343, %r343, 1;
	setp.lt.s32	%p69, %r343, %r3;
	@%p69 bra 	BB0_27;

BB0_76:
	mul.lo.s32 	%r253, %r3, %r3;
	cvt.rn.f32.s32	%f491, %r253;
	div.rn.f32 	%f492, %f898, %f491;
	div.rn.f32 	%f923, %f897, %f491;
	add.f32 	%f922, %f492, %f492;

BB0_77:
	setp.gt.s32	%p70, %r1, -1;
	selp.f32	%f146, %f923, %f922, %p70;
	ld.global.u32 	%r368, [imageEnabled];
	and.b32  	%r254, %r368, 8;
	setp.eq.s32	%p71, %r254, 0;
	@%p71 bra 	BB0_90;

	mov.u32 	%r332, 2;
	cvt.u64.u32	%rd75, %r5;
	cvt.u64.u32	%rd76, %r6;
	mov.u64 	%rd79, image_Mask;
	cvta.global.u64 	%rd74, %rd79;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r332, %r332, %rd75, %rd76, %rd26, %rd26);
	// inline asm
	mov.f32 	%f495, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f496, %f495;
	fma.rn.f32 	%f497, %f496, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f147, %f497;
	abs.f32 	%f148, %f146;
	setp.lt.f32	%p72, %f148, 0f00800000;
	mul.f32 	%f498, %f148, 0f4B800000;
	selp.f32	%f499, 0fC3170000, 0fC2FE0000, %p72;
	selp.f32	%f500, %f498, %f148, %p72;
	mov.b32 	 %r257, %f500;
	and.b32  	%r258, %r257, 8388607;
	or.b32  	%r259, %r258, 1065353216;
	mov.b32 	 %f501, %r259;
	shr.u32 	%r260, %r257, 23;
	cvt.rn.f32.u32	%f502, %r260;
	add.f32 	%f503, %f499, %f502;
	setp.gt.f32	%p73, %f501, 0f3FB504F3;
	mul.f32 	%f504, %f501, 0f3F000000;
	add.f32 	%f505, %f503, 0f3F800000;
	selp.f32	%f506, %f504, %f501, %p73;
	selp.f32	%f507, %f505, %f503, %p73;
	add.f32 	%f508, %f506, 0fBF800000;
	add.f32 	%f494, %f506, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f493,%f494;
	// inline asm
	add.f32 	%f509, %f508, %f508;
	mul.f32 	%f510, %f493, %f509;
	mul.f32 	%f511, %f510, %f510;
	mov.f32 	%f512, 0f3C4CAF63;
	mov.f32 	%f513, 0f3B18F0FE;
	fma.rn.f32 	%f514, %f513, %f511, %f512;
	mov.f32 	%f515, 0f3DAAAABD;
	fma.rn.f32 	%f516, %f514, %f511, %f515;
	mul.rn.f32 	%f517, %f516, %f511;
	mul.rn.f32 	%f518, %f517, %f510;
	sub.f32 	%f519, %f508, %f510;
	neg.f32 	%f520, %f510;
	add.f32 	%f521, %f519, %f519;
	fma.rn.f32 	%f522, %f520, %f508, %f521;
	mul.rn.f32 	%f523, %f493, %f522;
	add.f32 	%f524, %f518, %f510;
	sub.f32 	%f525, %f510, %f524;
	add.f32 	%f526, %f518, %f525;
	add.f32 	%f527, %f523, %f526;
	add.f32 	%f528, %f524, %f527;
	sub.f32 	%f529, %f524, %f528;
	add.f32 	%f530, %f527, %f529;
	mov.f32 	%f531, 0f3F317200;
	mul.rn.f32 	%f532, %f507, %f531;
	mov.f32 	%f533, 0f35BFBE8E;
	mul.rn.f32 	%f534, %f507, %f533;
	add.f32 	%f535, %f532, %f528;
	sub.f32 	%f536, %f532, %f535;
	add.f32 	%f537, %f528, %f536;
	add.f32 	%f538, %f530, %f537;
	add.f32 	%f539, %f534, %f538;
	add.f32 	%f540, %f535, %f539;
	sub.f32 	%f541, %f535, %f540;
	add.f32 	%f542, %f539, %f541;
	mov.f32 	%f543, 0f3EE8BA2E;
	mul.rn.f32 	%f544, %f543, %f540;
	neg.f32 	%f545, %f544;
	fma.rn.f32 	%f546, %f543, %f540, %f545;
	fma.rn.f32 	%f547, %f543, %f542, %f546;
	mov.f32 	%f548, 0f00000000;
	fma.rn.f32 	%f549, %f548, %f540, %f547;
	add.rn.f32 	%f550, %f544, %f549;
	neg.f32 	%f551, %f550;
	add.rn.f32 	%f552, %f544, %f551;
	add.rn.f32 	%f553, %f552, %f549;
	mov.b32 	 %r261, %f550;
	setp.eq.s32	%p74, %r261, 1118925336;
	add.s32 	%r262, %r261, -1;
	mov.b32 	 %f554, %r262;
	add.f32 	%f555, %f553, 0f37000000;
	selp.f32	%f556, %f554, %f550, %p74;
	selp.f32	%f149, %f555, %f553, %p74;
	mul.f32 	%f557, %f556, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f558, %f557;
	mov.f32 	%f559, 0fBF317200;
	fma.rn.f32 	%f560, %f558, %f559, %f556;
	mov.f32 	%f561, 0fB5BFBE8E;
	fma.rn.f32 	%f562, %f558, %f561, %f560;
	mul.f32 	%f563, %f562, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f564, %f563;
	add.f32 	%f565, %f558, 0f00000000;
	ex2.approx.f32 	%f566, %f565;
	mul.f32 	%f567, %f564, %f566;
	setp.lt.f32	%p75, %f556, 0fC2D20000;
	selp.f32	%f568, 0f00000000, %f567, %p75;
	setp.gt.f32	%p76, %f556, 0f42D20000;
	selp.f32	%f924, 0f7F800000, %f568, %p76;
	setp.eq.f32	%p77, %f924, 0f7F800000;
	@%p77 bra 	BB0_80;

	fma.rn.f32 	%f924, %f924, %f149, %f924;

BB0_80:
	setp.lt.f32	%p78, %f146, 0f00000000;
	setp.eq.f32	%p79, %f147, 0f3F800000;
	and.pred  	%p3, %p78, %p79;
	mov.b32 	 %r263, %f924;
	xor.b32  	%r264, %r263, -2147483648;
	mov.b32 	 %f569, %r264;
	selp.f32	%f926, %f569, %f924, %p3;
	setp.eq.f32	%p80, %f146, 0f00000000;
	@%p80 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f572, %f146, %f146;
	selp.f32	%f926, %f572, 0f00000000, %p79;
	bra.uni 	BB0_84;

BB0_138:
	mov.u64 	%rd147, image_HDR;
	cvta.global.u64 	%rd142, %rd147;
	mov.u32 	%r327, 8;
	mov.u64 	%rd146, 0;
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd142, %r103, %r327, %rd19, %rd20, %rd146, %rd146);
	// inline asm
	mov.f32 	%f856, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f856;}

	// inline asm
	mov.u16 	%rs51, 0;
	st.v4.u16 	[%rd141], {%rs50, %rs50, %rs50, %rs51};

BB0_139:
	ld.global.u8 	%rs52, [imageEnabled];
	and.b16  	%rs53, %rs52, 64;
	setp.eq.s16	%p144, %rs53, 0;
	@%p144 bra 	BB0_141;

	cvt.u64.u32	%rd150, %r5;
	cvt.u64.u32	%rd151, %r6;
	mov.u64 	%rd154, image_Dir;
	cvta.global.u64 	%rd149, %rd154;
	mov.u64 	%rd153, 0;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r103, %r104, %rd150, %rd151, %rd153, %rd153);
	// inline asm
	mov.u16 	%rs54, 0;
	st.v4.u8 	[%rd148], {%rs54, %rs54, %rs54, %rs54};
	bra.uni 	BB0_141;

BB0_81:
	setp.geu.f32	%p81, %f146, 0f00000000;
	@%p81 bra 	BB0_84;

	cvt.rzi.f32.f32	%f571, %f543;
	setp.neu.f32	%p82, %f571, 0f3EE8BA2E;
	selp.f32	%f926, 0f7FFFFFFF, %f926, %p82;

BB0_84:
	add.f32 	%f573, %f148, 0f3EE8BA2E;
	mov.b32 	 %r265, %f573;
	setp.lt.s32	%p84, %r265, 2139095040;
	@%p84 bra 	BB0_89;

	setp.gtu.f32	%p85, %f148, 0f7F800000;
	@%p85 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f926, %f146, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p86, %f148, 0f7F800000;
	@%p86 bra 	BB0_89;

	selp.f32	%f926, 0fFF800000, 0f7F800000, %p3;

BB0_89:
	mul.f32 	%f574, %f926, 0f437F0000;
	setp.eq.f32	%p87, %f146, 0f3F800000;
	selp.f32	%f575, 0f437F0000, %f574, %p87;
	cvt.rzi.u32.f32	%r266, %f575;
	cvt.u16.u32	%rs10, %r266;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd73], {%rs10, %rs11};
	ld.global.u32 	%r368, [imageEnabled];

BB0_90:
	ld.global.f32 	%f576, [lightColor];
	mul.f32 	%f160, %f922, %f576;
	ld.global.f32 	%f577, [lightColor+4];
	mul.f32 	%f161, %f922, %f577;
	ld.global.f32 	%f578, [lightColor+8];
	mul.f32 	%f162, %f922, %f578;
	and.b32  	%r267, %r368, 1;
	setp.eq.b32	%p88, %r267, 1;
	@!%p88 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f581, 0f3E666666;
	cvt.rzi.f32.f32	%f582, %f581;
	fma.rn.f32 	%f583, %f582, 0fC0000000, 0f3EE66666;
	abs.f32 	%f163, %f583;
	abs.f32 	%f164, %f160;
	setp.lt.f32	%p89, %f164, 0f00800000;
	mul.f32 	%f584, %f164, 0f4B800000;
	selp.f32	%f585, 0fC3170000, 0fC2FE0000, %p89;
	selp.f32	%f586, %f584, %f164, %p89;
	mov.b32 	 %r268, %f586;
	and.b32  	%r269, %r268, 8388607;
	or.b32  	%r270, %r269, 1065353216;
	mov.b32 	 %f587, %r270;
	shr.u32 	%r271, %r268, 23;
	cvt.rn.f32.u32	%f588, %r271;
	add.f32 	%f589, %f585, %f588;
	setp.gt.f32	%p90, %f587, 0f3FB504F3;
	mul.f32 	%f590, %f587, 0f3F000000;
	add.f32 	%f591, %f589, 0f3F800000;
	selp.f32	%f592, %f590, %f587, %p90;
	selp.f32	%f593, %f591, %f589, %p90;
	add.f32 	%f594, %f592, 0fBF800000;
	add.f32 	%f580, %f592, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// inline asm
	add.f32 	%f595, %f594, %f594;
	mul.f32 	%f596, %f579, %f595;
	mul.f32 	%f597, %f596, %f596;
	mov.f32 	%f598, 0f3C4CAF63;
	mov.f32 	%f599, 0f3B18F0FE;
	fma.rn.f32 	%f600, %f599, %f597, %f598;
	mov.f32 	%f601, 0f3DAAAABD;
	fma.rn.f32 	%f602, %f600, %f597, %f601;
	mul.rn.f32 	%f603, %f602, %f597;
	mul.rn.f32 	%f604, %f603, %f596;
	sub.f32 	%f605, %f594, %f596;
	neg.f32 	%f606, %f596;
	add.f32 	%f607, %f605, %f605;
	fma.rn.f32 	%f608, %f606, %f594, %f607;
	mul.rn.f32 	%f609, %f579, %f608;
	add.f32 	%f610, %f604, %f596;
	sub.f32 	%f611, %f596, %f610;
	add.f32 	%f612, %f604, %f611;
	add.f32 	%f613, %f609, %f612;
	add.f32 	%f614, %f610, %f613;
	sub.f32 	%f615, %f610, %f614;
	add.f32 	%f616, %f613, %f615;
	mov.f32 	%f617, 0f3F317200;
	mul.rn.f32 	%f618, %f593, %f617;
	mov.f32 	%f619, 0f35BFBE8E;
	mul.rn.f32 	%f620, %f593, %f619;
	add.f32 	%f621, %f618, %f614;
	sub.f32 	%f622, %f618, %f621;
	add.f32 	%f623, %f614, %f622;
	add.f32 	%f624, %f616, %f623;
	add.f32 	%f625, %f620, %f624;
	add.f32 	%f626, %f621, %f625;
	sub.f32 	%f627, %f621, %f626;
	add.f32 	%f628, %f625, %f627;
	mov.f32 	%f629, 0f3EE66666;
	mul.rn.f32 	%f630, %f629, %f626;
	neg.f32 	%f631, %f630;
	fma.rn.f32 	%f632, %f629, %f626, %f631;
	fma.rn.f32 	%f633, %f629, %f628, %f632;
	mov.f32 	%f634, 0f00000000;
	fma.rn.f32 	%f635, %f634, %f626, %f633;
	add.rn.f32 	%f636, %f630, %f635;
	neg.f32 	%f637, %f636;
	add.rn.f32 	%f638, %f630, %f637;
	add.rn.f32 	%f639, %f638, %f635;
	mov.b32 	 %r272, %f636;
	setp.eq.s32	%p91, %r272, 1118925336;
	add.s32 	%r273, %r272, -1;
	mov.b32 	 %f640, %r273;
	add.f32 	%f641, %f639, 0f37000000;
	selp.f32	%f642, %f640, %f636, %p91;
	selp.f32	%f165, %f641, %f639, %p91;
	mul.f32 	%f643, %f642, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f644, %f643;
	mov.f32 	%f645, 0fBF317200;
	fma.rn.f32 	%f646, %f644, %f645, %f642;
	mov.f32 	%f647, 0fB5BFBE8E;
	fma.rn.f32 	%f648, %f644, %f647, %f646;
	mul.f32 	%f649, %f648, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f650, %f649;
	add.f32 	%f651, %f644, 0f00000000;
	ex2.approx.f32 	%f652, %f651;
	mul.f32 	%f653, %f650, %f652;
	setp.lt.f32	%p92, %f642, 0fC2D20000;
	selp.f32	%f654, 0f00000000, %f653, %p92;
	setp.gt.f32	%p93, %f642, 0f42D20000;
	selp.f32	%f927, 0f7F800000, %f654, %p93;
	setp.eq.f32	%p94, %f927, 0f7F800000;
	@%p94 bra 	BB0_93;

	fma.rn.f32 	%f927, %f927, %f165, %f927;

BB0_93:
	setp.lt.f32	%p95, %f160, 0f00000000;
	setp.eq.f32	%p96, %f163, 0f3F800000;
	and.pred  	%p4, %p95, %p96;
	mov.b32 	 %r274, %f927;
	xor.b32  	%r275, %r274, -2147483648;
	mov.b32 	 %f655, %r275;
	selp.f32	%f929, %f655, %f927, %p4;
	setp.eq.f32	%p97, %f160, 0f00000000;
	@%p97 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f658, %f160, %f160;
	selp.f32	%f929, %f658, 0f00000000, %p96;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p98, %f160, 0f00000000;
	@%p98 bra 	BB0_97;

	cvt.rzi.f32.f32	%f657, %f629;
	setp.neu.f32	%p99, %f657, 0f3EE66666;
	selp.f32	%f929, 0f7FFFFFFF, %f929, %p99;

BB0_97:
	add.f32 	%f659, %f164, 0f3EE66666;
	mov.b32 	 %r276, %f659;
	setp.lt.s32	%p101, %r276, 2139095040;
	@%p101 bra 	BB0_102;

	setp.gtu.f32	%p102, %f164, 0f7F800000;
	@%p102 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f929, %f160, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p103, %f164, 0f7F800000;
	@%p103 bra 	BB0_102;

	selp.f32	%f929, 0fFF800000, 0f7F800000, %p4;

BB0_102:
	setp.eq.f32	%p104, %f160, 0f3F800000;
	selp.f32	%f176, 0f3F800000, %f929, %p104;
	abs.f32 	%f177, %f161;
	setp.lt.f32	%p105, %f177, 0f00800000;
	mul.f32 	%f662, %f177, 0f4B800000;
	selp.f32	%f663, 0fC3170000, 0fC2FE0000, %p105;
	selp.f32	%f664, %f662, %f177, %p105;
	mov.b32 	 %r277, %f664;
	and.b32  	%r278, %r277, 8388607;
	or.b32  	%r279, %r278, 1065353216;
	mov.b32 	 %f665, %r279;
	shr.u32 	%r280, %r277, 23;
	cvt.rn.f32.u32	%f666, %r280;
	add.f32 	%f667, %f663, %f666;
	setp.gt.f32	%p106, %f665, 0f3FB504F3;
	mul.f32 	%f668, %f665, 0f3F000000;
	add.f32 	%f669, %f667, 0f3F800000;
	selp.f32	%f670, %f668, %f665, %p106;
	selp.f32	%f671, %f669, %f667, %p106;
	add.f32 	%f672, %f670, 0fBF800000;
	add.f32 	%f661, %f670, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f660,%f661;
	// inline asm
	add.f32 	%f673, %f672, %f672;
	mul.f32 	%f674, %f660, %f673;
	mul.f32 	%f675, %f674, %f674;
	fma.rn.f32 	%f678, %f599, %f675, %f598;
	fma.rn.f32 	%f680, %f678, %f675, %f601;
	mul.rn.f32 	%f681, %f680, %f675;
	mul.rn.f32 	%f682, %f681, %f674;
	sub.f32 	%f683, %f672, %f674;
	neg.f32 	%f684, %f674;
	add.f32 	%f685, %f683, %f683;
	fma.rn.f32 	%f686, %f684, %f672, %f685;
	mul.rn.f32 	%f687, %f660, %f686;
	add.f32 	%f688, %f682, %f674;
	sub.f32 	%f689, %f674, %f688;
	add.f32 	%f690, %f682, %f689;
	add.f32 	%f691, %f687, %f690;
	add.f32 	%f692, %f688, %f691;
	sub.f32 	%f693, %f688, %f692;
	add.f32 	%f694, %f691, %f693;
	mul.rn.f32 	%f696, %f671, %f617;
	mul.rn.f32 	%f698, %f671, %f619;
	add.f32 	%f699, %f696, %f692;
	sub.f32 	%f700, %f696, %f699;
	add.f32 	%f701, %f692, %f700;
	add.f32 	%f702, %f694, %f701;
	add.f32 	%f703, %f698, %f702;
	add.f32 	%f704, %f699, %f703;
	sub.f32 	%f705, %f699, %f704;
	add.f32 	%f706, %f703, %f705;
	mul.rn.f32 	%f708, %f629, %f704;
	neg.f32 	%f709, %f708;
	fma.rn.f32 	%f710, %f629, %f704, %f709;
	fma.rn.f32 	%f711, %f629, %f706, %f710;
	fma.rn.f32 	%f713, %f634, %f704, %f711;
	add.rn.f32 	%f714, %f708, %f713;
	neg.f32 	%f715, %f714;
	add.rn.f32 	%f716, %f708, %f715;
	add.rn.f32 	%f717, %f716, %f713;
	mov.b32 	 %r281, %f714;
	setp.eq.s32	%p107, %r281, 1118925336;
	add.s32 	%r282, %r281, -1;
	mov.b32 	 %f718, %r282;
	add.f32 	%f719, %f717, 0f37000000;
	selp.f32	%f720, %f718, %f714, %p107;
	selp.f32	%f178, %f719, %f717, %p107;
	mul.f32 	%f721, %f720, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f722, %f721;
	fma.rn.f32 	%f724, %f722, %f645, %f720;
	fma.rn.f32 	%f726, %f722, %f647, %f724;
	mul.f32 	%f727, %f726, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f728, %f727;
	add.f32 	%f729, %f722, 0f00000000;
	ex2.approx.f32 	%f730, %f729;
	mul.f32 	%f731, %f728, %f730;
	setp.lt.f32	%p108, %f720, 0fC2D20000;
	selp.f32	%f732, 0f00000000, %f731, %p108;
	setp.gt.f32	%p109, %f720, 0f42D20000;
	selp.f32	%f930, 0f7F800000, %f732, %p109;
	setp.eq.f32	%p110, %f930, 0f7F800000;
	@%p110 bra 	BB0_104;

	fma.rn.f32 	%f930, %f930, %f178, %f930;

BB0_104:
	setp.lt.f32	%p111, %f161, 0f00000000;
	and.pred  	%p5, %p111, %p96;
	mov.b32 	 %r283, %f930;
	xor.b32  	%r284, %r283, -2147483648;
	mov.b32 	 %f733, %r284;
	selp.f32	%f932, %f733, %f930, %p5;
	setp.eq.f32	%p113, %f161, 0f00000000;
	@%p113 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f736, %f161, %f161;
	selp.f32	%f932, %f736, 0f00000000, %p96;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p114, %f161, 0f00000000;
	@%p114 bra 	BB0_108;

	cvt.rzi.f32.f32	%f735, %f629;
	setp.neu.f32	%p115, %f735, 0f3EE66666;
	selp.f32	%f932, 0f7FFFFFFF, %f932, %p115;

BB0_108:
	add.f32 	%f737, %f177, 0f3EE66666;
	mov.b32 	 %r285, %f737;
	setp.lt.s32	%p117, %r285, 2139095040;
	@%p117 bra 	BB0_113;

	setp.gtu.f32	%p118, %f177, 0f7F800000;
	@%p118 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f932, %f161, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p119, %f177, 0f7F800000;
	@%p119 bra 	BB0_113;

	selp.f32	%f932, 0fFF800000, 0f7F800000, %p5;

BB0_113:
	setp.eq.f32	%p120, %f161, 0f3F800000;
	selp.f32	%f189, 0f3F800000, %f932, %p120;
	abs.f32 	%f190, %f162;
	setp.lt.f32	%p121, %f190, 0f00800000;
	mul.f32 	%f740, %f190, 0f4B800000;
	selp.f32	%f741, 0fC3170000, 0fC2FE0000, %p121;
	selp.f32	%f742, %f740, %f190, %p121;
	mov.b32 	 %r286, %f742;
	and.b32  	%r287, %r286, 8388607;
	or.b32  	%r288, %r287, 1065353216;
	mov.b32 	 %f743, %r288;
	shr.u32 	%r289, %r286, 23;
	cvt.rn.f32.u32	%f744, %r289;
	add.f32 	%f745, %f741, %f744;
	setp.gt.f32	%p122, %f743, 0f3FB504F3;
	mul.f32 	%f746, %f743, 0f3F000000;
	add.f32 	%f747, %f745, 0f3F800000;
	selp.f32	%f748, %f746, %f743, %p122;
	selp.f32	%f749, %f747, %f745, %p122;
	add.f32 	%f750, %f748, 0fBF800000;
	add.f32 	%f739, %f748, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f738,%f739;
	// inline asm
	add.f32 	%f751, %f750, %f750;
	mul.f32 	%f752, %f738, %f751;
	mul.f32 	%f753, %f752, %f752;
	fma.rn.f32 	%f756, %f599, %f753, %f598;
	fma.rn.f32 	%f758, %f756, %f753, %f601;
	mul.rn.f32 	%f759, %f758, %f753;
	mul.rn.f32 	%f760, %f759, %f752;
	sub.f32 	%f761, %f750, %f752;
	neg.f32 	%f762, %f752;
	add.f32 	%f763, %f761, %f761;
	fma.rn.f32 	%f764, %f762, %f750, %f763;
	mul.rn.f32 	%f765, %f738, %f764;
	add.f32 	%f766, %f760, %f752;
	sub.f32 	%f767, %f752, %f766;
	add.f32 	%f768, %f760, %f767;
	add.f32 	%f769, %f765, %f768;
	add.f32 	%f770, %f766, %f769;
	sub.f32 	%f771, %f766, %f770;
	add.f32 	%f772, %f769, %f771;
	mul.rn.f32 	%f774, %f749, %f617;
	mul.rn.f32 	%f776, %f749, %f619;
	add.f32 	%f777, %f774, %f770;
	sub.f32 	%f778, %f774, %f777;
	add.f32 	%f779, %f770, %f778;
	add.f32 	%f780, %f772, %f779;
	add.f32 	%f781, %f776, %f780;
	add.f32 	%f782, %f777, %f781;
	sub.f32 	%f783, %f777, %f782;
	add.f32 	%f784, %f781, %f783;
	mul.rn.f32 	%f786, %f629, %f782;
	neg.f32 	%f787, %f786;
	fma.rn.f32 	%f788, %f629, %f782, %f787;
	fma.rn.f32 	%f789, %f629, %f784, %f788;
	fma.rn.f32 	%f791, %f634, %f782, %f789;
	add.rn.f32 	%f792, %f786, %f791;
	neg.f32 	%f793, %f792;
	add.rn.f32 	%f794, %f786, %f793;
	add.rn.f32 	%f795, %f794, %f791;
	mov.b32 	 %r290, %f792;
	setp.eq.s32	%p123, %r290, 1118925336;
	add.s32 	%r291, %r290, -1;
	mov.b32 	 %f796, %r291;
	add.f32 	%f797, %f795, 0f37000000;
	selp.f32	%f798, %f796, %f792, %p123;
	selp.f32	%f191, %f797, %f795, %p123;
	mul.f32 	%f799, %f798, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f800, %f799;
	fma.rn.f32 	%f802, %f800, %f645, %f798;
	fma.rn.f32 	%f804, %f800, %f647, %f802;
	mul.f32 	%f805, %f804, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f806, %f805;
	add.f32 	%f807, %f800, 0f00000000;
	ex2.approx.f32 	%f808, %f807;
	mul.f32 	%f809, %f806, %f808;
	setp.lt.f32	%p124, %f798, 0fC2D20000;
	selp.f32	%f810, 0f00000000, %f809, %p124;
	setp.gt.f32	%p125, %f798, 0f42D20000;
	selp.f32	%f933, 0f7F800000, %f810, %p125;
	setp.eq.f32	%p126, %f933, 0f7F800000;
	@%p126 bra 	BB0_115;

	fma.rn.f32 	%f933, %f933, %f191, %f933;

BB0_115:
	setp.lt.f32	%p127, %f162, 0f00000000;
	and.pred  	%p6, %p127, %p96;
	mov.b32 	 %r292, %f933;
	xor.b32  	%r293, %r292, -2147483648;
	mov.b32 	 %f811, %r293;
	selp.f32	%f935, %f811, %f933, %p6;
	setp.eq.f32	%p129, %f162, 0f00000000;
	@%p129 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f814, %f162, %f162;
	selp.f32	%f935, %f814, 0f00000000, %p96;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p130, %f162, 0f00000000;
	@%p130 bra 	BB0_119;

	cvt.rzi.f32.f32	%f813, %f629;
	setp.neu.f32	%p131, %f813, 0f3EE66666;
	selp.f32	%f935, 0f7FFFFFFF, %f935, %p131;

BB0_119:
	add.f32 	%f815, %f190, 0f3EE66666;
	mov.b32 	 %r294, %f815;
	setp.lt.s32	%p133, %r294, 2139095040;
	@%p133 bra 	BB0_124;

	setp.gtu.f32	%p134, %f190, 0f7F800000;
	@%p134 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f935, %f162, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p135, %f190, 0f7F800000;
	@%p135 bra 	BB0_124;

	selp.f32	%f935, 0fFF800000, 0f7F800000, %p6;

BB0_124:
	mov.u32 	%r333, 2;
	setp.eq.f32	%p136, %f162, 0f3F800000;
	selp.f32	%f816, 0f3F800000, %f935, %p136;
	cvt.u64.u32	%rd83, %r6;
	cvt.u64.u32	%rd82, %r5;
	mov.u64 	%rd86, image;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r333, %r104, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f817, %f816;
	mul.f32 	%f818, %f817, 0f437FFD71;
	cvt.rzi.u32.f32	%r297, %f818;
	cvt.sat.f32.f32	%f819, %f189;
	mul.f32 	%f820, %f819, 0f437FFD71;
	cvt.rzi.u32.f32	%r298, %f820;
	cvt.sat.f32.f32	%f821, %f176;
	mul.f32 	%f822, %f821, 0f437FFD71;
	cvt.rzi.u32.f32	%r299, %f822;
	cvt.u16.u32	%rs12, %r297;
	cvt.u16.u32	%rs13, %r299;
	cvt.u16.u32	%rs14, %r298;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd80], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r368, [imageEnabled];

BB0_125:
	and.b32  	%r300, %r368, 4;
	setp.eq.s32	%p137, %r300, 0;
	@%p137 bra 	BB0_129;

	ld.global.u32 	%r301, [additive];
	setp.eq.s32	%p138, %r301, 0;
	cvt.u64.u32	%rd17, %r5;
	cvt.u64.u32	%rd18, %r6;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f376;}

	// inline asm
	@%p138 bra 	BB0_128;

	mov.u32 	%r334, 2;
	mov.u64 	%rd99, image_HDR;
	cvta.global.u64 	%rd88, %rd99;
	mov.u32 	%r305, 8;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r334, %r305, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd87];
	// inline asm
	{  cvt.f32.f16 %f824, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f825, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f826, %rs25;}

	// inline asm
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd88, %r334, %r305, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f827, %f160, %f824;
	add.f32 	%f828, %f161, %f825;
	add.f32 	%f829, %f162, %f826;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f829;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f828;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f827;}

	// inline asm
	st.v4.u16 	[%rd93], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_129;

BB0_128:
	mov.u32 	%r335, 2;
	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd101, %rd106;
	mov.u32 	%r307, 8;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r335, %r307, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f162;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f161;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f160;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs27, %rs28, %rs29, %rs16};

BB0_129:
	ld.global.u8 	%rs30, [imageEnabled];
	and.b16  	%rs31, %rs30, 64;
	setp.eq.s16	%p139, %rs31, 0;
	@%p139 bra 	BB0_141;

	mov.u32 	%r336, 2;
	mul.f32 	%f833, %f890, %f890;
	fma.rn.f32 	%f834, %f891, %f891, %f833;
	fma.rn.f32 	%f835, %f889, %f889, %f834;
	sqrt.rn.f32 	%f836, %f835;
	rcp.rn.f32 	%f837, %f836;
	mul.f32 	%f838, %f891, %f837;
	mul.f32 	%f839, %f890, %f837;
	mul.f32 	%f840, %f889, %f837;
	cvt.u64.u32	%rd110, %r6;
	cvt.u64.u32	%rd109, %r5;
	mov.u64 	%rd113, image_Dir;
	cvta.global.u64 	%rd108, %rd113;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r336, %r104, %rd109, %rd110, %rd26, %rd26);
	// inline asm
	fma.rn.f32 	%f841, %f838, 0f3F000000, 0f3F000000;
	mul.f32 	%f842, %f841, 0f437F0000;
	cvt.rzi.u32.f32	%r310, %f842;
	fma.rn.f32 	%f843, %f839, 0f3F000000, 0f3F000000;
	mul.f32 	%f844, %f843, 0f437F0000;
	cvt.rzi.u32.f32	%r311, %f844;
	fma.rn.f32 	%f845, %f840, 0f3F000000, 0f3F000000;
	mul.f32 	%f846, %f845, 0f437F0000;
	cvt.rzi.u32.f32	%r312, %f846;
	cvt.u16.u32	%rs32, %r312;
	cvt.u16.u32	%rs33, %r311;
	cvt.u16.u32	%rs34, %r310;
	mov.u16 	%rs35, 255;
	st.v4.u8 	[%rd107], {%rs34, %rs33, %rs32, %rs35};

BB0_141:
	ret;
}


