//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<158>;
	.reg .b16 	%rs<157>;
	.reg .f32 	%f<1385>;
	.reg .b32 	%r<439>;
	.reg .b64 	%rd<303>;


	mov.u64 	%rd302, __local_depot0;
	cvta.local.u64 	%SP, %rd302;
	ld.global.u32 	%r1, [lightMeshBufferSize];
	abs.s32 	%r2, %r1;
	ld.global.u32 	%r3, [samples];
	ld.global.v2.u32 	{%r111, %r112}, [pixelID];
	cvt.u64.u32	%rd26, %r111;
	cvt.u64.u32	%rd27, %r112;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r109, 2;
	mov.u32 	%r110, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r109, %r110, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r4, [%rd24];
	shr.u32 	%r115, %r4, 16;
	cvt.u16.u32	%rs1, %r115;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r4;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p7, %rs8, 0;
	mov.f32 	%f1245, 0f00000000;
	mov.f32 	%f1246, %f1245;
	mov.f32 	%f1247, %f1245;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs9, [%rd24+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f341, %rs11;
	div.rn.f32 	%f342, %f341, 0f437F0000;
	fma.rn.f32 	%f343, %f342, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f344, %rs9;
	div.rn.f32 	%f345, %f344, 0f437F0000;
	fma.rn.f32 	%f346, %f345, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f347, %rs6;
	div.rn.f32 	%f348, %f347, 0f437F0000;
	fma.rn.f32 	%f349, %f348, 0f40000000, 0fBF800000;
	mul.f32 	%f350, %f346, %f346;
	fma.rn.f32 	%f351, %f343, %f343, %f350;
	fma.rn.f32 	%f352, %f349, %f349, %f351;
	sqrt.rn.f32 	%f353, %f352;
	rcp.rn.f32 	%f354, %f353;
	mul.f32 	%f1245, %f343, %f354;
	mul.f32 	%f1246, %f346, %f354;
	mul.f32 	%f1247, %f349, %f354;

BB0_2:
	ld.global.v2.u32 	{%r116, %r117}, [pixelID];
	ld.global.v2.u32 	{%r119, %r120}, [tileInfo];
	add.s32 	%r5, %r116, %r119;
	add.s32 	%r6, %r117, %r120;
	setp.eq.f32	%p8, %f1246, 0f00000000;
	setp.eq.f32	%p9, %f1245, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1247, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_144;
	bra.uni 	BB0_3;

BB0_144:
	ld.global.u32 	%r438, [imageEnabled];
	and.b32  	%r356, %r438, 1;
	setp.eq.b32	%p150, %r356, 1;
	@!%p150 bra 	BB0_146;
	bra.uni 	BB0_145;

BB0_145:
	cvt.u64.u32	%rd200, %r5;
	cvt.u64.u32	%rd201, %r6;
	mov.u64 	%rd204, image;
	cvta.global.u64 	%rd199, %rd204;
	mov.u64 	%rd203, 0;
	// inline asm
	call (%rd198), _rt_buffer_get_64, (%rd199, %r109, %r110, %rd200, %rd201, %rd203, %rd203);
	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u8 	[%rd198], {%rs102, %rs102, %rs102, %rs102};
	ld.global.u32 	%r438, [imageEnabled];

BB0_146:
	and.b32  	%r359, %r438, 8;
	setp.eq.s32	%p151, %r359, 0;
	@%p151 bra 	BB0_148;

	cvt.u64.u32	%rd208, %r6;
	cvt.u64.u32	%rd207, %r5;
	mov.u64 	%rd211, image_Mask;
	cvta.global.u64 	%rd206, %rd211;
	mov.u64 	%rd210, 0;
	// inline asm
	call (%rd205), _rt_buffer_get_64, (%rd206, %r109, %r109, %rd207, %rd208, %rd210, %rd210);
	// inline asm
	mov.f32 	%f1207, 0f00000000;
	cvt.rzi.u32.f32	%r362, %f1207;
	cvt.u16.u32	%rs103, %r362;
	mov.u16 	%rs104, 0;
	st.v2.u8 	[%rd205], {%rs103, %rs104};
	ld.global.u32 	%r438, [imageEnabled];

BB0_148:
	cvt.u64.u32	%rd22, %r5;
	cvt.u64.u32	%rd23, %r6;
	and.b32  	%r363, %r438, 4;
	setp.eq.s32	%p152, %r363, 0;
	@%p152 bra 	BB0_152;

	ld.global.u32 	%r364, [additive];
	setp.eq.s32	%p153, %r364, 0;
	@%p153 bra 	BB0_151;

	mov.u64 	%rd224, image_HDR;
	cvta.global.u64 	%rd213, %rd224;
	mov.u32 	%r368, 8;
	mov.u64 	%rd223, 0;
	// inline asm
	call (%rd212), _rt_buffer_get_64, (%rd213, %r109, %r368, %rd22, %rd23, %rd223, %rd223);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd212];
	// inline asm
	{  cvt.f32.f16 %f1208, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1209, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1210, %rs113;}

	// inline asm
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd213, %r109, %r368, %rd22, %rd23, %rd223, %rd223);
	// inline asm
	add.f32 	%f1211, %f1208, 0f00000000;
	add.f32 	%f1212, %f1209, 0f00000000;
	add.f32 	%f1213, %f1210, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1213;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1212;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1211;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd218], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_152;

BB0_3:
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd33, %r128;
	cvt.u64.u32	%rd34, %r129;
	mov.u64 	%rd43, uvpos;
	cvta.global.u64 	%rd32, %rd43;
	mov.u32 	%r125, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r109, %r125, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f9, [%rd31+8];
	ld.f32 	%f8, [%rd31+4];
	ld.f32 	%f7, [%rd31];
	mul.f32 	%f358, %f7, 0f3456BF95;
	mul.f32 	%f359, %f8, 0f3456BF95;
	mul.f32 	%f360, %f9, 0f3456BF95;
	abs.f32 	%f10, %f1245;
	div.rn.f32 	%f361, %f358, %f10;
	abs.f32 	%f362, %f1246;
	div.rn.f32 	%f363, %f359, %f362;
	abs.f32 	%f11, %f1247;
	div.rn.f32 	%f364, %f360, %f11;
	abs.f32 	%f365, %f361;
	abs.f32 	%f366, %f363;
	abs.f32 	%f367, %f364;
	mov.f32 	%f368, 0f38D1B717;
	max.f32 	%f369, %f365, %f368;
	max.f32 	%f370, %f366, %f368;
	max.f32 	%f371, %f367, %f368;
	fma.rn.f32 	%f12, %f1245, %f369, %f7;
	fma.rn.f32 	%f13, %f1246, %f370, %f8;
	fma.rn.f32 	%f14, %f1247, %f371, %f9;
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd39, %r132;
	cvt.u64.u32	%rd40, %r133;
	mov.u64 	%rd44, uvtangent;
	cvta.global.u64 	%rd38, %rd44;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r109, %r110, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.u32 	%r7, [%rd37];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs13, %r8;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r7;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p13, %rs16, 0;
	mov.f32 	%f50, 0f00000000;
	mov.f32 	%f1248, %f50;
	mov.f32 	%f1249, %f50;
	mov.f32 	%f1250, %f50;
	@%p13 bra 	BB0_5;

	ld.u8 	%rs17, [%rd37+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f372, %rs19;
	div.rn.f32 	%f373, %f372, 0f437F0000;
	fma.rn.f32 	%f374, %f373, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f375, %rs17;
	div.rn.f32 	%f376, %f375, 0f437F0000;
	fma.rn.f32 	%f377, %f376, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f378, %rs14;
	div.rn.f32 	%f379, %f378, 0f437F0000;
	fma.rn.f32 	%f380, %f379, 0f40000000, 0fBF800000;
	mul.f32 	%f381, %f377, %f377;
	fma.rn.f32 	%f382, %f374, %f374, %f381;
	fma.rn.f32 	%f383, %f380, %f380, %f382;
	sqrt.rn.f32 	%f384, %f383;
	rcp.rn.f32 	%f385, %f384;
	mul.f32 	%f1248, %f374, %f385;
	mul.f32 	%f1249, %f377, %f385;
	mul.f32 	%f1250, %f380, %f385;

BB0_5:
	mul.f32 	%f389, %f1247, %f1249;
	mul.f32 	%f390, %f1246, %f1250;
	sub.f32 	%f391, %f390, %f389;
	mul.f32 	%f392, %f1245, %f1250;
	mul.f32 	%f393, %f1247, %f1248;
	sub.f32 	%f394, %f393, %f392;
	mul.f32 	%f395, %f1246, %f1248;
	mul.f32 	%f396, %f1245, %f1249;
	sub.f32 	%f397, %f396, %f395;
	setp.lt.u32	%p14, %r7, 16777216;
	selp.f32	%f398, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f399, %f391, %f398;
	mul.f32 	%f400, %f394, %f398;
	mul.f32 	%f401, %f397, %f398;
	mul.f32 	%f402, %f399, 0f00000000;
	mul.f32 	%f403, %f400, 0f00000000;
	mul.f32 	%f404, %f401, 0f00000000;
	fma.rn.f32 	%f405, %f1248, 0f3F5105EC, %f402;
	fma.rn.f32 	%f406, %f1249, 0f3F5105EC, %f403;
	fma.rn.f32 	%f407, %f1250, 0f3F5105EC, %f404;
	mul.f32 	%f21, %f1245, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f405;
	mul.f32 	%f23, %f1246, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f406;
	mul.f32 	%f25, %f1247, 0f3F13CD3A;
	add.f32 	%f26, %f25, %f407;
	ld.global.v2.u32 	{%r138, %r139}, [pixelID];
	cvt.u64.u32	%rd47, %r138;
	cvt.u64.u32	%rd48, %r139;
	// inline asm
	call (%rd45), _rt_buffer_get_64, (%rd38, %r109, %r110, %rd47, %rd48, %rd29, %rd29);
	// inline asm
	ld.u32 	%r9, [%rd45];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs22, %r10;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r9;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p15, %rs25, 0;
	mov.f32 	%f1251, %f50;
	mov.f32 	%f1252, %f50;
	mov.f32 	%f1253, %f50;
	@%p15 bra 	BB0_7;

	ld.u8 	%rs26, [%rd45+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f408, %rs28;
	div.rn.f32 	%f409, %f408, 0f437F0000;
	fma.rn.f32 	%f410, %f409, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f411, %rs26;
	div.rn.f32 	%f412, %f411, 0f437F0000;
	fma.rn.f32 	%f413, %f412, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f414, %rs23;
	div.rn.f32 	%f415, %f414, 0f437F0000;
	fma.rn.f32 	%f416, %f415, 0f40000000, 0fBF800000;
	mul.f32 	%f417, %f413, %f413;
	fma.rn.f32 	%f418, %f410, %f410, %f417;
	fma.rn.f32 	%f419, %f416, %f416, %f418;
	sqrt.rn.f32 	%f420, %f419;
	rcp.rn.f32 	%f421, %f420;
	mul.f32 	%f1251, %f410, %f421;
	mul.f32 	%f1252, %f413, %f421;
	mul.f32 	%f1253, %f416, %f421;

BB0_7:
	mul.f32 	%f425, %f1247, %f1252;
	mul.f32 	%f426, %f1246, %f1253;
	sub.f32 	%f427, %f426, %f425;
	mul.f32 	%f428, %f1245, %f1253;
	mul.f32 	%f429, %f1247, %f1251;
	sub.f32 	%f430, %f429, %f428;
	mul.f32 	%f431, %f1246, %f1251;
	mul.f32 	%f432, %f1245, %f1252;
	sub.f32 	%f433, %f432, %f431;
	setp.lt.u32	%p16, %r9, 16777216;
	selp.f32	%f434, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f435, %f427, %f434;
	mul.f32 	%f436, %f430, %f434;
	mul.f32 	%f437, %f433, %f434;
	mul.f32 	%f438, %f435, 0f3F3504F3;
	mul.f32 	%f439, %f436, 0f3F3504F3;
	mul.f32 	%f440, %f437, 0f3F3504F3;
	fma.rn.f32 	%f441, %f1251, 0fBED105EC, %f438;
	fma.rn.f32 	%f442, %f1252, 0fBED105EC, %f439;
	fma.rn.f32 	%f443, %f1253, 0fBED105EC, %f440;
	add.f32 	%f33, %f21, %f441;
	add.f32 	%f34, %f23, %f442;
	add.f32 	%f35, %f25, %f443;
	ld.global.v2.u32 	{%r144, %r145}, [pixelID];
	cvt.u64.u32	%rd54, %r144;
	cvt.u64.u32	%rd55, %r145;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd38, %r109, %r110, %rd54, %rd55, %rd29, %rd29);
	// inline asm
	ld.u32 	%r11, [%rd52];
	shr.u32 	%r12, %r11, 16;
	cvt.u16.u32	%rs31, %r12;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r11;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p17, %rs34, 0;
	mov.f32 	%f1254, %f50;
	mov.f32 	%f1255, %f50;
	mov.f32 	%f1256, %f50;
	@%p17 bra 	BB0_9;

	ld.u8 	%rs35, [%rd52+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f444, %rs37;
	div.rn.f32 	%f445, %f444, 0f437F0000;
	fma.rn.f32 	%f446, %f445, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f447, %rs35;
	div.rn.f32 	%f448, %f447, 0f437F0000;
	fma.rn.f32 	%f449, %f448, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f450, %rs32;
	div.rn.f32 	%f451, %f450, 0f437F0000;
	fma.rn.f32 	%f452, %f451, 0f40000000, 0fBF800000;
	mul.f32 	%f453, %f449, %f449;
	fma.rn.f32 	%f454, %f446, %f446, %f453;
	fma.rn.f32 	%f455, %f452, %f452, %f454;
	sqrt.rn.f32 	%f456, %f455;
	rcp.rn.f32 	%f457, %f456;
	mul.f32 	%f1254, %f446, %f457;
	mul.f32 	%f1255, %f449, %f457;
	mul.f32 	%f1256, %f452, %f457;

BB0_9:
	mul.f32 	%f471, %f1247, %f1255;
	mul.f32 	%f472, %f1246, %f1256;
	sub.f32 	%f473, %f472, %f471;
	mul.f32 	%f474, %f1245, %f1256;
	mul.f32 	%f475, %f1247, %f1254;
	sub.f32 	%f476, %f475, %f474;
	mul.f32 	%f477, %f1246, %f1254;
	mul.f32 	%f478, %f1245, %f1255;
	sub.f32 	%f479, %f478, %f477;
	setp.lt.u32	%p19, %r11, 16777216;
	selp.f32	%f480, 0fBF800000, 0f3F800000, %p19;
	mul.f32 	%f481, %f473, %f480;
	mul.f32 	%f482, %f476, %f480;
	mul.f32 	%f483, %f479, %f480;
	mul.f32 	%f484, %f481, 0fBF3504F3;
	mul.f32 	%f485, %f482, 0fBF3504F3;
	mul.f32 	%f486, %f483, 0fBF3504F3;
	fma.rn.f32 	%f487, %f1254, 0fBED105EC, %f484;
	fma.rn.f32 	%f488, %f1255, 0fBED105EC, %f485;
	fma.rn.f32 	%f489, %f1256, 0fBED105EC, %f486;
	add.f32 	%f42, %f21, %f487;
	add.f32 	%f43, %f23, %f488;
	add.f32 	%f44, %f25, %f489;
	ld.global.v2.u32 	{%r151, %r152}, [pixelID];
	cvt.u64.u32	%rd61, %r151;
	cvt.u64.u32	%rd62, %r152;
	mov.u64 	%rd65, rnd_seeds;
	cvta.global.u64 	%rd60, %rd65;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r109, %r110, %rd61, %rd62, %rd29, %rd29);
	// inline asm
	ld.u32 	%r155, [%rd59];
	mad.lo.s32 	%r13, %r155, 1664525, 1013904223;
	mov.pred 	%p18, 0;
	mov.u32 	%r15, 0;
	setp.lt.s32	%p20, %r2, 1;
	@%p20 bra 	BB0_10;

	ld.global.f32 	%f45, [lightPointSize];
	mul.f32 	%f46, %f12, 0f3456BF95;
	mul.f32 	%f47, %f13, 0f3456BF95;
	mul.f32 	%f48, %f14, 0f3456BF95;
	and.b32  	%r158, %r13, 16777215;
	cvt.rn.f32.u32	%f503, %r158;
	mul.f32 	%f504, %f503, 0fB3800000;
	fma.rn.f32 	%f49, %f504, 0f3F333333, 0f3F800000;
	mov.f32 	%f50, 0f00000000;
	mov.u32 	%r407, 0;
	abs.f32 	%f627, %f47;
	abs.f32 	%f628, %f46;
	max.f32 	%f629, %f628, %f627;
	abs.f32 	%f630, %f48;
	max.f32 	%f631, %f629, %f630;
	mov.u32 	%r15, %r407;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
	mov.f32 	%f58, %f50;
	mov.f32 	%f59, %f50;
	mov.f32 	%f60, %f50;
	mov.f32 	%f61, %f50;
	mov.f32 	%f62, %f50;

BB0_12:
	mul.lo.s32 	%r16, %r407, 3;
	cvt.s64.s32	%rd68, %r16;
	mov.u64 	%rd72, lightMeshBuffer;
	cvta.global.u64 	%rd67, %rd72;
	mov.u32 	%r159, 1;
	mov.u64 	%rd71, 0;
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd67, %r159, %r125, %rd68, %rd71, %rd71, %rd71);
	// inline asm
	ld.f32 	%f505, [%rd66];
	sub.f32 	%f506, %f505, %f7;
	ld.f32 	%f507, [%rd66+4];
	sub.f32 	%f508, %f507, %f8;
	ld.f32 	%f509, [%rd66+8];
	sub.f32 	%f510, %f509, %f9;
	mul.f32 	%f511, %f508, %f508;
	fma.rn.f32 	%f512, %f506, %f506, %f511;
	fma.rn.f32 	%f513, %f510, %f510, %f512;
	sqrt.rn.f32 	%f63, %f513;
	rcp.rn.f32 	%f514, %f63;
	mul.f32 	%f64, %f506, %f514;
	mul.f32 	%f65, %f508, %f514;
	mul.f32 	%f66, %f510, %f514;
	mul.f32 	%f515, %f1246, %f65;
	fma.rn.f32 	%f516, %f1245, %f64, %f515;
	fma.rn.f32 	%f67, %f1247, %f66, %f516;
	setp.leu.f32	%p21, %f67, 0f00000000;
	@%p21 bra 	BB0_28;

	setp.ne.s32	%p23, %r3, 0;
	mul.f32 	%f517, %f63, %f63;
	mul.f32 	%f518, %f517, 0f40C90FDB;
	div.rn.f32 	%f519, %f45, %f518;
	add.f32 	%f68, %f519, %f519;
	setp.gt.f32	%p24, %f68, %f49;
	and.pred  	%p25, %p23, %p24;
	mov.pred 	%p157, -1;
	@%p25 bra 	BB0_30;

	ld.global.f32 	%f522, [lightInvCutoff];
	mul.f32 	%f69, %f63, %f522;
	mov.f32 	%f526, 0f40800000;
	abs.f32 	%f71, %f69;
	setp.lt.f32	%p26, %f71, 0f00800000;
	mul.f32 	%f528, %f71, 0f4B800000;
	selp.f32	%f529, 0fC3170000, 0fC2FE0000, %p26;
	selp.f32	%f530, %f528, %f71, %p26;
	mov.b32 	 %r161, %f530;
	and.b32  	%r162, %r161, 8388607;
	or.b32  	%r163, %r162, 1065353216;
	mov.b32 	 %f531, %r163;
	shr.u32 	%r164, %r161, 23;
	cvt.rn.f32.u32	%f532, %r164;
	add.f32 	%f533, %f529, %f532;
	setp.gt.f32	%p27, %f531, 0f3FB504F3;
	mul.f32 	%f534, %f531, 0f3F000000;
	add.f32 	%f535, %f533, 0f3F800000;
	selp.f32	%f536, %f534, %f531, %p27;
	selp.f32	%f537, %f535, %f533, %p27;
	add.f32 	%f538, %f536, 0fBF800000;
	add.f32 	%f521, %f536, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// inline asm
	add.f32 	%f539, %f538, %f538;
	mul.f32 	%f540, %f520, %f539;
	mul.f32 	%f541, %f540, %f540;
	mov.f32 	%f542, 0f3C4CAF63;
	mov.f32 	%f543, 0f3B18F0FE;
	fma.rn.f32 	%f544, %f543, %f541, %f542;
	mov.f32 	%f545, 0f3DAAAABD;
	fma.rn.f32 	%f546, %f544, %f541, %f545;
	mul.rn.f32 	%f547, %f546, %f541;
	mul.rn.f32 	%f548, %f547, %f540;
	sub.f32 	%f549, %f538, %f540;
	neg.f32 	%f550, %f540;
	add.f32 	%f551, %f549, %f549;
	fma.rn.f32 	%f552, %f550, %f538, %f551;
	mul.rn.f32 	%f553, %f520, %f552;
	add.f32 	%f554, %f548, %f540;
	sub.f32 	%f555, %f540, %f554;
	add.f32 	%f556, %f548, %f555;
	add.f32 	%f557, %f553, %f556;
	add.f32 	%f558, %f554, %f557;
	sub.f32 	%f559, %f554, %f558;
	add.f32 	%f560, %f557, %f559;
	mov.f32 	%f561, 0f3F317200;
	mul.rn.f32 	%f562, %f537, %f561;
	mov.f32 	%f563, 0f35BFBE8E;
	mul.rn.f32 	%f564, %f537, %f563;
	add.f32 	%f565, %f562, %f558;
	sub.f32 	%f566, %f562, %f565;
	add.f32 	%f567, %f558, %f566;
	add.f32 	%f568, %f560, %f567;
	add.f32 	%f569, %f564, %f568;
	add.f32 	%f570, %f565, %f569;
	sub.f32 	%f571, %f565, %f570;
	add.f32 	%f572, %f569, %f571;
	mul.rn.f32 	%f573, %f526, %f570;
	neg.f32 	%f574, %f573;
	fma.rn.f32 	%f575, %f526, %f570, %f574;
	fma.rn.f32 	%f576, %f526, %f572, %f575;
	mov.f32 	%f577, 0f00000000;
	fma.rn.f32 	%f578, %f577, %f570, %f576;
	add.rn.f32 	%f579, %f573, %f578;
	neg.f32 	%f580, %f579;
	add.rn.f32 	%f581, %f573, %f580;
	add.rn.f32 	%f582, %f581, %f578;
	mov.b32 	 %r165, %f579;
	setp.eq.s32	%p28, %r165, 1118925336;
	add.s32 	%r166, %r165, -1;
	mov.b32 	 %f583, %r166;
	add.f32 	%f584, %f582, 0f37000000;
	selp.f32	%f585, %f583, %f579, %p28;
	selp.f32	%f72, %f584, %f582, %p28;
	mul.f32 	%f586, %f585, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f587, %f586;
	mov.f32 	%f588, 0fBF317200;
	fma.rn.f32 	%f589, %f587, %f588, %f585;
	mov.f32 	%f590, 0fB5BFBE8E;
	fma.rn.f32 	%f591, %f587, %f590, %f589;
	mul.f32 	%f592, %f591, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f593, %f592;
	add.f32 	%f594, %f587, 0f00000000;
	ex2.approx.f32 	%f595, %f594;
	mul.f32 	%f596, %f593, %f595;
	setp.lt.f32	%p29, %f585, 0fC2D20000;
	selp.f32	%f597, 0f00000000, %f596, %p29;
	setp.gt.f32	%p30, %f585, 0f42D20000;
	selp.f32	%f1270, 0f7F800000, %f597, %p30;
	setp.eq.f32	%p31, %f1270, 0f7F800000;
	@%p31 bra 	BB0_16;

	fma.rn.f32 	%f1270, %f1270, %f72, %f1270;

BB0_16:
	mov.f32 	%f1241, 0f40000000;
	cvt.rzi.f32.f32	%f1240, %f1241;
	add.f32 	%f1239, %f1240, %f1240;
	mov.f32 	%f1238, 0f40800000;
	sub.f32 	%f1237, %f1238, %f1239;
	abs.f32 	%f1236, %f1237;
	setp.lt.f32	%p32, %f69, 0f00000000;
	setp.eq.f32	%p33, %f1236, 0f3F800000;
	and.pred  	%p1, %p32, %p33;
	mov.b32 	 %r167, %f1270;
	xor.b32  	%r168, %r167, -2147483648;
	mov.b32 	 %f598, %r168;
	selp.f32	%f1272, %f598, %f1270, %p1;
	setp.eq.f32	%p34, %f69, 0f00000000;
	@%p34 bra 	BB0_19;
	bra.uni 	BB0_17;

BB0_19:
	add.f32 	%f601, %f69, %f69;
	selp.f32	%f1272, %f601, 0f00000000, %p33;
	bra.uni 	BB0_20;

BB0_17:
	setp.geu.f32	%p35, %f69, 0f00000000;
	@%p35 bra 	BB0_20;

	mov.f32 	%f1244, 0f40800000;
	cvt.rzi.f32.f32	%f600, %f1244;
	setp.neu.f32	%p36, %f600, 0f40800000;
	selp.f32	%f1272, 0f7FFFFFFF, %f1272, %p36;

BB0_20:
	add.f32 	%f602, %f71, 0f40800000;
	mov.b32 	 %r169, %f602;
	setp.lt.s32	%p38, %r169, 2139095040;
	@%p38 bra 	BB0_25;

	setp.gtu.f32	%p39, %f71, 0f7F800000;
	@%p39 bra 	BB0_24;
	bra.uni 	BB0_22;

BB0_24:
	add.f32 	%f1272, %f69, 0f40800000;
	bra.uni 	BB0_25;

BB0_22:
	setp.neu.f32	%p40, %f71, 0f7F800000;
	@%p40 bra 	BB0_25;

	selp.f32	%f1272, 0fFF800000, 0f7F800000, %p1;

BB0_25:
	mov.u64 	%rd294, 0;
	mov.u32 	%r393, 1;
	mov.u64 	%rd293, lightMeshBuffer;
	cvta.global.u64 	%rd292, %rd293;
	mul.lo.s32 	%r392, %r407, 3;
	mov.f32 	%f603, 0f3F800000;
	sub.f32 	%f604, %f603, %f1272;
	setp.eq.f32	%p41, %f69, 0f3F800000;
	selp.f32	%f605, 0f00000000, %f604, %p41;
	cvt.sat.f32.f32	%f606, %f605;
	mul.f32 	%f607, %f68, %f606;
	add.s32 	%r172, %r392, 1;
	cvt.s64.s32	%rd75, %r172;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd292, %r393, %r125, %rd75, %rd294, %rd294, %rd294);
	// inline asm
	ld.f32 	%f608, [%rd73];
	mul.f32 	%f609, %f64, %f608;
	ld.f32 	%f610, [%rd73+4];
	mul.f32 	%f611, %f65, %f610;
	neg.f32 	%f612, %f611;
	sub.f32 	%f613, %f612, %f609;
	ld.f32 	%f614, [%rd73+8];
	mul.f32 	%f615, %f66, %f614;
	sub.f32 	%f616, %f613, %f615;
	cvt.sat.f32.f32	%f617, %f616;
	mul.f32 	%f83, %f607, %f617;
	setp.leu.f32	%p42, %f83, 0f3727C5AC;
	@%p42 bra 	BB0_27;

	mov.u64 	%rd297, 0;
	mov.u32 	%r406, 1;
	mov.u64 	%rd296, lightMeshBuffer;
	cvta.global.u64 	%rd295, %rd296;
	mul.lo.s32 	%r405, %r407, 3;
	cvt.sat.f32.f32	%f626, %f67;
	add.u64 	%rd80, %SP, 12;
	cvta.to.local.u64 	%rd87, %rd80;
	max.f32 	%f624, %f631, %f368;
	sub.f32 	%f625, %f63, %f624;
	mov.u32 	%r178, 1065353216;
	st.local.u32 	[%rd87], %r178;
	ld.global.u32 	%r173, [root];
	// inline asm
	call _rt_trace_64, (%r173, %f12, %f13, %f14, %f64, %f65, %f66, %r406, %f624, %f625, %rd80, %r110);
	// inline asm
	add.s32 	%r179, %r405, 2;
	cvt.s64.s32	%rd83, %r179;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd295, %r406, %r125, %rd83, %rd297, %rd297, %rd297);
	// inline asm
	ld.f32 	%f633, [%rd81];
	ld.local.f32 	%f634, [%rd87];
	mul.f32 	%f635, %f634, %f633;
	ld.f32 	%f636, [%rd81+4];
	mul.f32 	%f637, %f634, %f636;
	ld.f32 	%f638, [%rd81+8];
	mul.f32 	%f639, %f634, %f638;
	mul.f32 	%f640, %f83, %f635;
	mul.f32 	%f641, %f83, %f637;
	mul.f32 	%f642, %f83, %f639;
	fma.rn.f32 	%f53, %f626, %f640, %f53;
	fma.rn.f32 	%f52, %f626, %f641, %f52;
	fma.rn.f32 	%f51, %f626, %f642, %f51;
	mul.f32 	%f643, %f24, %f65;
	fma.rn.f32 	%f644, %f22, %f64, %f643;
	fma.rn.f32 	%f645, %f26, %f66, %f644;
	cvt.sat.f32.f32	%f646, %f645;
	fma.rn.f32 	%f56, %f640, %f646, %f56;
	fma.rn.f32 	%f55, %f641, %f646, %f55;
	fma.rn.f32 	%f54, %f646, %f642, %f54;
	mul.f32 	%f647, %f34, %f65;
	fma.rn.f32 	%f648, %f33, %f64, %f647;
	fma.rn.f32 	%f649, %f35, %f66, %f648;
	cvt.sat.f32.f32	%f650, %f649;
	fma.rn.f32 	%f59, %f640, %f650, %f59;
	fma.rn.f32 	%f58, %f641, %f650, %f58;
	fma.rn.f32 	%f57, %f642, %f650, %f57;
	mul.f32 	%f651, %f43, %f65;
	fma.rn.f32 	%f652, %f42, %f64, %f651;
	fma.rn.f32 	%f653, %f44, %f66, %f652;
	cvt.sat.f32.f32	%f654, %f653;
	fma.rn.f32 	%f62, %f640, %f654, %f62;
	fma.rn.f32 	%f61, %f641, %f654, %f61;
	fma.rn.f32 	%f60, %f642, %f654, %f60;
	add.f32 	%f50, %f50, %f634;

BB0_27:
	add.s32 	%r15, %r15, 1;

BB0_28:
	add.s32 	%r407, %r407, 1;
	setp.lt.s32	%p44, %r407, %r2;
	@%p44 bra 	BB0_12;
	bra.uni 	BB0_29;

BB0_10:
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
	mov.f32 	%f58, %f50;
	mov.f32 	%f59, %f50;
	mov.f32 	%f60, %f50;
	mov.f32 	%f61, %f50;
	mov.f32 	%f62, %f50;

BB0_29:
	mov.pred 	%p157, %p18;

BB0_30:
	cvt.rn.f32.s32	%f655, %r15;
	mov.f32 	%f656, 0f3F800000;
	max.f32 	%f657, %f655, %f656;
	rcp.rn.f32 	%f658, %f657;
	mul.f32 	%f1369, %f53, %f658;
	mul.f32 	%f1370, %f52, %f658;
	mul.f32 	%f1371, %f51, %f658;
	div.rn.f32 	%f1372, %f50, %f657;
	mul.f32 	%f1366, %f56, %f658;
	mul.f32 	%f1367, %f55, %f658;
	mul.f32 	%f1368, %f54, %f658;
	mul.f32 	%f1363, %f59, %f658;
	mul.f32 	%f1364, %f58, %f658;
	mul.f32 	%f1365, %f57, %f658;
	mul.f32 	%f1360, %f62, %f658;
	mul.f32 	%f1361, %f61, %f658;
	mul.f32 	%f1362, %f60, %f658;
	@!%p157 bra 	BB0_83;
	bra.uni 	BB0_31;

BB0_31:
	abs.f32 	%f1243, %f1247;
	abs.f32 	%f1242, %f1245;
	setp.gt.f32	%p45, %f1242, %f1243;
	neg.f32 	%f671, %f1246;
	selp.f32	%f672, %f671, 0f00000000, %p45;
	neg.f32 	%f673, %f1247;
	selp.f32	%f674, %f1245, %f673, %p45;
	selp.f32	%f675, 0f00000000, %f1246, %p45;
	mul.f32 	%f676, %f674, %f674;
	fma.rn.f32 	%f677, %f672, %f672, %f676;
	fma.rn.f32 	%f678, %f675, %f675, %f677;
	sqrt.rn.f32 	%f679, %f678;
	rcp.rn.f32 	%f680, %f679;
	mul.f32 	%f149, %f672, %f680;
	mul.f32 	%f150, %f674, %f680;
	mul.f32 	%f151, %f675, %f680;
	mov.f32 	%f670, 0f00000000;
	setp.lt.s32	%p46, %r3, 1;
	mov.f32 	%f1324, %f670;
	mov.f32 	%f1325, %f670;
	mov.f32 	%f1326, %f670;
	mov.f32 	%f1327, %f670;
	mov.f32 	%f1328, %f670;
	mov.f32 	%f1329, %f670;
	mov.f32 	%f1330, %f670;
	mov.f32 	%f1331, %f670;
	mov.f32 	%f1332, %f670;
	mov.f32 	%f1333, %f670;
	mov.f32 	%f1334, %f670;
	mov.f32 	%f1335, %f670;
	@%p46 bra 	BB0_82;

	mad.lo.s32 	%r414, %r155, 1664525, 1013904223;
	cvt.rn.f32.s32	%f693, %r3;
	rcp.rn.f32 	%f152, %f693;
	add.u64 	%rd89, %SP, 16;
	cvta.to.local.u64 	%rd5, %rd89;
	mul.f32 	%f153, %f12, 0f3456BF95;
	mul.f32 	%f154, %f13, 0f3456BF95;
	mul.f32 	%f155, %f14, 0f3456BF95;
	add.u64 	%rd90, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd90;
	mul.f32 	%f694, %f1245, %f150;
	mul.f32 	%f695, %f1246, %f149;
	sub.f32 	%f156, %f695, %f694;
	mul.f32 	%f696, %f1247, %f149;
	mul.f32 	%f697, %f1245, %f151;
	sub.f32 	%f157, %f697, %f696;
	mul.f32 	%f698, %f1246, %f151;
	mul.f32 	%f699, %f1247, %f150;
	sub.f32 	%f158, %f699, %f698;
	mov.f32 	%f1324, 0f00000000;
	mov.u32 	%r180, 0;
	abs.f32 	%f700, %f154;
	abs.f32 	%f701, %f153;
	max.f32 	%f702, %f701, %f700;
	abs.f32 	%f703, %f155;
	max.f32 	%f704, %f702, %f703;
	mov.u32 	%r411, %r180;
	mov.f32 	%f1325, %f1324;
	mov.f32 	%f1326, %f1324;
	mov.f32 	%f1327, %f1324;
	mov.f32 	%f1328, %f1324;
	mov.f32 	%f1329, %f1324;
	mov.f32 	%f1330, %f1324;
	mov.f32 	%f1331, %f1324;
	mov.f32 	%f1332, %f1324;
	mov.f32 	%f1333, %f1324;
	mov.f32 	%f1334, %f1324;
	mov.f32 	%f1335, %f1324;

BB0_33:
	cvt.rn.f32.s32	%f171, %r411;
	max.f32 	%f172, %f704, %f368;
	mov.u32 	%r413, %r180;

BB0_34:
	mad.lo.s32 	%r182, %r414, 1664525, 1013904223;
	and.b32  	%r183, %r182, 16777215;
	cvt.rn.f32.u32	%f706, %r183;
	fma.rn.f32 	%f707, %f706, 0f33800000, %f171;
	mul.f32 	%f185, %f152, %f707;
	mad.lo.s32 	%r414, %r182, 1664525, 1013904223;
	and.b32  	%r184, %r414, 16777215;
	cvt.rn.f32.u32	%f708, %r184;
	cvt.rn.f32.s32	%f709, %r413;
	fma.rn.f32 	%f710, %f708, 0f33800000, %f709;
	mul.f32 	%f711, %f152, %f710;
	mul.f32 	%f712, %f185, %f185;
	sub.f32 	%f714, %f656, %f712;
	mov.f32 	%f715, 0f00000000;
	max.f32 	%f716, %f715, %f714;
	sqrt.rn.f32 	%f186, %f716;
	mul.f32 	%f1342, %f711, 0f40C90FDB;
	abs.f32 	%f188, %f1342;
	setp.neu.f32	%p47, %f188, 0f7F800000;
	mov.f32 	%f1336, %f1342;
	@%p47 bra 	BB0_36;

	mul.rn.f32 	%f1336, %f1342, %f715;

BB0_36:
	mul.f32 	%f718, %f1336, 0f3F22F983;
	cvt.rni.s32.f32	%r424, %f718;
	cvt.rn.f32.s32	%f719, %r424;
	neg.f32 	%f720, %f719;
	mov.f32 	%f721, 0f3FC90FDA;
	fma.rn.f32 	%f722, %f720, %f721, %f1336;
	mov.f32 	%f723, 0f33A22168;
	fma.rn.f32 	%f724, %f720, %f723, %f722;
	mov.f32 	%f725, 0f27C234C5;
	fma.rn.f32 	%f1337, %f720, %f725, %f724;
	abs.f32 	%f726, %f1336;
	setp.leu.f32	%p48, %f726, 0f47CE4780;
	@%p48 bra 	BB0_47;

	mov.b32 	 %r27, %f1336;
	shr.u32 	%r28, %r27, 23;
	shl.b32 	%r187, %r27, 8;
	or.b32  	%r29, %r187, -2147483648;
	mov.u32 	%r415, 0;
	mov.u64 	%rd299, 0;
	mov.u64 	%rd298, %rd5;
	mov.u32 	%r416, %r415;

BB0_38:
	.pragma "nounroll";
	shl.b64 	%rd92, %rd299, 2;
	mov.u64 	%rd93, __cudart_i2opi_f;
	add.s64 	%rd94, %rd93, %rd92;
	ld.const.u32 	%r190, [%rd94];
	// inline asm
	{
	mad.lo.cc.u32   %r188, %r190, %r29, %r416;
	madc.hi.u32     %r416, %r190, %r29,  0;
	}
	// inline asm
	st.local.u32 	[%rd298], %r188;
	add.s32 	%r415, %r415, 1;
	cvt.s64.s32	%rd299, %r415;
	mul.wide.s32 	%rd95, %r415, 4;
	add.s64 	%rd298, %rd5, %rd95;
	setp.ne.s32	%p49, %r415, 6;
	@%p49 bra 	BB0_38;

	and.b32  	%r193, %r28, 255;
	add.s32 	%r194, %r193, -128;
	shr.u32 	%r195, %r194, 5;
	and.b32  	%r34, %r27, -2147483648;
	st.local.u32 	[%rd5+24], %r416;
	mov.u32 	%r196, 6;
	sub.s32 	%r197, %r196, %r195;
	mul.wide.s32 	%rd96, %r197, 4;
	add.s64 	%rd12, %rd5, %rd96;
	ld.local.u32 	%r417, [%rd12];
	ld.local.u32 	%r418, [%rd12+-4];
	and.b32  	%r37, %r28, 31;
	setp.eq.s32	%p50, %r37, 0;
	@%p50 bra 	BB0_41;

	mov.u32 	%r198, 32;
	sub.s32 	%r199, %r198, %r37;
	shr.u32 	%r200, %r418, %r199;
	shl.b32 	%r201, %r417, %r37;
	add.s32 	%r417, %r200, %r201;
	ld.local.u32 	%r202, [%rd12+-8];
	shr.u32 	%r203, %r202, %r199;
	shl.b32 	%r204, %r418, %r37;
	add.s32 	%r418, %r203, %r204;

BB0_41:
	shr.u32 	%r205, %r418, 30;
	shl.b32 	%r206, %r417, 2;
	add.s32 	%r419, %r205, %r206;
	shl.b32 	%r43, %r418, 2;
	shr.u32 	%r207, %r419, 31;
	shr.u32 	%r208, %r417, 30;
	add.s32 	%r44, %r207, %r208;
	setp.eq.s32	%p51, %r207, 0;
	@%p51 bra 	BB0_42;
	bra.uni 	BB0_43;

BB0_42:
	mov.u32 	%r420, %r34;
	mov.u32 	%r421, %r43;
	bra.uni 	BB0_44;

BB0_43:
	not.b32 	%r209, %r419;
	neg.s32 	%r421, %r43;
	setp.eq.s32	%p52, %r43, 0;
	selp.u32	%r210, 1, 0, %p52;
	add.s32 	%r419, %r210, %r209;
	xor.b32  	%r420, %r34, -2147483648;

BB0_44:
	clz.b32 	%r423, %r419;
	setp.eq.s32	%p53, %r423, 0;
	shl.b32 	%r211, %r419, %r423;
	mov.u32 	%r212, 32;
	sub.s32 	%r213, %r212, %r423;
	shr.u32 	%r214, %r421, %r213;
	add.s32 	%r215, %r214, %r211;
	selp.b32	%r52, %r419, %r215, %p53;
	mov.u32 	%r216, -921707870;
	mul.hi.u32 	%r422, %r52, %r216;
	setp.eq.s32	%p54, %r34, 0;
	neg.s32 	%r217, %r44;
	selp.b32	%r424, %r44, %r217, %p54;
	setp.lt.s32	%p55, %r422, 1;
	@%p55 bra 	BB0_46;

	mul.lo.s32 	%r218, %r52, -921707870;
	shr.u32 	%r219, %r218, 31;
	shl.b32 	%r220, %r422, 1;
	add.s32 	%r422, %r219, %r220;
	add.s32 	%r423, %r423, 1;

BB0_46:
	mov.u32 	%r221, 126;
	sub.s32 	%r222, %r221, %r423;
	shl.b32 	%r223, %r222, 23;
	add.s32 	%r224, %r422, 1;
	shr.u32 	%r225, %r224, 7;
	add.s32 	%r226, %r225, 1;
	shr.u32 	%r227, %r226, 1;
	add.s32 	%r228, %r227, %r223;
	or.b32  	%r229, %r228, %r420;
	mov.b32 	 %f1337, %r229;

BB0_47:
	mul.rn.f32 	%f194, %f1337, %f1337;
	add.s32 	%r60, %r424, 1;
	and.b32  	%r61, %r60, 1;
	setp.eq.s32	%p56, %r61, 0;
	@%p56 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f729, 0f3C08839E;
	mov.f32 	%f730, 0fB94CA1F9;
	fma.rn.f32 	%f1338, %f730, %f194, %f729;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f727, 0fBAB6061A;
	mov.f32 	%f728, 0f37CCF5CE;
	fma.rn.f32 	%f1338, %f728, %f194, %f727;

BB0_50:
	@%p56 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	mov.f32 	%f734, 0fBE2AAAA3;
	fma.rn.f32 	%f735, %f1338, %f194, %f734;
	fma.rn.f32 	%f1339, %f735, %f194, %f715;
	bra.uni 	BB0_53;

BB0_51:
	mov.f32 	%f731, 0f3D2AAAA5;
	fma.rn.f32 	%f732, %f1338, %f194, %f731;
	mov.f32 	%f733, 0fBF000000;
	fma.rn.f32 	%f1339, %f732, %f194, %f733;

BB0_53:
	fma.rn.f32 	%f1340, %f1339, %f1337, %f1337;
	@%p56 bra 	BB0_55;

	fma.rn.f32 	%f1340, %f1339, %f194, %f656;

BB0_55:
	and.b32  	%r230, %r60, 2;
	setp.eq.s32	%p59, %r230, 0;
	@%p59 bra 	BB0_57;

	mov.f32 	%f739, 0fBF800000;
	fma.rn.f32 	%f1340, %f1340, %f739, %f715;

BB0_57:
	@%p47 bra 	BB0_59;

	mul.rn.f32 	%f1342, %f1342, %f715;

BB0_59:
	mul.f32 	%f741, %f1342, 0f3F22F983;
	cvt.rni.s32.f32	%r434, %f741;
	cvt.rn.f32.s32	%f742, %r434;
	neg.f32 	%f743, %f742;
	fma.rn.f32 	%f745, %f743, %f721, %f1342;
	fma.rn.f32 	%f747, %f743, %f723, %f745;
	fma.rn.f32 	%f1343, %f743, %f725, %f747;
	abs.f32 	%f749, %f1342;
	setp.leu.f32	%p61, %f749, 0f47CE4780;
	@%p61 bra 	BB0_70;

	mov.b32 	 %r63, %f1342;
	shr.u32 	%r64, %r63, 23;
	shl.b32 	%r233, %r63, 8;
	or.b32  	%r65, %r233, -2147483648;
	mov.u32 	%r425, 0;
	mov.u64 	%rd300, %rd5;
	mov.u64 	%rd301, %rd29;
	mov.u32 	%r426, %r425;

BB0_61:
	.pragma "nounroll";
	shl.b64 	%rd98, %rd301, 2;
	mov.u64 	%rd99, __cudart_i2opi_f;
	add.s64 	%rd100, %rd99, %rd98;
	ld.const.u32 	%r236, [%rd100];
	// inline asm
	{
	mad.lo.cc.u32   %r234, %r236, %r65, %r426;
	madc.hi.u32     %r426, %r236, %r65,  0;
	}
	// inline asm
	st.local.u32 	[%rd300], %r234;
	add.s32 	%r425, %r425, 1;
	cvt.s64.s32	%rd301, %r425;
	mul.wide.s32 	%rd101, %r425, 4;
	add.s64 	%rd300, %rd5, %rd101;
	setp.ne.s32	%p62, %r425, 6;
	@%p62 bra 	BB0_61;

	and.b32  	%r239, %r64, 255;
	add.s32 	%r240, %r239, -128;
	shr.u32 	%r241, %r240, 5;
	and.b32  	%r70, %r63, -2147483648;
	st.local.u32 	[%rd5+24], %r426;
	mov.u32 	%r242, 6;
	sub.s32 	%r243, %r242, %r241;
	mul.wide.s32 	%rd102, %r243, 4;
	add.s64 	%rd18, %rd5, %rd102;
	ld.local.u32 	%r427, [%rd18];
	ld.local.u32 	%r428, [%rd18+-4];
	and.b32  	%r73, %r64, 31;
	setp.eq.s32	%p63, %r73, 0;
	@%p63 bra 	BB0_64;

	mov.u32 	%r244, 32;
	sub.s32 	%r245, %r244, %r73;
	shr.u32 	%r246, %r428, %r245;
	shl.b32 	%r247, %r427, %r73;
	add.s32 	%r427, %r246, %r247;
	ld.local.u32 	%r248, [%rd18+-8];
	shr.u32 	%r249, %r248, %r245;
	shl.b32 	%r250, %r428, %r73;
	add.s32 	%r428, %r249, %r250;

BB0_64:
	shr.u32 	%r251, %r428, 30;
	shl.b32 	%r252, %r427, 2;
	add.s32 	%r429, %r251, %r252;
	shl.b32 	%r79, %r428, 2;
	shr.u32 	%r253, %r429, 31;
	shr.u32 	%r254, %r427, 30;
	add.s32 	%r80, %r253, %r254;
	setp.eq.s32	%p64, %r253, 0;
	@%p64 bra 	BB0_65;
	bra.uni 	BB0_66;

BB0_65:
	mov.u32 	%r430, %r70;
	mov.u32 	%r431, %r79;
	bra.uni 	BB0_67;

BB0_66:
	not.b32 	%r255, %r429;
	neg.s32 	%r431, %r79;
	setp.eq.s32	%p65, %r79, 0;
	selp.u32	%r256, 1, 0, %p65;
	add.s32 	%r429, %r256, %r255;
	xor.b32  	%r430, %r70, -2147483648;

BB0_67:
	clz.b32 	%r433, %r429;
	setp.eq.s32	%p66, %r433, 0;
	shl.b32 	%r257, %r429, %r433;
	mov.u32 	%r258, 32;
	sub.s32 	%r259, %r258, %r433;
	shr.u32 	%r260, %r431, %r259;
	add.s32 	%r261, %r260, %r257;
	selp.b32	%r88, %r429, %r261, %p66;
	mov.u32 	%r262, -921707870;
	mul.hi.u32 	%r432, %r88, %r262;
	setp.eq.s32	%p67, %r70, 0;
	neg.s32 	%r263, %r80;
	selp.b32	%r434, %r80, %r263, %p67;
	setp.lt.s32	%p68, %r432, 1;
	@%p68 bra 	BB0_69;

	mul.lo.s32 	%r264, %r88, -921707870;
	shr.u32 	%r265, %r264, 31;
	shl.b32 	%r266, %r432, 1;
	add.s32 	%r432, %r265, %r266;
	add.s32 	%r433, %r433, 1;

BB0_69:
	mov.u32 	%r267, 126;
	sub.s32 	%r268, %r267, %r433;
	shl.b32 	%r269, %r268, 23;
	add.s32 	%r270, %r432, 1;
	shr.u32 	%r271, %r270, 7;
	add.s32 	%r272, %r271, 1;
	shr.u32 	%r273, %r272, 1;
	add.s32 	%r274, %r273, %r269;
	or.b32  	%r275, %r274, %r430;
	mov.b32 	 %f1343, %r275;

BB0_70:
	mul.rn.f32 	%f211, %f1343, %f1343;
	and.b32  	%r96, %r434, 1;
	setp.eq.s32	%p69, %r96, 0;
	@%p69 bra 	BB0_72;
	bra.uni 	BB0_71;

BB0_72:
	mov.f32 	%f752, 0f3C08839E;
	mov.f32 	%f753, 0fB94CA1F9;
	fma.rn.f32 	%f1344, %f753, %f211, %f752;
	bra.uni 	BB0_73;

BB0_71:
	mov.f32 	%f750, 0fBAB6061A;
	mov.f32 	%f751, 0f37CCF5CE;
	fma.rn.f32 	%f1344, %f751, %f211, %f750;

BB0_73:
	@%p69 bra 	BB0_75;
	bra.uni 	BB0_74;

BB0_75:
	mov.f32 	%f757, 0fBE2AAAA3;
	fma.rn.f32 	%f758, %f1344, %f211, %f757;
	fma.rn.f32 	%f1345, %f758, %f211, %f715;
	bra.uni 	BB0_76;

BB0_74:
	mov.f32 	%f754, 0f3D2AAAA5;
	fma.rn.f32 	%f755, %f1344, %f211, %f754;
	mov.f32 	%f756, 0fBF000000;
	fma.rn.f32 	%f1345, %f755, %f211, %f756;

BB0_76:
	fma.rn.f32 	%f1346, %f1345, %f1343, %f1343;
	@%p69 bra 	BB0_78;

	fma.rn.f32 	%f1346, %f1345, %f211, %f656;

BB0_78:
	and.b32  	%r276, %r434, 2;
	setp.eq.s32	%p72, %r276, 0;
	@%p72 bra 	BB0_80;

	mov.f32 	%f762, 0fBF800000;
	fma.rn.f32 	%f1346, %f1346, %f762, %f715;

BB0_80:
	mul.f32 	%f771, %f186, %f1340;
	mul.f32 	%f772, %f186, %f1346;
	mul.f32 	%f773, %f149, %f772;
	mul.f32 	%f774, %f150, %f772;
	mul.f32 	%f775, %f151, %f772;
	fma.rn.f32 	%f776, %f158, %f771, %f773;
	fma.rn.f32 	%f777, %f157, %f771, %f774;
	fma.rn.f32 	%f778, %f156, %f771, %f775;
	fma.rn.f32 	%f766, %f1245, %f185, %f776;
	fma.rn.f32 	%f767, %f1246, %f185, %f777;
	fma.rn.f32 	%f768, %f1247, %f185, %f778;
	mov.u32 	%r278, 0;
	st.local.u32 	[%rd6+8], %r278;
	st.local.u32 	[%rd6+4], %r278;
	st.local.u32 	[%rd6], %r278;
	ld.global.u32 	%r277, [root];
	mov.f32 	%f770, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r277, %f12, %f13, %f14, %f766, %f767, %f768, %r278, %f172, %f770, %rd90, %r125);
	// inline asm
	ld.local.f32 	%f779, [%rd6];
	max.f32 	%f781, %f779, %f715;
	ld.local.f32 	%f782, [%rd6+4];
	max.f32 	%f783, %f782, %f715;
	ld.local.f32 	%f784, [%rd6+8];
	max.f32 	%f785, %f784, %f715;
	mul.f32 	%f786, %f24, %f767;
	fma.rn.f32 	%f787, %f22, %f766, %f786;
	fma.rn.f32 	%f788, %f26, %f768, %f787;
	cvt.sat.f32.f32	%f789, %f788;
	fma.rn.f32 	%f1329, %f781, %f789, %f1329;
	fma.rn.f32 	%f1328, %f783, %f789, %f1328;
	fma.rn.f32 	%f1327, %f785, %f789, %f1327;
	mul.f32 	%f790, %f34, %f767;
	fma.rn.f32 	%f791, %f33, %f766, %f790;
	fma.rn.f32 	%f792, %f35, %f768, %f791;
	cvt.sat.f32.f32	%f793, %f792;
	fma.rn.f32 	%f1332, %f781, %f793, %f1332;
	fma.rn.f32 	%f1331, %f783, %f793, %f1331;
	fma.rn.f32 	%f1330, %f785, %f793, %f1330;
	mul.f32 	%f794, %f43, %f767;
	fma.rn.f32 	%f795, %f42, %f766, %f794;
	fma.rn.f32 	%f796, %f44, %f768, %f795;
	cvt.sat.f32.f32	%f797, %f796;
	fma.rn.f32 	%f1335, %f781, %f797, %f1335;
	fma.rn.f32 	%f1334, %f783, %f797, %f1334;
	fma.rn.f32 	%f1333, %f785, %f797, %f1333;
	mul.f32 	%f798, %f1246, %f767;
	fma.rn.f32 	%f799, %f1245, %f766, %f798;
	fma.rn.f32 	%f800, %f1247, %f768, %f799;
	cvt.sat.f32.f32	%f801, %f800;
	fma.rn.f32 	%f1326, %f781, %f801, %f1326;
	fma.rn.f32 	%f1325, %f783, %f801, %f1325;
	fma.rn.f32 	%f1324, %f785, %f801, %f1324;
	add.s32 	%r413, %r413, 1;
	setp.lt.s32	%p73, %r413, %r3;
	@%p73 bra 	BB0_34;

	add.s32 	%r411, %r411, 1;
	setp.lt.s32	%p74, %r411, %r3;
	@%p74 bra 	BB0_33;

BB0_82:
	mul.lo.s32 	%r280, %r3, %r3;
	cvt.rn.f32.s32	%f802, %r280;
	rcp.rn.f32 	%f803, %f802;
	mul.f32 	%f804, %f1326, %f803;
	mul.f32 	%f805, %f1325, %f803;
	mul.f32 	%f806, %f1324, %f803;
	div.rn.f32 	%f1372, %f670, %f802;
	mul.f32 	%f1366, %f1329, %f803;
	mul.f32 	%f1367, %f1328, %f803;
	mul.f32 	%f1368, %f1327, %f803;
	mul.f32 	%f1363, %f1332, %f803;
	mul.f32 	%f1364, %f1331, %f803;
	mul.f32 	%f1365, %f1330, %f803;
	mul.f32 	%f1360, %f1335, %f803;
	mul.f32 	%f1361, %f1334, %f803;
	mul.f32 	%f1362, %f1333, %f803;
	fma.rn.f32 	%f1369, %f1326, %f803, %f804;
	fma.rn.f32 	%f1370, %f1325, %f803, %f805;
	fma.rn.f32 	%f1371, %f1324, %f803, %f806;

BB0_83:
	setp.gt.s32	%p75, %r1, -1;
	selp.f32	%f273, %f1372, %f1369, %p75;
	ld.global.u32 	%r436, [imageEnabled];
	and.b32  	%r281, %r436, 8;
	setp.eq.s32	%p76, %r281, 0;
	@%p76 bra 	BB0_96;

	mov.u32 	%r394, 2;
	cvt.u64.u32	%rd106, %r5;
	cvt.u64.u32	%rd107, %r6;
	mov.u64 	%rd110, image_Mask;
	cvta.global.u64 	%rd105, %rd110;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r394, %r394, %rd106, %rd107, %rd29, %rd29);
	// inline asm
	mov.f32 	%f810, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f811, %f810;
	fma.rn.f32 	%f812, %f811, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f274, %f812;
	abs.f32 	%f275, %f273;
	setp.lt.f32	%p77, %f275, 0f00800000;
	mul.f32 	%f813, %f275, 0f4B800000;
	selp.f32	%f814, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f815, %f813, %f275, %p77;
	mov.b32 	 %r284, %f815;
	and.b32  	%r285, %r284, 8388607;
	or.b32  	%r286, %r285, 1065353216;
	mov.b32 	 %f816, %r286;
	shr.u32 	%r287, %r284, 23;
	cvt.rn.f32.u32	%f817, %r287;
	add.f32 	%f818, %f814, %f817;
	setp.gt.f32	%p78, %f816, 0f3FB504F3;
	mul.f32 	%f819, %f816, 0f3F000000;
	add.f32 	%f820, %f818, 0f3F800000;
	selp.f32	%f821, %f819, %f816, %p78;
	selp.f32	%f822, %f820, %f818, %p78;
	add.f32 	%f823, %f821, 0fBF800000;
	add.f32 	%f809, %f821, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f808,%f809;
	// inline asm
	add.f32 	%f824, %f823, %f823;
	mul.f32 	%f825, %f808, %f824;
	mul.f32 	%f826, %f825, %f825;
	mov.f32 	%f827, 0f3C4CAF63;
	mov.f32 	%f828, 0f3B18F0FE;
	fma.rn.f32 	%f829, %f828, %f826, %f827;
	mov.f32 	%f830, 0f3DAAAABD;
	fma.rn.f32 	%f831, %f829, %f826, %f830;
	mul.rn.f32 	%f832, %f831, %f826;
	mul.rn.f32 	%f833, %f832, %f825;
	sub.f32 	%f834, %f823, %f825;
	neg.f32 	%f835, %f825;
	add.f32 	%f836, %f834, %f834;
	fma.rn.f32 	%f837, %f835, %f823, %f836;
	mul.rn.f32 	%f838, %f808, %f837;
	add.f32 	%f839, %f833, %f825;
	sub.f32 	%f840, %f825, %f839;
	add.f32 	%f841, %f833, %f840;
	add.f32 	%f842, %f838, %f841;
	add.f32 	%f843, %f839, %f842;
	sub.f32 	%f844, %f839, %f843;
	add.f32 	%f845, %f842, %f844;
	mov.f32 	%f846, 0f3F317200;
	mul.rn.f32 	%f847, %f822, %f846;
	mov.f32 	%f848, 0f35BFBE8E;
	mul.rn.f32 	%f849, %f822, %f848;
	add.f32 	%f850, %f847, %f843;
	sub.f32 	%f851, %f847, %f850;
	add.f32 	%f852, %f843, %f851;
	add.f32 	%f853, %f845, %f852;
	add.f32 	%f854, %f849, %f853;
	add.f32 	%f855, %f850, %f854;
	sub.f32 	%f856, %f850, %f855;
	add.f32 	%f857, %f854, %f856;
	mov.f32 	%f858, 0f3EE8BA2E;
	mul.rn.f32 	%f859, %f858, %f855;
	neg.f32 	%f860, %f859;
	fma.rn.f32 	%f861, %f858, %f855, %f860;
	fma.rn.f32 	%f862, %f858, %f857, %f861;
	mov.f32 	%f863, 0f00000000;
	fma.rn.f32 	%f864, %f863, %f855, %f862;
	add.rn.f32 	%f865, %f859, %f864;
	neg.f32 	%f866, %f865;
	add.rn.f32 	%f867, %f859, %f866;
	add.rn.f32 	%f868, %f867, %f864;
	mov.b32 	 %r288, %f865;
	setp.eq.s32	%p79, %r288, 1118925336;
	add.s32 	%r289, %r288, -1;
	mov.b32 	 %f869, %r289;
	add.f32 	%f870, %f868, 0f37000000;
	selp.f32	%f871, %f869, %f865, %p79;
	selp.f32	%f276, %f870, %f868, %p79;
	mul.f32 	%f872, %f871, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f873, %f872;
	mov.f32 	%f874, 0fBF317200;
	fma.rn.f32 	%f875, %f873, %f874, %f871;
	mov.f32 	%f876, 0fB5BFBE8E;
	fma.rn.f32 	%f877, %f873, %f876, %f875;
	mul.f32 	%f878, %f877, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f879, %f878;
	add.f32 	%f880, %f873, 0f00000000;
	ex2.approx.f32 	%f881, %f880;
	mul.f32 	%f882, %f879, %f881;
	setp.lt.f32	%p80, %f871, 0fC2D20000;
	selp.f32	%f883, 0f00000000, %f882, %p80;
	setp.gt.f32	%p81, %f871, 0f42D20000;
	selp.f32	%f1373, 0f7F800000, %f883, %p81;
	setp.eq.f32	%p82, %f1373, 0f7F800000;
	@%p82 bra 	BB0_86;

	fma.rn.f32 	%f1373, %f1373, %f276, %f1373;

BB0_86:
	setp.lt.f32	%p83, %f273, 0f00000000;
	setp.eq.f32	%p84, %f274, 0f3F800000;
	and.pred  	%p3, %p83, %p84;
	mov.b32 	 %r290, %f1373;
	xor.b32  	%r291, %r290, -2147483648;
	mov.b32 	 %f884, %r291;
	selp.f32	%f1375, %f884, %f1373, %p3;
	setp.eq.f32	%p85, %f273, 0f00000000;
	@%p85 bra 	BB0_89;
	bra.uni 	BB0_87;

BB0_89:
	add.f32 	%f887, %f273, %f273;
	selp.f32	%f1375, %f887, 0f00000000, %p84;
	bra.uni 	BB0_90;

BB0_151:
	mov.u64 	%rd231, image_HDR;
	cvta.global.u64 	%rd226, %rd231;
	mov.u32 	%r370, 8;
	mov.u64 	%rd230, 0;
	// inline asm
	call (%rd225), _rt_buffer_get_64, (%rd226, %r109, %r370, %rd22, %rd23, %rd230, %rd230);
	// inline asm
	mov.f32 	%f1214, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f1214;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd225], {%rs116, %rs116, %rs116, %rs117};

BB0_152:
	ld.global.u32 	%r371, [additive];
	setp.eq.s32	%p154, %r371, 0;
	@%p154 bra 	BB0_154;

	mov.u64 	%rd244, image_RNM0;
	cvta.global.u64 	%rd233, %rd244;
	mov.u32 	%r375, 8;
	mov.u64 	%rd243, 0;
	// inline asm
	call (%rd232), _rt_buffer_get_64, (%rd233, %r109, %r375, %rd22, %rd23, %rd243, %rd243);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd232];
	// inline asm
	{  cvt.f32.f16 %f1215, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1216, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1217, %rs126;}

	// inline asm
	// inline asm
	call (%rd238), _rt_buffer_get_64, (%rd233, %r109, %r375, %rd22, %rd23, %rd243, %rd243);
	// inline asm
	add.f32 	%f1218, %f1215, 0f00000000;
	add.f32 	%f1219, %f1216, 0f00000000;
	add.f32 	%f1220, %f1217, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1220;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1219;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1218;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd238], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_155;

BB0_154:
	mov.u64 	%rd251, image_RNM0;
	cvta.global.u64 	%rd246, %rd251;
	mov.u32 	%r377, 8;
	mov.u64 	%rd250, 0;
	// inline asm
	call (%rd245), _rt_buffer_get_64, (%rd246, %r109, %r377, %rd22, %rd23, %rd250, %rd250);
	// inline asm
	mov.f32 	%f1221, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f1221;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd245], {%rs129, %rs129, %rs129, %rs130};

BB0_155:
	ld.global.u32 	%r378, [additive];
	setp.eq.s32	%p155, %r378, 0;
	@%p155 bra 	BB0_157;

	mov.u64 	%rd264, image_RNM1;
	cvta.global.u64 	%rd253, %rd264;
	mov.u32 	%r382, 8;
	mov.u64 	%rd263, 0;
	// inline asm
	call (%rd252), _rt_buffer_get_64, (%rd253, %r109, %r382, %rd22, %rd23, %rd263, %rd263);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd252];
	// inline asm
	{  cvt.f32.f16 %f1222, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1223, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1224, %rs139;}

	// inline asm
	// inline asm
	call (%rd258), _rt_buffer_get_64, (%rd253, %r109, %r382, %rd22, %rd23, %rd263, %rd263);
	// inline asm
	add.f32 	%f1225, %f1222, 0f00000000;
	add.f32 	%f1226, %f1223, 0f00000000;
	add.f32 	%f1227, %f1224, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1227;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1226;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1225;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd258], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_158;

BB0_157:
	mov.u64 	%rd271, image_RNM1;
	cvta.global.u64 	%rd266, %rd271;
	mov.u32 	%r384, 8;
	mov.u64 	%rd270, 0;
	// inline asm
	call (%rd265), _rt_buffer_get_64, (%rd266, %r109, %r384, %rd22, %rd23, %rd270, %rd270);
	// inline asm
	mov.f32 	%f1228, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f1228;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd265], {%rs142, %rs142, %rs142, %rs143};

BB0_158:
	ld.global.u32 	%r385, [additive];
	setp.eq.s32	%p156, %r385, 0;
	@%p156 bra 	BB0_160;

	mov.u64 	%rd284, image_RNM2;
	cvta.global.u64 	%rd273, %rd284;
	mov.u32 	%r389, 8;
	mov.u64 	%rd283, 0;
	// inline asm
	call (%rd272), _rt_buffer_get_64, (%rd273, %r109, %r389, %rd22, %rd23, %rd283, %rd283);
	// inline asm
	ld.v4.u16 	{%rs150, %rs151, %rs152, %rs153}, [%rd272];
	// inline asm
	{  cvt.f32.f16 %f1229, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1230, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1231, %rs152;}

	// inline asm
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd273, %r109, %r389, %rd22, %rd23, %rd283, %rd283);
	// inline asm
	add.f32 	%f1232, %f1229, 0f00000000;
	add.f32 	%f1233, %f1230, 0f00000000;
	add.f32 	%f1234, %f1231, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1234;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1233;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1232;}

	// inline asm
	mov.u16 	%rs154, 0;
	st.v4.u16 	[%rd278], {%rs147, %rs148, %rs149, %rs154};
	bra.uni 	BB0_161;

BB0_160:
	mov.u64 	%rd291, image_RNM2;
	cvta.global.u64 	%rd286, %rd291;
	mov.u32 	%r391, 8;
	mov.u64 	%rd290, 0;
	// inline asm
	call (%rd285), _rt_buffer_get_64, (%rd286, %r109, %r391, %rd22, %rd23, %rd290, %rd290);
	// inline asm
	mov.f32 	%f1235, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f1235;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd285], {%rs155, %rs155, %rs155, %rs156};
	bra.uni 	BB0_161;

BB0_87:
	setp.geu.f32	%p86, %f273, 0f00000000;
	@%p86 bra 	BB0_90;

	cvt.rzi.f32.f32	%f886, %f858;
	setp.neu.f32	%p87, %f886, 0f3EE8BA2E;
	selp.f32	%f1375, 0f7FFFFFFF, %f1375, %p87;

BB0_90:
	add.f32 	%f888, %f275, 0f3EE8BA2E;
	mov.b32 	 %r292, %f888;
	setp.lt.s32	%p89, %r292, 2139095040;
	@%p89 bra 	BB0_95;

	setp.gtu.f32	%p90, %f275, 0f7F800000;
	@%p90 bra 	BB0_94;
	bra.uni 	BB0_92;

BB0_94:
	add.f32 	%f1375, %f273, 0f3EE8BA2E;
	bra.uni 	BB0_95;

BB0_92:
	setp.neu.f32	%p91, %f275, 0f7F800000;
	@%p91 bra 	BB0_95;

	selp.f32	%f1375, 0fFF800000, 0f7F800000, %p3;

BB0_95:
	mul.f32 	%f889, %f1375, 0f437F0000;
	setp.eq.f32	%p92, %f273, 0f3F800000;
	selp.f32	%f890, 0f437F0000, %f889, %p92;
	cvt.rzi.u32.f32	%r293, %f890;
	cvt.u16.u32	%rs40, %r293;
	mov.u16 	%rs41, 255;
	st.v2.u8 	[%rd104], {%rs40, %rs41};
	ld.global.u32 	%r436, [imageEnabled];

BB0_96:
	ld.global.f32 	%f891, [lightColor];
	mul.f32 	%f287, %f1369, %f891;
	ld.global.f32 	%f892, [lightColor+4];
	mul.f32 	%f288, %f1370, %f892;
	ld.global.f32 	%f893, [lightColor+8];
	mul.f32 	%f289, %f1371, %f893;
	and.b32  	%r294, %r436, 1;
	setp.eq.b32	%p93, %r294, 1;
	@!%p93 bra 	BB0_131;
	bra.uni 	BB0_97;

BB0_97:
	mov.f32 	%f896, 0f3E666666;
	cvt.rzi.f32.f32	%f897, %f896;
	fma.rn.f32 	%f898, %f897, 0fC0000000, 0f3EE66666;
	abs.f32 	%f290, %f898;
	abs.f32 	%f291, %f287;
	setp.lt.f32	%p94, %f291, 0f00800000;
	mul.f32 	%f899, %f291, 0f4B800000;
	selp.f32	%f900, 0fC3170000, 0fC2FE0000, %p94;
	selp.f32	%f901, %f899, %f291, %p94;
	mov.b32 	 %r295, %f901;
	and.b32  	%r296, %r295, 8388607;
	or.b32  	%r297, %r296, 1065353216;
	mov.b32 	 %f902, %r297;
	shr.u32 	%r298, %r295, 23;
	cvt.rn.f32.u32	%f903, %r298;
	add.f32 	%f904, %f900, %f903;
	setp.gt.f32	%p95, %f902, 0f3FB504F3;
	mul.f32 	%f905, %f902, 0f3F000000;
	add.f32 	%f906, %f904, 0f3F800000;
	selp.f32	%f907, %f905, %f902, %p95;
	selp.f32	%f908, %f906, %f904, %p95;
	add.f32 	%f909, %f907, 0fBF800000;
	add.f32 	%f895, %f907, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f894,%f895;
	// inline asm
	add.f32 	%f910, %f909, %f909;
	mul.f32 	%f911, %f894, %f910;
	mul.f32 	%f912, %f911, %f911;
	mov.f32 	%f913, 0f3C4CAF63;
	mov.f32 	%f914, 0f3B18F0FE;
	fma.rn.f32 	%f915, %f914, %f912, %f913;
	mov.f32 	%f916, 0f3DAAAABD;
	fma.rn.f32 	%f917, %f915, %f912, %f916;
	mul.rn.f32 	%f918, %f917, %f912;
	mul.rn.f32 	%f919, %f918, %f911;
	sub.f32 	%f920, %f909, %f911;
	neg.f32 	%f921, %f911;
	add.f32 	%f922, %f920, %f920;
	fma.rn.f32 	%f923, %f921, %f909, %f922;
	mul.rn.f32 	%f924, %f894, %f923;
	add.f32 	%f925, %f919, %f911;
	sub.f32 	%f926, %f911, %f925;
	add.f32 	%f927, %f919, %f926;
	add.f32 	%f928, %f924, %f927;
	add.f32 	%f929, %f925, %f928;
	sub.f32 	%f930, %f925, %f929;
	add.f32 	%f931, %f928, %f930;
	mov.f32 	%f932, 0f3F317200;
	mul.rn.f32 	%f933, %f908, %f932;
	mov.f32 	%f934, 0f35BFBE8E;
	mul.rn.f32 	%f935, %f908, %f934;
	add.f32 	%f936, %f933, %f929;
	sub.f32 	%f937, %f933, %f936;
	add.f32 	%f938, %f929, %f937;
	add.f32 	%f939, %f931, %f938;
	add.f32 	%f940, %f935, %f939;
	add.f32 	%f941, %f936, %f940;
	sub.f32 	%f942, %f936, %f941;
	add.f32 	%f943, %f940, %f942;
	mov.f32 	%f944, 0f3EE66666;
	mul.rn.f32 	%f945, %f944, %f941;
	neg.f32 	%f946, %f945;
	fma.rn.f32 	%f947, %f944, %f941, %f946;
	fma.rn.f32 	%f948, %f944, %f943, %f947;
	mov.f32 	%f949, 0f00000000;
	fma.rn.f32 	%f950, %f949, %f941, %f948;
	add.rn.f32 	%f951, %f945, %f950;
	neg.f32 	%f952, %f951;
	add.rn.f32 	%f953, %f945, %f952;
	add.rn.f32 	%f954, %f953, %f950;
	mov.b32 	 %r299, %f951;
	setp.eq.s32	%p96, %r299, 1118925336;
	add.s32 	%r300, %r299, -1;
	mov.b32 	 %f955, %r300;
	add.f32 	%f956, %f954, 0f37000000;
	selp.f32	%f957, %f955, %f951, %p96;
	selp.f32	%f292, %f956, %f954, %p96;
	mul.f32 	%f958, %f957, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f959, %f958;
	mov.f32 	%f960, 0fBF317200;
	fma.rn.f32 	%f961, %f959, %f960, %f957;
	mov.f32 	%f962, 0fB5BFBE8E;
	fma.rn.f32 	%f963, %f959, %f962, %f961;
	mul.f32 	%f964, %f963, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f965, %f964;
	add.f32 	%f966, %f959, 0f00000000;
	ex2.approx.f32 	%f967, %f966;
	mul.f32 	%f968, %f965, %f967;
	setp.lt.f32	%p97, %f957, 0fC2D20000;
	selp.f32	%f969, 0f00000000, %f968, %p97;
	setp.gt.f32	%p98, %f957, 0f42D20000;
	selp.f32	%f1376, 0f7F800000, %f969, %p98;
	setp.eq.f32	%p99, %f1376, 0f7F800000;
	@%p99 bra 	BB0_99;

	fma.rn.f32 	%f1376, %f1376, %f292, %f1376;

BB0_99:
	setp.lt.f32	%p100, %f287, 0f00000000;
	setp.eq.f32	%p101, %f290, 0f3F800000;
	and.pred  	%p4, %p100, %p101;
	mov.b32 	 %r301, %f1376;
	xor.b32  	%r302, %r301, -2147483648;
	mov.b32 	 %f970, %r302;
	selp.f32	%f1378, %f970, %f1376, %p4;
	setp.eq.f32	%p102, %f287, 0f00000000;
	@%p102 bra 	BB0_102;
	bra.uni 	BB0_100;

BB0_102:
	add.f32 	%f973, %f287, %f287;
	selp.f32	%f1378, %f973, 0f00000000, %p101;
	bra.uni 	BB0_103;

BB0_100:
	setp.geu.f32	%p103, %f287, 0f00000000;
	@%p103 bra 	BB0_103;

	cvt.rzi.f32.f32	%f972, %f944;
	setp.neu.f32	%p104, %f972, 0f3EE66666;
	selp.f32	%f1378, 0f7FFFFFFF, %f1378, %p104;

BB0_103:
	add.f32 	%f974, %f291, 0f3EE66666;
	mov.b32 	 %r303, %f974;
	setp.lt.s32	%p106, %r303, 2139095040;
	@%p106 bra 	BB0_108;

	setp.gtu.f32	%p107, %f291, 0f7F800000;
	@%p107 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f1378, %f287, 0f3EE66666;
	bra.uni 	BB0_108;

BB0_105:
	setp.neu.f32	%p108, %f291, 0f7F800000;
	@%p108 bra 	BB0_108;

	selp.f32	%f1378, 0fFF800000, 0f7F800000, %p4;

BB0_108:
	setp.eq.f32	%p109, %f287, 0f3F800000;
	selp.f32	%f303, 0f3F800000, %f1378, %p109;
	abs.f32 	%f304, %f288;
	setp.lt.f32	%p110, %f304, 0f00800000;
	mul.f32 	%f977, %f304, 0f4B800000;
	selp.f32	%f978, 0fC3170000, 0fC2FE0000, %p110;
	selp.f32	%f979, %f977, %f304, %p110;
	mov.b32 	 %r304, %f979;
	and.b32  	%r305, %r304, 8388607;
	or.b32  	%r306, %r305, 1065353216;
	mov.b32 	 %f980, %r306;
	shr.u32 	%r307, %r304, 23;
	cvt.rn.f32.u32	%f981, %r307;
	add.f32 	%f982, %f978, %f981;
	setp.gt.f32	%p111, %f980, 0f3FB504F3;
	mul.f32 	%f983, %f980, 0f3F000000;
	add.f32 	%f984, %f982, 0f3F800000;
	selp.f32	%f985, %f983, %f980, %p111;
	selp.f32	%f986, %f984, %f982, %p111;
	add.f32 	%f987, %f985, 0fBF800000;
	add.f32 	%f976, %f985, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f975,%f976;
	// inline asm
	add.f32 	%f988, %f987, %f987;
	mul.f32 	%f989, %f975, %f988;
	mul.f32 	%f990, %f989, %f989;
	fma.rn.f32 	%f993, %f914, %f990, %f913;
	fma.rn.f32 	%f995, %f993, %f990, %f916;
	mul.rn.f32 	%f996, %f995, %f990;
	mul.rn.f32 	%f997, %f996, %f989;
	sub.f32 	%f998, %f987, %f989;
	neg.f32 	%f999, %f989;
	add.f32 	%f1000, %f998, %f998;
	fma.rn.f32 	%f1001, %f999, %f987, %f1000;
	mul.rn.f32 	%f1002, %f975, %f1001;
	add.f32 	%f1003, %f997, %f989;
	sub.f32 	%f1004, %f989, %f1003;
	add.f32 	%f1005, %f997, %f1004;
	add.f32 	%f1006, %f1002, %f1005;
	add.f32 	%f1007, %f1003, %f1006;
	sub.f32 	%f1008, %f1003, %f1007;
	add.f32 	%f1009, %f1006, %f1008;
	mul.rn.f32 	%f1011, %f986, %f932;
	mul.rn.f32 	%f1013, %f986, %f934;
	add.f32 	%f1014, %f1011, %f1007;
	sub.f32 	%f1015, %f1011, %f1014;
	add.f32 	%f1016, %f1007, %f1015;
	add.f32 	%f1017, %f1009, %f1016;
	add.f32 	%f1018, %f1013, %f1017;
	add.f32 	%f1019, %f1014, %f1018;
	sub.f32 	%f1020, %f1014, %f1019;
	add.f32 	%f1021, %f1018, %f1020;
	mul.rn.f32 	%f1023, %f944, %f1019;
	neg.f32 	%f1024, %f1023;
	fma.rn.f32 	%f1025, %f944, %f1019, %f1024;
	fma.rn.f32 	%f1026, %f944, %f1021, %f1025;
	fma.rn.f32 	%f1028, %f949, %f1019, %f1026;
	add.rn.f32 	%f1029, %f1023, %f1028;
	neg.f32 	%f1030, %f1029;
	add.rn.f32 	%f1031, %f1023, %f1030;
	add.rn.f32 	%f1032, %f1031, %f1028;
	mov.b32 	 %r308, %f1029;
	setp.eq.s32	%p112, %r308, 1118925336;
	add.s32 	%r309, %r308, -1;
	mov.b32 	 %f1033, %r309;
	add.f32 	%f1034, %f1032, 0f37000000;
	selp.f32	%f1035, %f1033, %f1029, %p112;
	selp.f32	%f305, %f1034, %f1032, %p112;
	mul.f32 	%f1036, %f1035, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1037, %f1036;
	fma.rn.f32 	%f1039, %f1037, %f960, %f1035;
	fma.rn.f32 	%f1041, %f1037, %f962, %f1039;
	mul.f32 	%f1042, %f1041, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1043, %f1042;
	add.f32 	%f1044, %f1037, 0f00000000;
	ex2.approx.f32 	%f1045, %f1044;
	mul.f32 	%f1046, %f1043, %f1045;
	setp.lt.f32	%p113, %f1035, 0fC2D20000;
	selp.f32	%f1047, 0f00000000, %f1046, %p113;
	setp.gt.f32	%p114, %f1035, 0f42D20000;
	selp.f32	%f1379, 0f7F800000, %f1047, %p114;
	setp.eq.f32	%p115, %f1379, 0f7F800000;
	@%p115 bra 	BB0_110;

	fma.rn.f32 	%f1379, %f1379, %f305, %f1379;

BB0_110:
	setp.lt.f32	%p116, %f288, 0f00000000;
	and.pred  	%p5, %p116, %p101;
	mov.b32 	 %r310, %f1379;
	xor.b32  	%r311, %r310, -2147483648;
	mov.b32 	 %f1048, %r311;
	selp.f32	%f1381, %f1048, %f1379, %p5;
	setp.eq.f32	%p118, %f288, 0f00000000;
	@%p118 bra 	BB0_113;
	bra.uni 	BB0_111;

BB0_113:
	add.f32 	%f1051, %f288, %f288;
	selp.f32	%f1381, %f1051, 0f00000000, %p101;
	bra.uni 	BB0_114;

BB0_111:
	setp.geu.f32	%p119, %f288, 0f00000000;
	@%p119 bra 	BB0_114;

	cvt.rzi.f32.f32	%f1050, %f944;
	setp.neu.f32	%p120, %f1050, 0f3EE66666;
	selp.f32	%f1381, 0f7FFFFFFF, %f1381, %p120;

BB0_114:
	add.f32 	%f1052, %f304, 0f3EE66666;
	mov.b32 	 %r312, %f1052;
	setp.lt.s32	%p122, %r312, 2139095040;
	@%p122 bra 	BB0_119;

	setp.gtu.f32	%p123, %f304, 0f7F800000;
	@%p123 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f1381, %f288, 0f3EE66666;
	bra.uni 	BB0_119;

BB0_116:
	setp.neu.f32	%p124, %f304, 0f7F800000;
	@%p124 bra 	BB0_119;

	selp.f32	%f1381, 0fFF800000, 0f7F800000, %p5;

BB0_119:
	setp.eq.f32	%p125, %f288, 0f3F800000;
	selp.f32	%f316, 0f3F800000, %f1381, %p125;
	abs.f32 	%f317, %f289;
	setp.lt.f32	%p126, %f317, 0f00800000;
	mul.f32 	%f1055, %f317, 0f4B800000;
	selp.f32	%f1056, 0fC3170000, 0fC2FE0000, %p126;
	selp.f32	%f1057, %f1055, %f317, %p126;
	mov.b32 	 %r313, %f1057;
	and.b32  	%r314, %r313, 8388607;
	or.b32  	%r315, %r314, 1065353216;
	mov.b32 	 %f1058, %r315;
	shr.u32 	%r316, %r313, 23;
	cvt.rn.f32.u32	%f1059, %r316;
	add.f32 	%f1060, %f1056, %f1059;
	setp.gt.f32	%p127, %f1058, 0f3FB504F3;
	mul.f32 	%f1061, %f1058, 0f3F000000;
	add.f32 	%f1062, %f1060, 0f3F800000;
	selp.f32	%f1063, %f1061, %f1058, %p127;
	selp.f32	%f1064, %f1062, %f1060, %p127;
	add.f32 	%f1065, %f1063, 0fBF800000;
	add.f32 	%f1054, %f1063, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1053,%f1054;
	// inline asm
	add.f32 	%f1066, %f1065, %f1065;
	mul.f32 	%f1067, %f1053, %f1066;
	mul.f32 	%f1068, %f1067, %f1067;
	fma.rn.f32 	%f1071, %f914, %f1068, %f913;
	fma.rn.f32 	%f1073, %f1071, %f1068, %f916;
	mul.rn.f32 	%f1074, %f1073, %f1068;
	mul.rn.f32 	%f1075, %f1074, %f1067;
	sub.f32 	%f1076, %f1065, %f1067;
	neg.f32 	%f1077, %f1067;
	add.f32 	%f1078, %f1076, %f1076;
	fma.rn.f32 	%f1079, %f1077, %f1065, %f1078;
	mul.rn.f32 	%f1080, %f1053, %f1079;
	add.f32 	%f1081, %f1075, %f1067;
	sub.f32 	%f1082, %f1067, %f1081;
	add.f32 	%f1083, %f1075, %f1082;
	add.f32 	%f1084, %f1080, %f1083;
	add.f32 	%f1085, %f1081, %f1084;
	sub.f32 	%f1086, %f1081, %f1085;
	add.f32 	%f1087, %f1084, %f1086;
	mul.rn.f32 	%f1089, %f1064, %f932;
	mul.rn.f32 	%f1091, %f1064, %f934;
	add.f32 	%f1092, %f1089, %f1085;
	sub.f32 	%f1093, %f1089, %f1092;
	add.f32 	%f1094, %f1085, %f1093;
	add.f32 	%f1095, %f1087, %f1094;
	add.f32 	%f1096, %f1091, %f1095;
	add.f32 	%f1097, %f1092, %f1096;
	sub.f32 	%f1098, %f1092, %f1097;
	add.f32 	%f1099, %f1096, %f1098;
	mul.rn.f32 	%f1101, %f944, %f1097;
	neg.f32 	%f1102, %f1101;
	fma.rn.f32 	%f1103, %f944, %f1097, %f1102;
	fma.rn.f32 	%f1104, %f944, %f1099, %f1103;
	fma.rn.f32 	%f1106, %f949, %f1097, %f1104;
	add.rn.f32 	%f1107, %f1101, %f1106;
	neg.f32 	%f1108, %f1107;
	add.rn.f32 	%f1109, %f1101, %f1108;
	add.rn.f32 	%f1110, %f1109, %f1106;
	mov.b32 	 %r317, %f1107;
	setp.eq.s32	%p128, %r317, 1118925336;
	add.s32 	%r318, %r317, -1;
	mov.b32 	 %f1111, %r318;
	add.f32 	%f1112, %f1110, 0f37000000;
	selp.f32	%f1113, %f1111, %f1107, %p128;
	selp.f32	%f318, %f1112, %f1110, %p128;
	mul.f32 	%f1114, %f1113, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1115, %f1114;
	fma.rn.f32 	%f1117, %f1115, %f960, %f1113;
	fma.rn.f32 	%f1119, %f1115, %f962, %f1117;
	mul.f32 	%f1120, %f1119, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1121, %f1120;
	add.f32 	%f1122, %f1115, 0f00000000;
	ex2.approx.f32 	%f1123, %f1122;
	mul.f32 	%f1124, %f1121, %f1123;
	setp.lt.f32	%p129, %f1113, 0fC2D20000;
	selp.f32	%f1125, 0f00000000, %f1124, %p129;
	setp.gt.f32	%p130, %f1113, 0f42D20000;
	selp.f32	%f1382, 0f7F800000, %f1125, %p130;
	setp.eq.f32	%p131, %f1382, 0f7F800000;
	@%p131 bra 	BB0_121;

	fma.rn.f32 	%f1382, %f1382, %f318, %f1382;

BB0_121:
	setp.lt.f32	%p132, %f289, 0f00000000;
	and.pred  	%p6, %p132, %p101;
	mov.b32 	 %r319, %f1382;
	xor.b32  	%r320, %r319, -2147483648;
	mov.b32 	 %f1126, %r320;
	selp.f32	%f1384, %f1126, %f1382, %p6;
	setp.eq.f32	%p134, %f289, 0f00000000;
	@%p134 bra 	BB0_124;
	bra.uni 	BB0_122;

BB0_124:
	add.f32 	%f1129, %f289, %f289;
	selp.f32	%f1384, %f1129, 0f00000000, %p101;
	bra.uni 	BB0_125;

BB0_122:
	setp.geu.f32	%p135, %f289, 0f00000000;
	@%p135 bra 	BB0_125;

	cvt.rzi.f32.f32	%f1128, %f944;
	setp.neu.f32	%p136, %f1128, 0f3EE66666;
	selp.f32	%f1384, 0f7FFFFFFF, %f1384, %p136;

BB0_125:
	add.f32 	%f1130, %f317, 0f3EE66666;
	mov.b32 	 %r321, %f1130;
	setp.lt.s32	%p138, %r321, 2139095040;
	@%p138 bra 	BB0_130;

	setp.gtu.f32	%p139, %f317, 0f7F800000;
	@%p139 bra 	BB0_129;
	bra.uni 	BB0_127;

BB0_129:
	add.f32 	%f1384, %f289, 0f3EE66666;
	bra.uni 	BB0_130;

BB0_127:
	setp.neu.f32	%p140, %f317, 0f7F800000;
	@%p140 bra 	BB0_130;

	selp.f32	%f1384, 0fFF800000, 0f7F800000, %p6;

BB0_130:
	mov.u32 	%r395, 2;
	setp.eq.f32	%p141, %f289, 0f3F800000;
	selp.f32	%f1131, 0f3F800000, %f1384, %p141;
	cvt.u64.u32	%rd114, %r6;
	cvt.u64.u32	%rd113, %r5;
	mov.u64 	%rd117, image;
	cvta.global.u64 	%rd112, %rd117;
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd112, %r395, %r110, %rd113, %rd114, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f1132, %f1131;
	mul.f32 	%f1133, %f1132, 0f437FFD71;
	cvt.rzi.u32.f32	%r324, %f1133;
	cvt.sat.f32.f32	%f1134, %f316;
	mul.f32 	%f1135, %f1134, 0f437FFD71;
	cvt.rzi.u32.f32	%r325, %f1135;
	cvt.sat.f32.f32	%f1136, %f303;
	mul.f32 	%f1137, %f1136, 0f437FFD71;
	cvt.rzi.u32.f32	%r326, %f1137;
	cvt.u16.u32	%rs42, %r324;
	cvt.u16.u32	%rs43, %r326;
	cvt.u16.u32	%rs44, %r325;
	mov.u16 	%rs45, 255;
	st.v4.u8 	[%rd111], {%rs42, %rs44, %rs43, %rs45};
	ld.global.u32 	%r436, [imageEnabled];

BB0_131:
	cvt.u64.u32	%rd20, %r5;
	cvt.u64.u32	%rd21, %r6;
	and.b32  	%r327, %r436, 4;
	setp.eq.s32	%p142, %r327, 0;
	@%p142 bra 	BB0_135;

	ld.global.u32 	%r328, [additive];
	setp.eq.s32	%p143, %r328, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f656;}

	// inline asm
	@%p143 bra 	BB0_134;

	mov.u32 	%r396, 2;
	mov.u64 	%rd130, image_HDR;
	cvta.global.u64 	%rd119, %rd130;
	mov.u32 	%r332, 8;
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd119, %r396, %r332, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs53, %rs54, %rs55, %rs56}, [%rd118];
	// inline asm
	{  cvt.f32.f16 %f1139, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1140, %rs54;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1141, %rs55;}

	// inline asm
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd119, %r396, %r332, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1142, %f287, %f1139;
	add.f32 	%f1143, %f288, %f1140;
	add.f32 	%f1144, %f289, %f1141;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1144;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1143;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f1142;}

	// inline asm
	st.v4.u16 	[%rd124], {%rs50, %rs51, %rs52, %rs46};
	bra.uni 	BB0_135;

BB0_134:
	mov.u32 	%r397, 2;
	mov.u64 	%rd137, image_HDR;
	cvta.global.u64 	%rd132, %rd137;
	mov.u32 	%r334, 8;
	// inline asm
	call (%rd131), _rt_buffer_get_64, (%rd132, %r397, %r334, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f289;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f288;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f287;}

	// inline asm
	st.v4.u16 	[%rd131], {%rs57, %rs58, %rs59, %rs46};

BB0_135:
	ld.global.f32 	%f1149, [lightColor];
	mul.f32 	%f1150, %f1366, %f1149;
	ld.global.f32 	%f1151, [lightColor+4];
	mul.f32 	%f1152, %f1367, %f1151;
	ld.global.f32 	%f1153, [lightColor+8];
	mul.f32 	%f1154, %f1368, %f1153;
	mul.f32 	%f1155, %f1363, %f1149;
	mul.f32 	%f1156, %f1364, %f1151;
	mul.f32 	%f1157, %f1365, %f1153;
	mul.f32 	%f1158, %f1360, %f1149;
	mul.f32 	%f1159, %f1361, %f1151;
	mul.f32 	%f1160, %f1362, %f1153;
	add.f32 	%f1161, %f1150, %f1155;
	add.f32 	%f1162, %f1152, %f1156;
	add.f32 	%f1163, %f1154, %f1157;
	add.f32 	%f1164, %f1161, %f1158;
	add.f32 	%f1165, %f1162, %f1159;
	add.f32 	%f1166, %f1163, %f1160;
	mul.f32 	%f1167, %f1164, 0f3F13CD3A;
	mul.f32 	%f1168, %f1165, 0f3F13CD3A;
	mul.f32 	%f1169, %f1166, 0f3F13CD3A;
	div.rn.f32 	%f1170, %f287, %f1167;
	div.rn.f32 	%f1171, %f288, %f1168;
	div.rn.f32 	%f1172, %f289, %f1169;
	setp.eq.f32	%p144, %f287, 0f00000000;
	selp.f32	%f1173, 0f00000000, %f1170, %p144;
	setp.eq.f32	%p145, %f288, 0f00000000;
	selp.f32	%f1174, 0f00000000, %f1171, %p145;
	setp.eq.f32	%p146, %f289, 0f00000000;
	selp.f32	%f1175, 0f00000000, %f1172, %p146;
	mul.f32 	%f329, %f1150, %f1173;
	mul.f32 	%f330, %f1152, %f1174;
	mul.f32 	%f331, %f1154, %f1175;
	mul.f32 	%f332, %f1155, %f1173;
	mul.f32 	%f333, %f1156, %f1174;
	mul.f32 	%f334, %f1157, %f1175;
	mul.f32 	%f335, %f1158, %f1173;
	mul.f32 	%f336, %f1159, %f1174;
	mul.f32 	%f337, %f1160, %f1175;
	ld.global.u32 	%r335, [additive];
	setp.eq.s32	%p147, %r335, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f656;}

	// inline asm
	@%p147 bra 	BB0_137;

	mov.u32 	%r398, 2;
	mov.u64 	%rd150, image_RNM0;
	cvta.global.u64 	%rd139, %rd150;
	mov.u32 	%r339, 8;
	// inline asm
	call (%rd138), _rt_buffer_get_64, (%rd139, %r398, %r339, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd138];
	// inline asm
	{  cvt.f32.f16 %f1176, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1177, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1178, %rs69;}

	// inline asm
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd139, %r398, %r339, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1179, %f329, %f1176;
	add.f32 	%f1180, %f330, %f1177;
	add.f32 	%f1181, %f331, %f1178;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1181;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1180;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1179;}

	// inline asm
	st.v4.u16 	[%rd144], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_138;

BB0_137:
	mov.u32 	%r403, 2;
	mov.u64 	%rd157, image_RNM0;
	cvta.global.u64 	%rd152, %rd157;
	mov.u32 	%r341, 8;
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd152, %r403, %r341, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f331;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f330;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f329;}

	// inline asm
	st.v4.u16 	[%rd151], {%rs71, %rs72, %rs73, %rs60};

BB0_138:
	ld.global.u32 	%r342, [additive];
	setp.eq.s32	%p148, %r342, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f656;}

	// inline asm
	@%p148 bra 	BB0_140;

	mov.u32 	%r399, 2;
	mov.u64 	%rd170, image_RNM1;
	cvta.global.u64 	%rd159, %rd170;
	mov.u32 	%r346, 8;
	// inline asm
	call (%rd158), _rt_buffer_get_64, (%rd159, %r399, %r346, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd158];
	// inline asm
	{  cvt.f32.f16 %f1186, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1187, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1188, %rs83;}

	// inline asm
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd159, %r399, %r346, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1189, %f332, %f1186;
	add.f32 	%f1190, %f333, %f1187;
	add.f32 	%f1191, %f334, %f1188;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1191;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f1190;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f1189;}

	// inline asm
	st.v4.u16 	[%rd164], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_141;

BB0_140:
	mov.u32 	%r402, 2;
	mov.u64 	%rd177, image_RNM1;
	cvta.global.u64 	%rd172, %rd177;
	mov.u32 	%r348, 8;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r402, %r348, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f334;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f333;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f332;}

	// inline asm
	st.v4.u16 	[%rd171], {%rs85, %rs86, %rs87, %rs74};

BB0_141:
	ld.global.u32 	%r349, [additive];
	setp.eq.s32	%p149, %r349, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f656;}

	// inline asm
	@%p149 bra 	BB0_143;

	mov.u32 	%r400, 2;
	mov.u64 	%rd190, image_RNM2;
	cvta.global.u64 	%rd179, %rd190;
	mov.u32 	%r353, 8;
	// inline asm
	call (%rd178), _rt_buffer_get_64, (%rd179, %r400, %r353, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs95, %rs96, %rs97, %rs98}, [%rd178];
	// inline asm
	{  cvt.f32.f16 %f1196, %rs95;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1197, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1198, %rs97;}

	// inline asm
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd179, %r400, %r353, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1199, %f335, %f1196;
	add.f32 	%f1200, %f336, %f1197;
	add.f32 	%f1201, %f337, %f1198;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1201;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1200;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f1199;}

	// inline asm
	st.v4.u16 	[%rd184], {%rs92, %rs93, %rs94, %rs88};
	bra.uni 	BB0_161;

BB0_143:
	mov.u32 	%r401, 2;
	mov.u64 	%rd197, image_RNM2;
	cvta.global.u64 	%rd192, %rd197;
	mov.u32 	%r355, 8;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r401, %r355, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f337;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f336;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f335;}

	// inline asm
	st.v4.u16 	[%rd191], {%rs99, %rs100, %rs101, %rs88};

BB0_161:
	ret;
}


