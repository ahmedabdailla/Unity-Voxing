//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<144>;
	.reg .b16 	%rs<46>;
	.reg .f32 	%f<854>;
	.reg .b32 	%r<363>;
	.reg .b64 	%rd<138>;


	mov.u64 	%rd137, __local_depot0;
	cvta.local.u64 	%SP, %rd137;
	ld.global.u32 	%r1, [lightMeshBufferSize];
	abs.s32 	%r2, %r1;
	ld.global.u32 	%r3, [samples];
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	cvt.u64.u32	%rd21, %r105;
	cvt.u64.u32	%rd22, %r106;
	mov.u64 	%rd25, uvnormal;
	cvta.global.u64 	%rd20, %rd25;
	mov.u32 	%r103, 2;
	mov.u32 	%r104, 4;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r103, %r104, %rd21, %rd22, %rd24, %rd24);
	// inline asm
	ld.u32 	%r4, [%rd19];
	shr.u32 	%r109, %r4, 16;
	cvt.u16.u32	%rs1, %r109;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r4;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f808, 0f00000000;
	mov.f32 	%f809, %f808;
	mov.f32 	%f810, %f808;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd19+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f174, %rs8;
	div.rn.f32 	%f175, %f174, 0f437F0000;
	fma.rn.f32 	%f176, %f175, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f177, %rs6;
	div.rn.f32 	%f178, %f177, 0f437F0000;
	fma.rn.f32 	%f179, %f178, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f180, %rs3;
	div.rn.f32 	%f181, %f180, 0f437F0000;
	fma.rn.f32 	%f182, %f181, 0f40000000, 0fBF800000;
	mul.f32 	%f183, %f179, %f179;
	fma.rn.f32 	%f184, %f176, %f176, %f183;
	fma.rn.f32 	%f185, %f182, %f182, %f184;
	sqrt.rn.f32 	%f186, %f185;
	rcp.rn.f32 	%f187, %f186;
	mul.f32 	%f808, %f176, %f187;
	mul.f32 	%f809, %f179, %f187;
	mul.f32 	%f810, %f182, %f187;

BB0_2:
	ld.global.v2.u32 	{%r110, %r111}, [pixelID];
	ld.global.v2.u32 	{%r113, %r114}, [tileInfo];
	add.s32 	%r5, %r110, %r113;
	add.s32 	%r6, %r111, %r114;
	setp.eq.f32	%p8, %f809, 0f00000000;
	setp.eq.f32	%p9, %f808, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f810, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_129;
	bra.uni 	BB0_3;

BB0_129:
	ld.global.u32 	%r362, [imageEnabled];
	and.b32  	%r308, %r362, 1;
	setp.eq.b32	%p139, %r308, 1;
	@!%p139 bra 	BB0_131;
	bra.uni 	BB0_130;

BB0_130:
	cvt.u64.u32	%rd99, %r5;
	cvt.u64.u32	%rd100, %r6;
	mov.u64 	%rd103, image;
	cvta.global.u64 	%rd98, %rd103;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r103, %r104, %rd99, %rd100, %rd24, %rd24);
	// inline asm
	mov.u16 	%rs30, 0;
	st.v4.u8 	[%rd97], {%rs30, %rs30, %rs30, %rs30};
	ld.global.u32 	%r362, [imageEnabled];

BB0_131:
	and.b32  	%r311, %r362, 8;
	setp.eq.s32	%p140, %r311, 0;
	@%p140 bra 	BB0_133;

	cvt.u64.u32	%rd106, %r5;
	cvt.u64.u32	%rd107, %r6;
	mov.u64 	%rd110, image_Mask;
	cvta.global.u64 	%rd105, %rd110;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r103, %r103, %rd106, %rd107, %rd24, %rd24);
	// inline asm
	mov.f32 	%f791, 0f00000000;
	cvt.rzi.u32.f32	%r314, %f791;
	cvt.u16.u32	%rs31, %r314;
	mov.u16 	%rs32, 0;
	st.v2.u8 	[%rd104], {%rs31, %rs32};
	ld.global.u32 	%r362, [imageEnabled];

BB0_133:
	and.b32  	%r315, %r362, 4;
	setp.eq.s32	%p141, %r315, 0;
	@%p141 bra 	BB0_137;

	ld.global.u32 	%r316, [additive];
	setp.eq.s32	%p142, %r316, 0;
	cvt.u64.u32	%rd17, %r5;
	cvt.u64.u32	%rd18, %r6;
	@%p142 bra 	BB0_136;

	mov.u64 	%rd123, image_HDR;
	cvta.global.u64 	%rd112, %rd123;
	mov.u32 	%r320, 8;
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd112, %r103, %r320, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	ld.v4.u16 	{%rs39, %rs40, %rs41, %rs42}, [%rd111];
	// inline asm
	{  cvt.f32.f16 %f792, %rs39;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f793, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f794, %rs41;}

	// inline asm
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd112, %r103, %r320, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	add.f32 	%f795, %f792, 0f00000000;
	add.f32 	%f796, %f793, 0f00000000;
	add.f32 	%f797, %f794, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f797;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f796;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f795;}

	// inline asm
	mov.u16 	%rs43, 0;
	st.v4.u16 	[%rd117], {%rs36, %rs37, %rs38, %rs43};
	bra.uni 	BB0_137;

BB0_3:
	ld.global.v2.u32 	{%r123, %r124}, [pixelID];
	cvt.u64.u32	%rd28, %r123;
	cvt.u64.u32	%rd29, %r124;
	mov.u64 	%rd38, uvpos;
	cvta.global.u64 	%rd27, %rd38;
	mov.u32 	%r119, 12;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r103, %r119, %rd28, %rd29, %rd24, %rd24);
	// inline asm
	ld.f32 	%f9, [%rd26+8];
	ld.f32 	%f8, [%rd26+4];
	ld.f32 	%f7, [%rd26];
	mul.f32 	%f190, %f7, 0f3456BF95;
	mul.f32 	%f191, %f8, 0f3456BF95;
	mul.f32 	%f192, %f9, 0f3456BF95;
	abs.f32 	%f10, %f808;
	div.rn.f32 	%f193, %f190, %f10;
	abs.f32 	%f194, %f809;
	div.rn.f32 	%f195, %f191, %f194;
	abs.f32 	%f11, %f810;
	div.rn.f32 	%f196, %f192, %f11;
	abs.f32 	%f197, %f193;
	abs.f32 	%f198, %f195;
	abs.f32 	%f199, %f196;
	mov.f32 	%f200, 0f38D1B717;
	max.f32 	%f201, %f197, %f200;
	max.f32 	%f202, %f198, %f200;
	max.f32 	%f203, %f199, %f200;
	fma.rn.f32 	%f12, %f808, %f201, %f7;
	fma.rn.f32 	%f13, %f809, %f202, %f8;
	fma.rn.f32 	%f14, %f810, %f203, %f9;
	ld.global.v2.u32 	{%r127, %r128}, [pixelID];
	cvt.u64.u32	%rd34, %r127;
	cvt.u64.u32	%rd35, %r128;
	mov.u64 	%rd39, rnd_seeds;
	cvta.global.u64 	%rd33, %rd39;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r103, %r104, %rd34, %rd35, %rd24, %rd24);
	// inline asm
	ld.u32 	%r131, [%rd32];
	mad.lo.s32 	%r7, %r131, 1664525, 1013904223;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r9, 0;
	setp.lt.s32	%p14, %r2, 1;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r134, %r7, 16777215;
	cvt.rn.f32.u32	%f206, %r134;
	mul.f32 	%f207, %f206, 0fB3800000;
	fma.rn.f32 	%f19, %f207, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r331, 0;
	abs.f32 	%f330, %f17;
	abs.f32 	%f331, %f16;
	max.f32 	%f332, %f331, %f330;
	abs.f32 	%f333, %f18;
	max.f32 	%f334, %f332, %f333;
	mov.u32 	%r9, %r331;
	mov.f32 	%f21, %f20;

BB0_6:
	shl.b32 	%r10, %r331, 1;
	cvt.s64.s32	%rd42, %r10;
	mov.u64 	%rd46, lightMeshBuffer;
	cvta.global.u64 	%rd41, %rd46;
	mov.u32 	%r135, 1;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r135, %r119, %rd42, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f208, [%rd40];
	sub.f32 	%f209, %f208, %f7;
	ld.f32 	%f210, [%rd40+4];
	sub.f32 	%f211, %f210, %f8;
	ld.f32 	%f212, [%rd40+8];
	sub.f32 	%f213, %f212, %f9;
	mul.f32 	%f214, %f211, %f211;
	fma.rn.f32 	%f215, %f209, %f209, %f214;
	fma.rn.f32 	%f216, %f213, %f213, %f215;
	sqrt.rn.f32 	%f22, %f216;
	rcp.rn.f32 	%f217, %f22;
	mul.f32 	%f23, %f209, %f217;
	mul.f32 	%f24, %f211, %f217;
	mul.f32 	%f25, %f213, %f217;
	mul.f32 	%f218, %f809, %f24;
	fma.rn.f32 	%f219, %f808, %f23, %f218;
	fma.rn.f32 	%f26, %f810, %f25, %f219;
	setp.leu.f32	%p15, %f26, 0f00000000;
	@%p15 bra 	BB0_22;

	setp.ne.s32	%p17, %r3, 0;
	mul.f32 	%f220, %f22, %f22;
	mul.f32 	%f221, %f220, 0f40C90FDB;
	div.rn.f32 	%f222, %f15, %f221;
	add.f32 	%f27, %f222, %f222;
	setp.gt.f32	%p18, %f27, %f19;
	and.pred  	%p19, %p17, %p18;
	mov.pred 	%p143, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f225, [lightInvCutoff];
	mul.f32 	%f28, %f22, %f225;
	mov.f32 	%f229, 0f40800000;
	abs.f32 	%f30, %f28;
	setp.lt.f32	%p20, %f30, 0f00800000;
	mul.f32 	%f231, %f30, 0f4B800000;
	selp.f32	%f232, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f233, %f231, %f30, %p20;
	mov.b32 	 %r137, %f233;
	and.b32  	%r138, %r137, 8388607;
	or.b32  	%r139, %r138, 1065353216;
	mov.b32 	 %f234, %r139;
	shr.u32 	%r140, %r137, 23;
	cvt.rn.f32.u32	%f235, %r140;
	add.f32 	%f236, %f232, %f235;
	setp.gt.f32	%p21, %f234, 0f3FB504F3;
	mul.f32 	%f237, %f234, 0f3F000000;
	add.f32 	%f238, %f236, 0f3F800000;
	selp.f32	%f239, %f237, %f234, %p21;
	selp.f32	%f240, %f238, %f236, %p21;
	add.f32 	%f241, %f239, 0fBF800000;
	add.f32 	%f224, %f239, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f223,%f224;
	// inline asm
	add.f32 	%f242, %f241, %f241;
	mul.f32 	%f243, %f223, %f242;
	mul.f32 	%f244, %f243, %f243;
	mov.f32 	%f245, 0f3C4CAF63;
	mov.f32 	%f246, 0f3B18F0FE;
	fma.rn.f32 	%f247, %f246, %f244, %f245;
	mov.f32 	%f248, 0f3DAAAABD;
	fma.rn.f32 	%f249, %f247, %f244, %f248;
	mul.rn.f32 	%f250, %f249, %f244;
	mul.rn.f32 	%f251, %f250, %f243;
	sub.f32 	%f252, %f241, %f243;
	neg.f32 	%f253, %f243;
	add.f32 	%f254, %f252, %f252;
	fma.rn.f32 	%f255, %f253, %f241, %f254;
	mul.rn.f32 	%f256, %f223, %f255;
	add.f32 	%f257, %f251, %f243;
	sub.f32 	%f258, %f243, %f257;
	add.f32 	%f259, %f251, %f258;
	add.f32 	%f260, %f256, %f259;
	add.f32 	%f261, %f257, %f260;
	sub.f32 	%f262, %f257, %f261;
	add.f32 	%f263, %f260, %f262;
	mov.f32 	%f264, 0f3F317200;
	mul.rn.f32 	%f265, %f240, %f264;
	mov.f32 	%f266, 0f35BFBE8E;
	mul.rn.f32 	%f267, %f240, %f266;
	add.f32 	%f268, %f265, %f261;
	sub.f32 	%f269, %f265, %f268;
	add.f32 	%f270, %f261, %f269;
	add.f32 	%f271, %f263, %f270;
	add.f32 	%f272, %f267, %f271;
	add.f32 	%f273, %f268, %f272;
	sub.f32 	%f274, %f268, %f273;
	add.f32 	%f275, %f272, %f274;
	mul.rn.f32 	%f276, %f229, %f273;
	neg.f32 	%f277, %f276;
	fma.rn.f32 	%f278, %f229, %f273, %f277;
	fma.rn.f32 	%f279, %f229, %f275, %f278;
	mov.f32 	%f280, 0f00000000;
	fma.rn.f32 	%f281, %f280, %f273, %f279;
	add.rn.f32 	%f282, %f276, %f281;
	neg.f32 	%f283, %f282;
	add.rn.f32 	%f284, %f276, %f283;
	add.rn.f32 	%f285, %f284, %f281;
	mov.b32 	 %r141, %f282;
	setp.eq.s32	%p22, %r141, 1118925336;
	add.s32 	%r142, %r141, -1;
	mov.b32 	 %f286, %r142;
	add.f32 	%f287, %f285, 0f37000000;
	selp.f32	%f288, %f286, %f282, %p22;
	selp.f32	%f31, %f287, %f285, %p22;
	mul.f32 	%f289, %f288, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f290, %f289;
	mov.f32 	%f291, 0fBF317200;
	fma.rn.f32 	%f292, %f290, %f291, %f288;
	mov.f32 	%f293, 0fB5BFBE8E;
	fma.rn.f32 	%f294, %f290, %f293, %f292;
	mul.f32 	%f295, %f294, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f296, %f295;
	add.f32 	%f297, %f290, 0f00000000;
	ex2.approx.f32 	%f298, %f297;
	mul.f32 	%f299, %f296, %f298;
	setp.lt.f32	%p23, %f288, 0fC2D20000;
	selp.f32	%f300, 0f00000000, %f299, %p23;
	setp.gt.f32	%p24, %f288, 0f42D20000;
	selp.f32	%f813, 0f7F800000, %f300, %p24;
	setp.eq.f32	%p25, %f813, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f813, %f813, %f31, %f813;

BB0_10:
	mov.f32 	%f804, 0f40000000;
	cvt.rzi.f32.f32	%f803, %f804;
	add.f32 	%f802, %f803, %f803;
	mov.f32 	%f801, 0f40800000;
	sub.f32 	%f800, %f801, %f802;
	abs.f32 	%f799, %f800;
	setp.lt.f32	%p26, %f28, 0f00000000;
	setp.eq.f32	%p27, %f799, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r143, %f813;
	xor.b32  	%r144, %r143, -2147483648;
	mov.b32 	 %f301, %r144;
	selp.f32	%f815, %f301, %f813, %p1;
	setp.eq.f32	%p28, %f28, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f304, %f28, %f28;
	selp.f32	%f815, %f304, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f28, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f807, 0f40800000;
	cvt.rzi.f32.f32	%f303, %f807;
	setp.neu.f32	%p30, %f303, 0f40800000;
	selp.f32	%f815, 0f7FFFFFFF, %f815, %p30;

BB0_14:
	add.f32 	%f305, %f30, 0f40800000;
	mov.b32 	 %r145, %f305;
	setp.lt.s32	%p32, %r145, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f30, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f815, %f28, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f30, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f815, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r324, 1;
	mov.u64 	%rd132, lightMeshBuffer;
	cvta.global.u64 	%rd131, %rd132;
	shl.b32 	%r323, %r331, 1;
	mov.f32 	%f306, 0f3F800000;
	sub.f32 	%f307, %f306, %f815;
	setp.eq.f32	%p35, %f28, 0f3F800000;
	selp.f32	%f308, 0f00000000, %f307, %p35;
	cvt.sat.f32.f32	%f309, %f308;
	mul.f32 	%f310, %f27, %f309;
	add.s32 	%r148, %r323, 1;
	cvt.s64.s32	%rd49, %r148;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd131, %r324, %r119, %rd49, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f311, [%rd47];
	mul.f32 	%f312, %f23, %f311;
	ld.f32 	%f313, [%rd47+4];
	mul.f32 	%f314, %f24, %f313;
	neg.f32 	%f315, %f314;
	sub.f32 	%f316, %f315, %f312;
	ld.f32 	%f317, [%rd47+8];
	mul.f32 	%f318, %f25, %f317;
	sub.f32 	%f319, %f316, %f318;
	cvt.sat.f32.f32	%f320, %f319;
	mul.f32 	%f42, %f310, %f320;
	cvt.sat.f32.f32	%f43, %f26;
	mul.f32 	%f321, %f42, %f43;
	setp.leu.f32	%p36, %f321, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r330, 1;
	add.u64 	%rd54, %SP, 28;
	cvta.to.local.u64 	%rd55, %rd54;
	max.f32 	%f328, %f334, %f200;
	sub.f32 	%f329, %f22, %f328;
	mov.u32 	%r152, 1065353216;
	st.local.u32 	[%rd55], %r152;
	ld.global.u32 	%r149, [root];
	// inline asm
	call _rt_trace_64, (%r149, %f12, %f13, %f14, %f23, %f24, %f25, %r330, %f328, %f329, %rd54, %r104);
	// inline asm
	ld.local.f32 	%f336, [%rd55];
	mul.f32 	%f337, %f42, %f336;
	fma.rn.f32 	%f21, %f43, %f337, %f21;
	add.f32 	%f20, %f20, %f336;

BB0_21:
	add.s32 	%r9, %r9, 1;

BB0_22:
	add.s32 	%r331, %r331, 1;
	setp.lt.s32	%p38, %r331, %r2;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;

BB0_23:
	mov.pred 	%p143, %p13;

BB0_24:
	cvt.rn.f32.s32	%f338, %r9;
	mov.f32 	%f339, 0f3F800000;
	max.f32 	%f340, %f338, %f339;
	div.rn.f32 	%f840, %f21, %f340;
	div.rn.f32 	%f841, %f20, %f340;
	@!%p143 bra 	BB0_77;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f806, %f810;
	abs.f32 	%f805, %f808;
	setp.gt.f32	%p39, %f805, %f806;
	neg.f32 	%f343, %f809;
	selp.f32	%f344, %f343, 0f00000000, %p39;
	neg.f32 	%f345, %f810;
	selp.f32	%f346, %f808, %f345, %p39;
	selp.f32	%f347, 0f00000000, %f809, %p39;
	mul.f32 	%f348, %f346, %f346;
	fma.rn.f32 	%f349, %f344, %f344, %f348;
	fma.rn.f32 	%f350, %f347, %f347, %f349;
	sqrt.rn.f32 	%f351, %f350;
	rcp.rn.f32 	%f352, %f351;
	mul.f32 	%f54, %f344, %f352;
	mul.f32 	%f55, %f346, %f352;
	mul.f32 	%f56, %f347, %f352;
	mov.f32 	%f824, 0f00000000;
	setp.lt.s32	%p40, %r3, 1;
	mov.f32 	%f825, %f824;
	@%p40 bra 	BB0_76;

	mad.lo.s32 	%r338, %r131, 1664525, 1013904223;
	cvt.rn.f32.s32	%f355, %r3;
	rcp.rn.f32 	%f57, %f355;
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd56;
	mul.f32 	%f58, %f12, 0f3456BF95;
	mul.f32 	%f59, %f13, 0f3456BF95;
	mul.f32 	%f60, %f14, 0f3456BF95;
	add.u64 	%rd57, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd57;
	mul.f32 	%f356, %f808, %f55;
	mul.f32 	%f357, %f809, %f54;
	sub.f32 	%f61, %f357, %f356;
	mul.f32 	%f358, %f810, %f54;
	mul.f32 	%f359, %f808, %f56;
	sub.f32 	%f62, %f359, %f358;
	mul.f32 	%f360, %f809, %f56;
	mul.f32 	%f361, %f810, %f55;
	sub.f32 	%f63, %f361, %f360;
	mov.f32 	%f824, 0f00000000;
	mov.u32 	%r153, 0;
	abs.f32 	%f362, %f59;
	abs.f32 	%f363, %f58;
	max.f32 	%f364, %f363, %f362;
	abs.f32 	%f365, %f60;
	max.f32 	%f366, %f364, %f365;
	mov.u32 	%r335, %r153;
	mov.f32 	%f825, %f824;

BB0_27:
	cvt.rn.f32.s32	%f66, %r335;
	max.f32 	%f67, %f366, %f200;
	mov.u32 	%r337, %r153;

BB0_28:
	mad.lo.s32 	%r155, %r338, 1664525, 1013904223;
	and.b32  	%r156, %r155, 16777215;
	cvt.rn.f32.u32	%f368, %r156;
	fma.rn.f32 	%f369, %f368, 0f33800000, %f66;
	mul.f32 	%f370, %f57, %f369;
	mad.lo.s32 	%r338, %r155, 1664525, 1013904223;
	and.b32  	%r157, %r338, 16777215;
	cvt.rn.f32.u32	%f371, %r157;
	cvt.rn.f32.s32	%f372, %r337;
	fma.rn.f32 	%f373, %f371, 0f33800000, %f372;
	mul.f32 	%f374, %f57, %f373;
	sqrt.rn.f32 	%f70, %f370;
	mul.f32 	%f832, %f374, 0f40C90FDB;
	abs.f32 	%f72, %f832;
	setp.neu.f32	%p41, %f72, 0f7F800000;
	mov.f32 	%f826, %f832;
	@%p41 bra 	BB0_30;

	mov.f32 	%f375, 0f00000000;
	mul.rn.f32 	%f826, %f832, %f375;

BB0_30:
	mul.f32 	%f376, %f826, 0f3F22F983;
	cvt.rni.s32.f32	%r348, %f376;
	cvt.rn.f32.s32	%f377, %r348;
	neg.f32 	%f378, %f377;
	mov.f32 	%f379, 0f3FC90FDA;
	fma.rn.f32 	%f380, %f378, %f379, %f826;
	mov.f32 	%f381, 0f33A22168;
	fma.rn.f32 	%f382, %f378, %f381, %f380;
	mov.f32 	%f383, 0f27C234C5;
	fma.rn.f32 	%f827, %f378, %f383, %f382;
	abs.f32 	%f384, %f826;
	setp.leu.f32	%p42, %f384, 0f47CE4780;
	@%p42 bra 	BB0_41;

	mov.b32 	 %r21, %f826;
	shr.u32 	%r22, %r21, 23;
	shl.b32 	%r160, %r21, 8;
	or.b32  	%r23, %r160, -2147483648;
	mov.u32 	%r340, 0;
	mov.u64 	%rd133, __cudart_i2opi_f;
	mov.u32 	%r339, -6;
	mov.u64 	%rd134, %rd2;

BB0_32:
	.pragma "nounroll";
	ld.const.u32 	%r163, [%rd133];
	// inline asm
	{
	mad.lo.cc.u32   %r161, %r163, %r23, %r340;
	madc.hi.u32     %r340, %r163, %r23,  0;
	}
	// inline asm
	st.local.u32 	[%rd134], %r161;
	add.s64 	%rd134, %rd134, 4;
	add.s64 	%rd133, %rd133, 4;
	add.s32 	%r339, %r339, 1;
	setp.ne.s32	%p43, %r339, 0;
	@%p43 bra 	BB0_32;

	and.b32  	%r166, %r22, 255;
	add.s32 	%r167, %r166, -128;
	shr.u32 	%r168, %r167, 5;
	and.b32  	%r28, %r21, -2147483648;
	st.local.u32 	[%rd2+24], %r340;
	mov.u32 	%r169, 6;
	sub.s32 	%r170, %r169, %r168;
	mul.wide.s32 	%rd59, %r170, 4;
	add.s64 	%rd8, %rd2, %rd59;
	ld.local.u32 	%r341, [%rd8];
	ld.local.u32 	%r342, [%rd8+-4];
	and.b32  	%r31, %r22, 31;
	setp.eq.s32	%p44, %r31, 0;
	@%p44 bra 	BB0_35;

	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r31;
	shr.u32 	%r173, %r342, %r172;
	shl.b32 	%r174, %r341, %r31;
	add.s32 	%r341, %r173, %r174;
	ld.local.u32 	%r175, [%rd8+-8];
	shr.u32 	%r176, %r175, %r172;
	shl.b32 	%r177, %r342, %r31;
	add.s32 	%r342, %r176, %r177;

BB0_35:
	shr.u32 	%r178, %r342, 30;
	shl.b32 	%r179, %r341, 2;
	add.s32 	%r343, %r178, %r179;
	shl.b32 	%r37, %r342, 2;
	shr.u32 	%r180, %r343, 31;
	shr.u32 	%r181, %r341, 30;
	add.s32 	%r38, %r180, %r181;
	setp.eq.s32	%p45, %r180, 0;
	@%p45 bra 	BB0_36;
	bra.uni 	BB0_37;

BB0_36:
	mov.u32 	%r344, %r28;
	mov.u32 	%r345, %r37;
	bra.uni 	BB0_38;

BB0_37:
	not.b32 	%r182, %r343;
	neg.s32 	%r345, %r37;
	setp.eq.s32	%p46, %r37, 0;
	selp.u32	%r183, 1, 0, %p46;
	add.s32 	%r343, %r183, %r182;
	xor.b32  	%r344, %r28, -2147483648;

BB0_38:
	clz.b32 	%r347, %r343;
	setp.eq.s32	%p47, %r347, 0;
	shl.b32 	%r184, %r343, %r347;
	mov.u32 	%r185, 32;
	sub.s32 	%r186, %r185, %r347;
	shr.u32 	%r187, %r345, %r186;
	add.s32 	%r188, %r187, %r184;
	selp.b32	%r46, %r343, %r188, %p47;
	mov.u32 	%r189, -921707870;
	mul.hi.u32 	%r346, %r46, %r189;
	setp.eq.s32	%p48, %r28, 0;
	neg.s32 	%r190, %r38;
	selp.b32	%r348, %r38, %r190, %p48;
	setp.lt.s32	%p49, %r346, 1;
	@%p49 bra 	BB0_40;

	mul.lo.s32 	%r191, %r46, -921707870;
	shr.u32 	%r192, %r191, 31;
	shl.b32 	%r193, %r346, 1;
	add.s32 	%r346, %r192, %r193;
	add.s32 	%r347, %r347, 1;

BB0_40:
	mov.u32 	%r194, 126;
	sub.s32 	%r195, %r194, %r347;
	shl.b32 	%r196, %r195, 23;
	add.s32 	%r197, %r346, 1;
	shr.u32 	%r198, %r197, 7;
	add.s32 	%r199, %r198, 1;
	shr.u32 	%r200, %r199, 1;
	add.s32 	%r201, %r200, %r196;
	or.b32  	%r202, %r201, %r344;
	mov.b32 	 %f827, %r202;

BB0_41:
	mul.rn.f32 	%f78, %f827, %f827;
	add.s32 	%r54, %r348, 1;
	and.b32  	%r55, %r54, 1;
	setp.eq.s32	%p50, %r55, 0;
	@%p50 bra 	BB0_43;
	bra.uni 	BB0_42;

BB0_43:
	mov.f32 	%f387, 0f3C08839E;
	mov.f32 	%f388, 0fB94CA1F9;
	fma.rn.f32 	%f828, %f388, %f78, %f387;
	bra.uni 	BB0_44;

BB0_42:
	mov.f32 	%f385, 0fBAB6061A;
	mov.f32 	%f386, 0f37CCF5CE;
	fma.rn.f32 	%f828, %f386, %f78, %f385;

BB0_44:
	@%p50 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f392, 0fBE2AAAA3;
	fma.rn.f32 	%f393, %f828, %f78, %f392;
	mov.f32 	%f394, 0f00000000;
	fma.rn.f32 	%f829, %f393, %f78, %f394;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f389, 0f3D2AAAA5;
	fma.rn.f32 	%f390, %f828, %f78, %f389;
	mov.f32 	%f391, 0fBF000000;
	fma.rn.f32 	%f829, %f390, %f78, %f391;

BB0_47:
	fma.rn.f32 	%f830, %f829, %f827, %f827;
	@%p50 bra 	BB0_49;

	fma.rn.f32 	%f830, %f829, %f78, %f339;

BB0_49:
	and.b32  	%r203, %r54, 2;
	setp.eq.s32	%p53, %r203, 0;
	@%p53 bra 	BB0_51;

	mov.f32 	%f396, 0f00000000;
	mov.f32 	%f397, 0fBF800000;
	fma.rn.f32 	%f830, %f830, %f397, %f396;

BB0_51:
	@%p41 bra 	BB0_53;

	mov.f32 	%f398, 0f00000000;
	mul.rn.f32 	%f832, %f832, %f398;

BB0_53:
	mul.f32 	%f399, %f832, 0f3F22F983;
	cvt.rni.s32.f32	%r358, %f399;
	cvt.rn.f32.s32	%f400, %r358;
	neg.f32 	%f401, %f400;
	fma.rn.f32 	%f403, %f401, %f379, %f832;
	fma.rn.f32 	%f405, %f401, %f381, %f403;
	fma.rn.f32 	%f833, %f401, %f383, %f405;
	abs.f32 	%f407, %f832;
	setp.leu.f32	%p55, %f407, 0f47CE4780;
	@%p55 bra 	BB0_64;

	mov.b32 	 %r57, %f832;
	shr.u32 	%r58, %r57, 23;
	shl.b32 	%r206, %r57, 8;
	or.b32  	%r59, %r206, -2147483648;
	mov.u32 	%r350, 0;
	mov.u64 	%rd135, __cudart_i2opi_f;
	mov.u32 	%r349, -6;
	mov.u64 	%rd136, %rd2;

BB0_55:
	.pragma "nounroll";
	ld.const.u32 	%r209, [%rd135];
	// inline asm
	{
	mad.lo.cc.u32   %r207, %r209, %r59, %r350;
	madc.hi.u32     %r350, %r209, %r59,  0;
	}
	// inline asm
	st.local.u32 	[%rd136], %r207;
	add.s64 	%rd136, %rd136, 4;
	add.s64 	%rd135, %rd135, 4;
	add.s32 	%r349, %r349, 1;
	setp.ne.s32	%p56, %r349, 0;
	@%p56 bra 	BB0_55;

	and.b32  	%r212, %r58, 255;
	add.s32 	%r213, %r212, -128;
	shr.u32 	%r214, %r213, 5;
	and.b32  	%r64, %r57, -2147483648;
	st.local.u32 	[%rd2+24], %r350;
	mov.u32 	%r215, 6;
	sub.s32 	%r216, %r215, %r214;
	mul.wide.s32 	%rd61, %r216, 4;
	add.s64 	%rd13, %rd2, %rd61;
	ld.local.u32 	%r351, [%rd13];
	ld.local.u32 	%r352, [%rd13+-4];
	and.b32  	%r67, %r58, 31;
	setp.eq.s32	%p57, %r67, 0;
	@%p57 bra 	BB0_58;

	mov.u32 	%r217, 32;
	sub.s32 	%r218, %r217, %r67;
	shr.u32 	%r219, %r352, %r218;
	shl.b32 	%r220, %r351, %r67;
	add.s32 	%r351, %r219, %r220;
	ld.local.u32 	%r221, [%rd13+-8];
	shr.u32 	%r222, %r221, %r218;
	shl.b32 	%r223, %r352, %r67;
	add.s32 	%r352, %r222, %r223;

BB0_58:
	shr.u32 	%r224, %r352, 30;
	shl.b32 	%r225, %r351, 2;
	add.s32 	%r353, %r224, %r225;
	shl.b32 	%r73, %r352, 2;
	shr.u32 	%r226, %r353, 31;
	shr.u32 	%r227, %r351, 30;
	add.s32 	%r74, %r226, %r227;
	setp.eq.s32	%p58, %r226, 0;
	@%p58 bra 	BB0_59;
	bra.uni 	BB0_60;

BB0_59:
	mov.u32 	%r354, %r64;
	mov.u32 	%r355, %r73;
	bra.uni 	BB0_61;

BB0_60:
	not.b32 	%r228, %r353;
	neg.s32 	%r355, %r73;
	setp.eq.s32	%p59, %r73, 0;
	selp.u32	%r229, 1, 0, %p59;
	add.s32 	%r353, %r229, %r228;
	xor.b32  	%r354, %r64, -2147483648;

BB0_61:
	clz.b32 	%r357, %r353;
	setp.eq.s32	%p60, %r357, 0;
	shl.b32 	%r230, %r353, %r357;
	mov.u32 	%r231, 32;
	sub.s32 	%r232, %r231, %r357;
	shr.u32 	%r233, %r355, %r232;
	add.s32 	%r234, %r233, %r230;
	selp.b32	%r82, %r353, %r234, %p60;
	mov.u32 	%r235, -921707870;
	mul.hi.u32 	%r356, %r82, %r235;
	setp.eq.s32	%p61, %r64, 0;
	neg.s32 	%r236, %r74;
	selp.b32	%r358, %r74, %r236, %p61;
	setp.lt.s32	%p62, %r356, 1;
	@%p62 bra 	BB0_63;

	mul.lo.s32 	%r237, %r82, -921707870;
	shr.u32 	%r238, %r237, 31;
	shl.b32 	%r239, %r356, 1;
	add.s32 	%r356, %r238, %r239;
	add.s32 	%r357, %r357, 1;

BB0_63:
	mov.u32 	%r240, 126;
	sub.s32 	%r241, %r240, %r357;
	shl.b32 	%r242, %r241, 23;
	add.s32 	%r243, %r356, 1;
	shr.u32 	%r244, %r243, 7;
	add.s32 	%r245, %r244, 1;
	shr.u32 	%r246, %r245, 1;
	add.s32 	%r247, %r246, %r242;
	or.b32  	%r248, %r247, %r354;
	mov.b32 	 %f833, %r248;

BB0_64:
	mul.rn.f32 	%f95, %f833, %f833;
	and.b32  	%r90, %r358, 1;
	setp.eq.s32	%p63, %r90, 0;
	@%p63 bra 	BB0_66;
	bra.uni 	BB0_65;

BB0_66:
	mov.f32 	%f410, 0f3C08839E;
	mov.f32 	%f411, 0fB94CA1F9;
	fma.rn.f32 	%f834, %f411, %f95, %f410;
	bra.uni 	BB0_67;

BB0_65:
	mov.f32 	%f408, 0fBAB6061A;
	mov.f32 	%f409, 0f37CCF5CE;
	fma.rn.f32 	%f834, %f409, %f95, %f408;

BB0_67:
	@%p63 bra 	BB0_69;
	bra.uni 	BB0_68;

BB0_69:
	mov.f32 	%f415, 0fBE2AAAA3;
	fma.rn.f32 	%f416, %f834, %f95, %f415;
	mov.f32 	%f417, 0f00000000;
	fma.rn.f32 	%f835, %f416, %f95, %f417;
	bra.uni 	BB0_70;

BB0_68:
	mov.f32 	%f412, 0f3D2AAAA5;
	fma.rn.f32 	%f413, %f834, %f95, %f412;
	mov.f32 	%f414, 0fBF000000;
	fma.rn.f32 	%f835, %f413, %f95, %f414;

BB0_70:
	fma.rn.f32 	%f836, %f835, %f833, %f833;
	@%p63 bra 	BB0_72;

	fma.rn.f32 	%f836, %f835, %f95, %f339;

BB0_72:
	and.b32  	%r249, %r358, 2;
	setp.eq.s32	%p66, %r249, 0;
	@%p66 bra 	BB0_74;

	mov.f32 	%f419, 0f00000000;
	mov.f32 	%f420, 0fBF800000;
	fma.rn.f32 	%f836, %f836, %f420, %f419;

BB0_74:
	mul.f32 	%f429, %f70, %f830;
	mul.f32 	%f430, %f429, %f429;
	sub.f32 	%f432, %f339, %f430;
	mul.f32 	%f433, %f70, %f836;
	mul.f32 	%f434, %f433, %f433;
	sub.f32 	%f435, %f432, %f434;
	mov.f32 	%f436, 0f00000000;
	max.f32 	%f437, %f436, %f435;
	sqrt.rn.f32 	%f438, %f437;
	mul.f32 	%f439, %f54, %f433;
	mul.f32 	%f440, %f55, %f433;
	mul.f32 	%f441, %f56, %f433;
	fma.rn.f32 	%f442, %f63, %f429, %f439;
	fma.rn.f32 	%f443, %f62, %f429, %f440;
	fma.rn.f32 	%f444, %f61, %f429, %f441;
	fma.rn.f32 	%f424, %f808, %f438, %f442;
	fma.rn.f32 	%f425, %f809, %f438, %f443;
	fma.rn.f32 	%f426, %f810, %f438, %f444;
	mov.u32 	%r251, 0;
	st.local.u32 	[%rd3], %r251;
	ld.global.u32 	%r250, [root];
	mov.f32 	%f428, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r250, %f12, %f13, %f14, %f424, %f425, %f426, %r251, %f67, %f428, %rd57, %r104);
	// inline asm
	ld.local.f32 	%f445, [%rd3];
	setp.lt.f32	%p67, %f445, 0f00000000;
	selp.f32	%f446, 0f00000000, %f445, %p67;
	selp.f32	%f447, 0f00000000, 0f3F800000, %p67;
	add.f32 	%f824, %f824, %f447;
	add.f32 	%f825, %f825, %f446;
	add.s32 	%r337, %r337, 1;
	setp.lt.s32	%p68, %r337, %r3;
	@%p68 bra 	BB0_28;

	add.s32 	%r335, %r335, 1;
	setp.lt.s32	%p69, %r335, %r3;
	@%p69 bra 	BB0_27;

BB0_76:
	mul.lo.s32 	%r253, %r3, %r3;
	cvt.rn.f32.s32	%f448, %r253;
	div.rn.f32 	%f840, %f825, %f448;
	div.rn.f32 	%f841, %f824, %f448;

BB0_77:
	setp.gt.s32	%p70, %r1, -1;
	selp.f32	%f115, %f841, %f840, %p70;
	ld.global.u32 	%r360, [imageEnabled];
	and.b32  	%r254, %r360, 8;
	setp.eq.s32	%p71, %r254, 0;
	@%p71 bra 	BB0_90;

	mov.u32 	%r325, 2;
	cvt.u64.u32	%rd65, %r5;
	cvt.u64.u32	%rd66, %r6;
	mov.u64 	%rd69, image_Mask;
	cvta.global.u64 	%rd64, %rd69;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd64, %r325, %r325, %rd65, %rd66, %rd24, %rd24);
	// inline asm
	mov.f32 	%f451, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f452, %f451;
	fma.rn.f32 	%f453, %f452, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f116, %f453;
	abs.f32 	%f117, %f115;
	setp.lt.f32	%p72, %f117, 0f00800000;
	mul.f32 	%f454, %f117, 0f4B800000;
	selp.f32	%f455, 0fC3170000, 0fC2FE0000, %p72;
	selp.f32	%f456, %f454, %f117, %p72;
	mov.b32 	 %r257, %f456;
	and.b32  	%r258, %r257, 8388607;
	or.b32  	%r259, %r258, 1065353216;
	mov.b32 	 %f457, %r259;
	shr.u32 	%r260, %r257, 23;
	cvt.rn.f32.u32	%f458, %r260;
	add.f32 	%f459, %f455, %f458;
	setp.gt.f32	%p73, %f457, 0f3FB504F3;
	mul.f32 	%f460, %f457, 0f3F000000;
	add.f32 	%f461, %f459, 0f3F800000;
	selp.f32	%f462, %f460, %f457, %p73;
	selp.f32	%f463, %f461, %f459, %p73;
	add.f32 	%f464, %f462, 0fBF800000;
	add.f32 	%f450, %f462, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f449,%f450;
	// inline asm
	add.f32 	%f465, %f464, %f464;
	mul.f32 	%f466, %f449, %f465;
	mul.f32 	%f467, %f466, %f466;
	mov.f32 	%f468, 0f3C4CAF63;
	mov.f32 	%f469, 0f3B18F0FE;
	fma.rn.f32 	%f470, %f469, %f467, %f468;
	mov.f32 	%f471, 0f3DAAAABD;
	fma.rn.f32 	%f472, %f470, %f467, %f471;
	mul.rn.f32 	%f473, %f472, %f467;
	mul.rn.f32 	%f474, %f473, %f466;
	sub.f32 	%f475, %f464, %f466;
	neg.f32 	%f476, %f466;
	add.f32 	%f477, %f475, %f475;
	fma.rn.f32 	%f478, %f476, %f464, %f477;
	mul.rn.f32 	%f479, %f449, %f478;
	add.f32 	%f480, %f474, %f466;
	sub.f32 	%f481, %f466, %f480;
	add.f32 	%f482, %f474, %f481;
	add.f32 	%f483, %f479, %f482;
	add.f32 	%f484, %f480, %f483;
	sub.f32 	%f485, %f480, %f484;
	add.f32 	%f486, %f483, %f485;
	mov.f32 	%f487, 0f3F317200;
	mul.rn.f32 	%f488, %f463, %f487;
	mov.f32 	%f489, 0f35BFBE8E;
	mul.rn.f32 	%f490, %f463, %f489;
	add.f32 	%f491, %f488, %f484;
	sub.f32 	%f492, %f488, %f491;
	add.f32 	%f493, %f484, %f492;
	add.f32 	%f494, %f486, %f493;
	add.f32 	%f495, %f490, %f494;
	add.f32 	%f496, %f491, %f495;
	sub.f32 	%f497, %f491, %f496;
	add.f32 	%f498, %f495, %f497;
	mov.f32 	%f499, 0f3EE8BA2E;
	mul.rn.f32 	%f500, %f499, %f496;
	neg.f32 	%f501, %f500;
	fma.rn.f32 	%f502, %f499, %f496, %f501;
	fma.rn.f32 	%f503, %f499, %f498, %f502;
	mov.f32 	%f504, 0f00000000;
	fma.rn.f32 	%f505, %f504, %f496, %f503;
	add.rn.f32 	%f506, %f500, %f505;
	neg.f32 	%f507, %f506;
	add.rn.f32 	%f508, %f500, %f507;
	add.rn.f32 	%f509, %f508, %f505;
	mov.b32 	 %r261, %f506;
	setp.eq.s32	%p74, %r261, 1118925336;
	add.s32 	%r262, %r261, -1;
	mov.b32 	 %f510, %r262;
	add.f32 	%f511, %f509, 0f37000000;
	selp.f32	%f512, %f510, %f506, %p74;
	selp.f32	%f118, %f511, %f509, %p74;
	mul.f32 	%f513, %f512, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f514, %f513;
	mov.f32 	%f515, 0fBF317200;
	fma.rn.f32 	%f516, %f514, %f515, %f512;
	mov.f32 	%f517, 0fB5BFBE8E;
	fma.rn.f32 	%f518, %f514, %f517, %f516;
	mul.f32 	%f519, %f518, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f520, %f519;
	add.f32 	%f521, %f514, 0f00000000;
	ex2.approx.f32 	%f522, %f521;
	mul.f32 	%f523, %f520, %f522;
	setp.lt.f32	%p75, %f512, 0fC2D20000;
	selp.f32	%f524, 0f00000000, %f523, %p75;
	setp.gt.f32	%p76, %f512, 0f42D20000;
	selp.f32	%f842, 0f7F800000, %f524, %p76;
	setp.eq.f32	%p77, %f842, 0f7F800000;
	@%p77 bra 	BB0_80;

	fma.rn.f32 	%f842, %f842, %f118, %f842;

BB0_80:
	setp.lt.f32	%p78, %f115, 0f00000000;
	setp.eq.f32	%p79, %f116, 0f3F800000;
	and.pred  	%p3, %p78, %p79;
	mov.b32 	 %r263, %f842;
	xor.b32  	%r264, %r263, -2147483648;
	mov.b32 	 %f525, %r264;
	selp.f32	%f844, %f525, %f842, %p3;
	setp.eq.f32	%p80, %f115, 0f00000000;
	@%p80 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f528, %f115, %f115;
	selp.f32	%f844, %f528, 0f00000000, %p79;
	bra.uni 	BB0_84;

BB0_136:
	mov.u64 	%rd130, image_HDR;
	cvta.global.u64 	%rd125, %rd130;
	mov.u32 	%r322, 8;
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd125, %r103, %r322, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	mov.f32 	%f798, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f798;}

	// inline asm
	mov.u16 	%rs45, 0;
	st.v4.u16 	[%rd124], {%rs44, %rs44, %rs44, %rs45};
	bra.uni 	BB0_137;

BB0_81:
	setp.geu.f32	%p81, %f115, 0f00000000;
	@%p81 bra 	BB0_84;

	cvt.rzi.f32.f32	%f527, %f499;
	setp.neu.f32	%p82, %f527, 0f3EE8BA2E;
	selp.f32	%f844, 0f7FFFFFFF, %f844, %p82;

BB0_84:
	add.f32 	%f529, %f117, 0f3EE8BA2E;
	mov.b32 	 %r265, %f529;
	setp.lt.s32	%p84, %r265, 2139095040;
	@%p84 bra 	BB0_89;

	setp.gtu.f32	%p85, %f117, 0f7F800000;
	@%p85 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f844, %f115, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p86, %f117, 0f7F800000;
	@%p86 bra 	BB0_89;

	selp.f32	%f844, 0fFF800000, 0f7F800000, %p3;

BB0_89:
	mul.f32 	%f530, %f844, 0f437F0000;
	setp.eq.f32	%p87, %f115, 0f3F800000;
	selp.f32	%f531, 0f437F0000, %f530, %p87;
	cvt.rzi.u32.f32	%r266, %f531;
	cvt.u16.u32	%rs10, %r266;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd63], {%rs10, %rs11};
	ld.global.u32 	%r360, [imageEnabled];

BB0_90:
	ld.global.f32 	%f532, [lightColor];
	mul.f32 	%f129, %f840, %f532;
	ld.global.f32 	%f533, [lightColor+4];
	mul.f32 	%f130, %f840, %f533;
	ld.global.f32 	%f534, [lightColor+8];
	mul.f32 	%f131, %f840, %f534;
	and.b32  	%r267, %r360, 1;
	setp.eq.b32	%p88, %r267, 1;
	@!%p88 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f537, 0f3E666666;
	cvt.rzi.f32.f32	%f538, %f537;
	fma.rn.f32 	%f539, %f538, 0fC0000000, 0f3EE66666;
	abs.f32 	%f132, %f539;
	abs.f32 	%f133, %f129;
	setp.lt.f32	%p89, %f133, 0f00800000;
	mul.f32 	%f540, %f133, 0f4B800000;
	selp.f32	%f541, 0fC3170000, 0fC2FE0000, %p89;
	selp.f32	%f542, %f540, %f133, %p89;
	mov.b32 	 %r268, %f542;
	and.b32  	%r269, %r268, 8388607;
	or.b32  	%r270, %r269, 1065353216;
	mov.b32 	 %f543, %r270;
	shr.u32 	%r271, %r268, 23;
	cvt.rn.f32.u32	%f544, %r271;
	add.f32 	%f545, %f541, %f544;
	setp.gt.f32	%p90, %f543, 0f3FB504F3;
	mul.f32 	%f546, %f543, 0f3F000000;
	add.f32 	%f547, %f545, 0f3F800000;
	selp.f32	%f548, %f546, %f543, %p90;
	selp.f32	%f549, %f547, %f545, %p90;
	add.f32 	%f550, %f548, 0fBF800000;
	add.f32 	%f536, %f548, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f535,%f536;
	// inline asm
	add.f32 	%f551, %f550, %f550;
	mul.f32 	%f552, %f535, %f551;
	mul.f32 	%f553, %f552, %f552;
	mov.f32 	%f554, 0f3C4CAF63;
	mov.f32 	%f555, 0f3B18F0FE;
	fma.rn.f32 	%f556, %f555, %f553, %f554;
	mov.f32 	%f557, 0f3DAAAABD;
	fma.rn.f32 	%f558, %f556, %f553, %f557;
	mul.rn.f32 	%f559, %f558, %f553;
	mul.rn.f32 	%f560, %f559, %f552;
	sub.f32 	%f561, %f550, %f552;
	neg.f32 	%f562, %f552;
	add.f32 	%f563, %f561, %f561;
	fma.rn.f32 	%f564, %f562, %f550, %f563;
	mul.rn.f32 	%f565, %f535, %f564;
	add.f32 	%f566, %f560, %f552;
	sub.f32 	%f567, %f552, %f566;
	add.f32 	%f568, %f560, %f567;
	add.f32 	%f569, %f565, %f568;
	add.f32 	%f570, %f566, %f569;
	sub.f32 	%f571, %f566, %f570;
	add.f32 	%f572, %f569, %f571;
	mov.f32 	%f573, 0f3F317200;
	mul.rn.f32 	%f574, %f549, %f573;
	mov.f32 	%f575, 0f35BFBE8E;
	mul.rn.f32 	%f576, %f549, %f575;
	add.f32 	%f577, %f574, %f570;
	sub.f32 	%f578, %f574, %f577;
	add.f32 	%f579, %f570, %f578;
	add.f32 	%f580, %f572, %f579;
	add.f32 	%f581, %f576, %f580;
	add.f32 	%f582, %f577, %f581;
	sub.f32 	%f583, %f577, %f582;
	add.f32 	%f584, %f581, %f583;
	mov.f32 	%f585, 0f3EE66666;
	mul.rn.f32 	%f586, %f585, %f582;
	neg.f32 	%f587, %f586;
	fma.rn.f32 	%f588, %f585, %f582, %f587;
	fma.rn.f32 	%f589, %f585, %f584, %f588;
	mov.f32 	%f590, 0f00000000;
	fma.rn.f32 	%f591, %f590, %f582, %f589;
	add.rn.f32 	%f592, %f586, %f591;
	neg.f32 	%f593, %f592;
	add.rn.f32 	%f594, %f586, %f593;
	add.rn.f32 	%f595, %f594, %f591;
	mov.b32 	 %r272, %f592;
	setp.eq.s32	%p91, %r272, 1118925336;
	add.s32 	%r273, %r272, -1;
	mov.b32 	 %f596, %r273;
	add.f32 	%f597, %f595, 0f37000000;
	selp.f32	%f598, %f596, %f592, %p91;
	selp.f32	%f134, %f597, %f595, %p91;
	mul.f32 	%f599, %f598, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f600, %f599;
	mov.f32 	%f601, 0fBF317200;
	fma.rn.f32 	%f602, %f600, %f601, %f598;
	mov.f32 	%f603, 0fB5BFBE8E;
	fma.rn.f32 	%f604, %f600, %f603, %f602;
	mul.f32 	%f605, %f604, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f606, %f605;
	add.f32 	%f607, %f600, 0f00000000;
	ex2.approx.f32 	%f608, %f607;
	mul.f32 	%f609, %f606, %f608;
	setp.lt.f32	%p92, %f598, 0fC2D20000;
	selp.f32	%f610, 0f00000000, %f609, %p92;
	setp.gt.f32	%p93, %f598, 0f42D20000;
	selp.f32	%f845, 0f7F800000, %f610, %p93;
	setp.eq.f32	%p94, %f845, 0f7F800000;
	@%p94 bra 	BB0_93;

	fma.rn.f32 	%f845, %f845, %f134, %f845;

BB0_93:
	setp.lt.f32	%p95, %f129, 0f00000000;
	setp.eq.f32	%p96, %f132, 0f3F800000;
	and.pred  	%p4, %p95, %p96;
	mov.b32 	 %r274, %f845;
	xor.b32  	%r275, %r274, -2147483648;
	mov.b32 	 %f611, %r275;
	selp.f32	%f847, %f611, %f845, %p4;
	setp.eq.f32	%p97, %f129, 0f00000000;
	@%p97 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f614, %f129, %f129;
	selp.f32	%f847, %f614, 0f00000000, %p96;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p98, %f129, 0f00000000;
	@%p98 bra 	BB0_97;

	cvt.rzi.f32.f32	%f613, %f585;
	setp.neu.f32	%p99, %f613, 0f3EE66666;
	selp.f32	%f847, 0f7FFFFFFF, %f847, %p99;

BB0_97:
	add.f32 	%f615, %f133, 0f3EE66666;
	mov.b32 	 %r276, %f615;
	setp.lt.s32	%p101, %r276, 2139095040;
	@%p101 bra 	BB0_102;

	setp.gtu.f32	%p102, %f133, 0f7F800000;
	@%p102 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f847, %f129, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p103, %f133, 0f7F800000;
	@%p103 bra 	BB0_102;

	selp.f32	%f847, 0fFF800000, 0f7F800000, %p4;

BB0_102:
	setp.eq.f32	%p104, %f129, 0f3F800000;
	selp.f32	%f145, 0f3F800000, %f847, %p104;
	abs.f32 	%f146, %f130;
	setp.lt.f32	%p105, %f146, 0f00800000;
	mul.f32 	%f618, %f146, 0f4B800000;
	selp.f32	%f619, 0fC3170000, 0fC2FE0000, %p105;
	selp.f32	%f620, %f618, %f146, %p105;
	mov.b32 	 %r277, %f620;
	and.b32  	%r278, %r277, 8388607;
	or.b32  	%r279, %r278, 1065353216;
	mov.b32 	 %f621, %r279;
	shr.u32 	%r280, %r277, 23;
	cvt.rn.f32.u32	%f622, %r280;
	add.f32 	%f623, %f619, %f622;
	setp.gt.f32	%p106, %f621, 0f3FB504F3;
	mul.f32 	%f624, %f621, 0f3F000000;
	add.f32 	%f625, %f623, 0f3F800000;
	selp.f32	%f626, %f624, %f621, %p106;
	selp.f32	%f627, %f625, %f623, %p106;
	add.f32 	%f628, %f626, 0fBF800000;
	add.f32 	%f617, %f626, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f616,%f617;
	// inline asm
	add.f32 	%f629, %f628, %f628;
	mul.f32 	%f630, %f616, %f629;
	mul.f32 	%f631, %f630, %f630;
	fma.rn.f32 	%f634, %f555, %f631, %f554;
	fma.rn.f32 	%f636, %f634, %f631, %f557;
	mul.rn.f32 	%f637, %f636, %f631;
	mul.rn.f32 	%f638, %f637, %f630;
	sub.f32 	%f639, %f628, %f630;
	neg.f32 	%f640, %f630;
	add.f32 	%f641, %f639, %f639;
	fma.rn.f32 	%f642, %f640, %f628, %f641;
	mul.rn.f32 	%f643, %f616, %f642;
	add.f32 	%f644, %f638, %f630;
	sub.f32 	%f645, %f630, %f644;
	add.f32 	%f646, %f638, %f645;
	add.f32 	%f647, %f643, %f646;
	add.f32 	%f648, %f644, %f647;
	sub.f32 	%f649, %f644, %f648;
	add.f32 	%f650, %f647, %f649;
	mul.rn.f32 	%f652, %f627, %f573;
	mul.rn.f32 	%f654, %f627, %f575;
	add.f32 	%f655, %f652, %f648;
	sub.f32 	%f656, %f652, %f655;
	add.f32 	%f657, %f648, %f656;
	add.f32 	%f658, %f650, %f657;
	add.f32 	%f659, %f654, %f658;
	add.f32 	%f660, %f655, %f659;
	sub.f32 	%f661, %f655, %f660;
	add.f32 	%f662, %f659, %f661;
	mul.rn.f32 	%f664, %f585, %f660;
	neg.f32 	%f665, %f664;
	fma.rn.f32 	%f666, %f585, %f660, %f665;
	fma.rn.f32 	%f667, %f585, %f662, %f666;
	fma.rn.f32 	%f669, %f590, %f660, %f667;
	add.rn.f32 	%f670, %f664, %f669;
	neg.f32 	%f671, %f670;
	add.rn.f32 	%f672, %f664, %f671;
	add.rn.f32 	%f673, %f672, %f669;
	mov.b32 	 %r281, %f670;
	setp.eq.s32	%p107, %r281, 1118925336;
	add.s32 	%r282, %r281, -1;
	mov.b32 	 %f674, %r282;
	add.f32 	%f675, %f673, 0f37000000;
	selp.f32	%f676, %f674, %f670, %p107;
	selp.f32	%f147, %f675, %f673, %p107;
	mul.f32 	%f677, %f676, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f678, %f677;
	fma.rn.f32 	%f680, %f678, %f601, %f676;
	fma.rn.f32 	%f682, %f678, %f603, %f680;
	mul.f32 	%f683, %f682, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f684, %f683;
	add.f32 	%f685, %f678, 0f00000000;
	ex2.approx.f32 	%f686, %f685;
	mul.f32 	%f687, %f684, %f686;
	setp.lt.f32	%p108, %f676, 0fC2D20000;
	selp.f32	%f688, 0f00000000, %f687, %p108;
	setp.gt.f32	%p109, %f676, 0f42D20000;
	selp.f32	%f848, 0f7F800000, %f688, %p109;
	setp.eq.f32	%p110, %f848, 0f7F800000;
	@%p110 bra 	BB0_104;

	fma.rn.f32 	%f848, %f848, %f147, %f848;

BB0_104:
	setp.lt.f32	%p111, %f130, 0f00000000;
	and.pred  	%p5, %p111, %p96;
	mov.b32 	 %r283, %f848;
	xor.b32  	%r284, %r283, -2147483648;
	mov.b32 	 %f689, %r284;
	selp.f32	%f850, %f689, %f848, %p5;
	setp.eq.f32	%p113, %f130, 0f00000000;
	@%p113 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f692, %f130, %f130;
	selp.f32	%f850, %f692, 0f00000000, %p96;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p114, %f130, 0f00000000;
	@%p114 bra 	BB0_108;

	cvt.rzi.f32.f32	%f691, %f585;
	setp.neu.f32	%p115, %f691, 0f3EE66666;
	selp.f32	%f850, 0f7FFFFFFF, %f850, %p115;

BB0_108:
	add.f32 	%f693, %f146, 0f3EE66666;
	mov.b32 	 %r285, %f693;
	setp.lt.s32	%p117, %r285, 2139095040;
	@%p117 bra 	BB0_113;

	setp.gtu.f32	%p118, %f146, 0f7F800000;
	@%p118 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f850, %f130, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p119, %f146, 0f7F800000;
	@%p119 bra 	BB0_113;

	selp.f32	%f850, 0fFF800000, 0f7F800000, %p5;

BB0_113:
	setp.eq.f32	%p120, %f130, 0f3F800000;
	selp.f32	%f158, 0f3F800000, %f850, %p120;
	abs.f32 	%f159, %f131;
	setp.lt.f32	%p121, %f159, 0f00800000;
	mul.f32 	%f696, %f159, 0f4B800000;
	selp.f32	%f697, 0fC3170000, 0fC2FE0000, %p121;
	selp.f32	%f698, %f696, %f159, %p121;
	mov.b32 	 %r286, %f698;
	and.b32  	%r287, %r286, 8388607;
	or.b32  	%r288, %r287, 1065353216;
	mov.b32 	 %f699, %r288;
	shr.u32 	%r289, %r286, 23;
	cvt.rn.f32.u32	%f700, %r289;
	add.f32 	%f701, %f697, %f700;
	setp.gt.f32	%p122, %f699, 0f3FB504F3;
	mul.f32 	%f702, %f699, 0f3F000000;
	add.f32 	%f703, %f701, 0f3F800000;
	selp.f32	%f704, %f702, %f699, %p122;
	selp.f32	%f705, %f703, %f701, %p122;
	add.f32 	%f706, %f704, 0fBF800000;
	add.f32 	%f695, %f704, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f694,%f695;
	// inline asm
	add.f32 	%f707, %f706, %f706;
	mul.f32 	%f708, %f694, %f707;
	mul.f32 	%f709, %f708, %f708;
	fma.rn.f32 	%f712, %f555, %f709, %f554;
	fma.rn.f32 	%f714, %f712, %f709, %f557;
	mul.rn.f32 	%f715, %f714, %f709;
	mul.rn.f32 	%f716, %f715, %f708;
	sub.f32 	%f717, %f706, %f708;
	neg.f32 	%f718, %f708;
	add.f32 	%f719, %f717, %f717;
	fma.rn.f32 	%f720, %f718, %f706, %f719;
	mul.rn.f32 	%f721, %f694, %f720;
	add.f32 	%f722, %f716, %f708;
	sub.f32 	%f723, %f708, %f722;
	add.f32 	%f724, %f716, %f723;
	add.f32 	%f725, %f721, %f724;
	add.f32 	%f726, %f722, %f725;
	sub.f32 	%f727, %f722, %f726;
	add.f32 	%f728, %f725, %f727;
	mul.rn.f32 	%f730, %f705, %f573;
	mul.rn.f32 	%f732, %f705, %f575;
	add.f32 	%f733, %f730, %f726;
	sub.f32 	%f734, %f730, %f733;
	add.f32 	%f735, %f726, %f734;
	add.f32 	%f736, %f728, %f735;
	add.f32 	%f737, %f732, %f736;
	add.f32 	%f738, %f733, %f737;
	sub.f32 	%f739, %f733, %f738;
	add.f32 	%f740, %f737, %f739;
	mul.rn.f32 	%f742, %f585, %f738;
	neg.f32 	%f743, %f742;
	fma.rn.f32 	%f744, %f585, %f738, %f743;
	fma.rn.f32 	%f745, %f585, %f740, %f744;
	fma.rn.f32 	%f747, %f590, %f738, %f745;
	add.rn.f32 	%f748, %f742, %f747;
	neg.f32 	%f749, %f748;
	add.rn.f32 	%f750, %f742, %f749;
	add.rn.f32 	%f751, %f750, %f747;
	mov.b32 	 %r290, %f748;
	setp.eq.s32	%p123, %r290, 1118925336;
	add.s32 	%r291, %r290, -1;
	mov.b32 	 %f752, %r291;
	add.f32 	%f753, %f751, 0f37000000;
	selp.f32	%f754, %f752, %f748, %p123;
	selp.f32	%f160, %f753, %f751, %p123;
	mul.f32 	%f755, %f754, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f756, %f755;
	fma.rn.f32 	%f758, %f756, %f601, %f754;
	fma.rn.f32 	%f760, %f756, %f603, %f758;
	mul.f32 	%f761, %f760, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f762, %f761;
	add.f32 	%f763, %f756, 0f00000000;
	ex2.approx.f32 	%f764, %f763;
	mul.f32 	%f765, %f762, %f764;
	setp.lt.f32	%p124, %f754, 0fC2D20000;
	selp.f32	%f766, 0f00000000, %f765, %p124;
	setp.gt.f32	%p125, %f754, 0f42D20000;
	selp.f32	%f851, 0f7F800000, %f766, %p125;
	setp.eq.f32	%p126, %f851, 0f7F800000;
	@%p126 bra 	BB0_115;

	fma.rn.f32 	%f851, %f851, %f160, %f851;

BB0_115:
	setp.lt.f32	%p127, %f131, 0f00000000;
	and.pred  	%p6, %p127, %p96;
	mov.b32 	 %r292, %f851;
	xor.b32  	%r293, %r292, -2147483648;
	mov.b32 	 %f767, %r293;
	selp.f32	%f853, %f767, %f851, %p6;
	setp.eq.f32	%p129, %f131, 0f00000000;
	@%p129 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f770, %f131, %f131;
	selp.f32	%f853, %f770, 0f00000000, %p96;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p130, %f131, 0f00000000;
	@%p130 bra 	BB0_119;

	cvt.rzi.f32.f32	%f769, %f585;
	setp.neu.f32	%p131, %f769, 0f3EE66666;
	selp.f32	%f853, 0f7FFFFFFF, %f853, %p131;

BB0_119:
	add.f32 	%f771, %f159, 0f3EE66666;
	mov.b32 	 %r294, %f771;
	setp.lt.s32	%p133, %r294, 2139095040;
	@%p133 bra 	BB0_124;

	setp.gtu.f32	%p134, %f159, 0f7F800000;
	@%p134 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f853, %f131, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p135, %f159, 0f7F800000;
	@%p135 bra 	BB0_124;

	selp.f32	%f853, 0fFF800000, 0f7F800000, %p6;

BB0_124:
	mov.u32 	%r326, 2;
	setp.eq.f32	%p136, %f131, 0f3F800000;
	selp.f32	%f772, 0f3F800000, %f853, %p136;
	cvt.u64.u32	%rd73, %r6;
	cvt.u64.u32	%rd72, %r5;
	mov.u64 	%rd76, image;
	cvta.global.u64 	%rd71, %rd76;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r326, %r104, %rd72, %rd73, %rd24, %rd24);
	// inline asm
	cvt.sat.f32.f32	%f773, %f772;
	mul.f32 	%f774, %f773, 0f437FFD71;
	cvt.rzi.u32.f32	%r297, %f774;
	cvt.sat.f32.f32	%f775, %f158;
	mul.f32 	%f776, %f775, 0f437FFD71;
	cvt.rzi.u32.f32	%r298, %f776;
	cvt.sat.f32.f32	%f777, %f145;
	mul.f32 	%f778, %f777, 0f437FFD71;
	cvt.rzi.u32.f32	%r299, %f778;
	cvt.u16.u32	%rs12, %r297;
	cvt.u16.u32	%rs13, %r299;
	cvt.u16.u32	%rs14, %r298;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd70], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r360, [imageEnabled];

BB0_125:
	and.b32  	%r300, %r360, 4;
	setp.eq.s32	%p137, %r300, 0;
	@%p137 bra 	BB0_137;

	ld.global.u32 	%r301, [additive];
	setp.eq.s32	%p138, %r301, 0;
	cvt.u64.u32	%rd15, %r5;
	cvt.u64.u32	%rd16, %r6;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f339;}

	// inline asm
	@%p138 bra 	BB0_128;

	mov.u32 	%r327, 2;
	mov.u64 	%rd89, image_HDR;
	cvta.global.u64 	%rd78, %rd89;
	mov.u32 	%r305, 8;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r327, %r305, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd77];
	// inline asm
	{  cvt.f32.f16 %f780, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f781, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f782, %rs25;}

	// inline asm
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd78, %r327, %r305, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	add.f32 	%f783, %f129, %f780;
	add.f32 	%f784, %f130, %f781;
	add.f32 	%f785, %f131, %f782;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f785;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f784;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f783;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_137;

BB0_128:
	mov.u32 	%r328, 2;
	mov.u64 	%rd96, image_HDR;
	cvta.global.u64 	%rd91, %rd96;
	mov.u32 	%r307, 8;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r328, %r307, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f131;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f130;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f129;}

	// inline asm
	st.v4.u16 	[%rd90], {%rs27, %rs28, %rs29, %rs16};

BB0_137:
	ret;
}


